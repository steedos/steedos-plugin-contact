{"version":3,"sources":["../../../src/utils/helpers.ts","../../src/index.ts","../../src/client4.ts","../../src/fetch_etag.ts","../../../src/utils/sentry.ts","../../src/sobject.ts","../../src/graphql.ts","../../../src/Context.tsx","../../../src/Form.tsx","../../../src/Table.tsx","../../../src/Object.tsx","../../../src/Root.tsx","../../../src/Provider.tsx","../../../src/Use.tsx","../../../../src/components/RecordDetailPage.tsx","../../../../src/components/Form.tsx","../../../../src/components/Form.config.tsx","../../../../src/components/Field.tsx","../../../../src/components/FieldObject.config.tsx","../../../../src/providers/FormContext.tsx","../../../../src/valueTypes/email.tsx","../../../../src/valueTypes/index.tsx","../../../../src/valueTypes/href.tsx","../../../../src/providers/FormProvider.tsx","../../../src/zh_CN.tsx","../../../src/en_US.tsx","../../../src/components/ObjectField.tsx","../../../src/components/ObjectForm.tsx","../../../src/components/ObjectField.config.tsx","../../../../../node_modules/style-inject/dist/style-inject.es.js","../../../src/components/ObjectTable.tsx","../../../src/components/ObjectTable.config.tsx","../../../src/components/ObjectTree.tsx","../../../src/components/ObjectTree.config.tsx","../../../src/components/ObjectList.tsx","../../../src/components/ObjectList.config.tsx","../../../src/components/ObjectExpandTable.tsx","../../../src/providers/ObjectContext.tsx","../../../src/components/SelectUserInput.tsx","../../../src/providers/ObjectProvider.tsx","../../../../src/providers/SteedosContext.tsx","../../../../src/providers/SteedosProvider.tsx","cookie.ts","App.tsx","accounts.ts","reportWebVitals.ts","index.tsx"],"names":["exports","buildQueryString","keys","query","i","length","key","encodeURIComponent","parameters","this","options","etag","index","url","substring","RootStoreContext","createContext","FormModel","id","types","name","required","readonly","boolean","mode","self","setMode","TableModel","identifier","ObjectModel","datasource","json","string","rootStore","currentObjectApiName","currentRecordId","forms","tables","objects","setCurrentObjectApiName","setCurrentRecordId","getCurrentObjectApiName","getCurrentRecordId","setInitialState","Object","StoreProvider","props","initialState","children","value","useMst","store","useContext","Error","observer","Form","formId","formItemLayout","layout","labelAlign","labelCol","span","wrapperCol","submitter","searchConfig","resetText","submitText","resetButtonProps","onClick","formProps","contentRender","items","PropTypes","initialValues","Field","context","React","formItemProps","style","borderBottom","fieldProps","valueType","width","ProFieldWrap","proFieldProps","emptyText","onInlineEdit","inlineIcon","color","opacity","_groupHover","role","onDoubleClick","flex","ProFormField","createField","label","FormContext","href","render","text","renderFormItem","placeholder","email","link","FormProvider","proContextValues","intl","getProLocale","valueTypeMap","antdContextValues","locale","getAntdLocale","getSteedosIntl","getMessageFromLocaleMap","paths","path","result","message","createSteedosIntl","getMessage","localeMap","zhCNIntl","form","save","cancel","enUSIntl","getFormFieldProps","_b","_c","rest","objectContext","objectApiName","recordId","filter","fields","results","useQueries","queryKey","queryFn","isLoadingObject","data1","isLoadingRecord","data2","object","records","registerObjectFieldComponent","_","record_1","fieldsChildrenDom","fieldMode_1","fieldItemProps","fieldName","field","onFinish","console","alert","fieldType","formFieldProps","ObjectField","useQuery","data","objectSchema","objectFieldMode","hidden","type","data_type","configObjectField","inputs","friendlyName","canHaveChildren","fieldNames","configInputs","enum","helperText","config","Builder","styleInject","css","ref","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","getProColumnProps","proColumnProps","ObjectTable","tableId","filters","onChange","useState","proColumns","setProColumns","useEffect","tmpProColumns_1","registerObjectTableComponent","objectFields_1","columnItem","proColumn","title","dataIndex","getObjectTableProColumn","selfTableRef","useRef","request","params","current","searchFilters","tableFilters","columnFields","n","a","pageSize","sort","success","total","columns","rowKey","rowSelection","pagination","hideOnSinglePage","actionRef","className","configObjectTable","subFields","defaultValue","ObjectTree","nameField","parentField","rootNodeValue","checkable","registerObjectTreeComponent","treeData","setTreeData","expandedKeys","setExpandedKeys","objectFields","enabled","td_1","ek_1","tp_1","_rootNodeValue_1","_id","d","parent","onExpand","onSelect","selectedNodes","configObjectTree","ObjectList","registerObjectListComponent","listData","setListData","selectedData","setSelectedData","dataSource","itemLayout","renderItem","record","tmpSelectedData","isCheckedIndex","handleItemClick","checked","configObjectList","ObjectExpandTable","selectedExpandNode","setSelectedExpandNode","handleExpandContentChange","tmpTreeNodes","tableRef","ids","expandProps","setExpandProps","expandDefine","expandType","expandReference","expandNameField","expandParentField","releatedColumnField","split","colSpan","ghost","selectedRowKeys","selectedRows","ObjectContext","Option","requestObject","requestRecords","updateRecord","insertRecord","ObjectProvider","_a","queryClient","client","SteedosContext","process","STEEDOS_LOCALE","SteedosProvider","rootUrl","tenantId","userId","authToken","user","steedosContextValues","objectProviderProps","getCookie","pattern","RegExp","matched","cookie","match","REACT_APP_STEEDOS_ROOT_URL","REACT_APP_STEEDOS_TENANT_ID","REACT_APP_STEEDOS_USER_ID","REACT_APP_STEEDOS_AUTH_TOKEN","REACT_APP_STEEDOS_LOCALE","App","queryObject","queryString","parse","window","location","search","slice","providerProps","rooturl","spaceid","userid","authtoken","selectedUser","setSelectedUsers","selectedUserInTab1","setSelectedUsersInTab1","selectedUserInTab2","setSelectedUsersInTab2","bordered","headerBordered","tabs","TabPane","tab","users","sorter","hideInTable","height","bodyStyle","display","justifyContent","alignItems","disabled","opener","postMessage","selection","map","close","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.33790fd2.chunk.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.buildQueryString = void 0;\r\nfunction buildQueryString(parameters) {\r\n    var keys = Object.keys(parameters);\r\n    if (keys.length === 0) {\r\n        return '';\r\n    }\r\n    var query = '?';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        var key = keys[i];\r\n        query += key + '=' + encodeURIComponent(parameters[key]);\r\n        if (i < keys.length - 1) {\r\n            query += '&';\r\n        }\r\n    }\r\n    return query;\r\n}\r\nexports.buildQueryString = buildQueryString;\r\n//# sourceMappingURL=helpers.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HEADER_X_VERSION_ID = exports.DEFAULT_LIMIT_BEFORE = exports.DEFAULT_LIMIT_AFTER = exports.SteedosClient = void 0;\r\nvar client4_1 = __importStar(require(\"./client4\"));\r\nexports.SteedosClient = client4_1.default;\r\nObject.defineProperty(exports, \"DEFAULT_LIMIT_AFTER\", { enumerable: true, get: function () { return client4_1.DEFAULT_LIMIT_AFTER; } });\r\nObject.defineProperty(exports, \"DEFAULT_LIMIT_BEFORE\", { enumerable: true, get: function () { return client4_1.DEFAULT_LIMIT_BEFORE; } });\r\nObject.defineProperty(exports, \"HEADER_X_VERSION_ID\", { enumerable: true, get: function () { return client4_1.HEADER_X_VERSION_ID; } });\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ClientError = exports.DEFAULT_LIMIT_AFTER = exports.DEFAULT_LIMIT_BEFORE = exports.HEADER_X_VERSION_ID = void 0;\r\nvar fetch_etag_1 = __importDefault(require(\"./fetch_etag\"));\r\nvar sentry_1 = require(\"./utils/sentry\");\r\nvar helpers_1 = require(\"./utils/helpers\");\r\nvar sobject_1 = __importDefault(require(\"./sobject\"));\r\nvar graphql_1 = __importDefault(require(\"./graphql\"));\r\nvar HEADER_AUTH = 'Authorization';\r\nvar HEADER_BEARER = 'Bearer';\r\nvar HEADER_REQUESTED_WITH = 'X-Requested-With';\r\nvar HEADER_USER_AGENT = 'User-Agent';\r\nvar HEADER_X_CLUSTER_ID = 'X-Cluster-Id';\r\nvar HEADER_X_CSRF_TOKEN = 'X-CSRF-Token';\r\nexports.HEADER_X_VERSION_ID = 'X-Version-Id';\r\nvar PER_PAGE_DEFAULT = 60;\r\nvar LOGS_PER_PAGE_DEFAULT = 10000;\r\nexports.DEFAULT_LIMIT_BEFORE = 30;\r\nexports.DEFAULT_LIMIT_AFTER = 30;\r\nvar DEFAULT_LOGIN_EXPIRATION_DAYS = 90;\r\nvar LOGIN_UNEXPIRING_TOKEN_DAYS = 365 * 100;\r\nvar SteedosClient = /** @class */ (function () {\r\n    function SteedosClient() {\r\n        var _this = this;\r\n        this.LOGIN_TOKEN_KEY = \"Meteor.loginToken\";\r\n        this.LOGIN_TOKEN_EXPIRES_KEY = \"Meteor.loginTokenExpires\";\r\n        this.USER_ID_KEY = \"Meteor.userId\";\r\n        this.logToConsole = false;\r\n        this._lastLoginTokenWhenPolled = null;\r\n        this.loginExpirationInDays = null;\r\n        this.serverVersion = '';\r\n        this.clusterId = '';\r\n        this.token = '';\r\n        this.spaceId = '';\r\n        this.authToken = '';\r\n        this.csrf = '';\r\n        this.url = (process.env.NODE_ENV == 'development' && process.env.REACT_APP_API_URL) ? process.env.REACT_APP_API_URL : '';\r\n        this.urlVersion = '';\r\n        this.userAgent = null;\r\n        this.enableLogging = false;\r\n        this.defaultHeaders = {\r\n            'Content-Type': 'application/json'\r\n        };\r\n        this.userId = '';\r\n        this.diagnosticId = '';\r\n        this.includeCookies = true;\r\n        this.isRudderKeySet = false;\r\n        this.translations = {\r\n            connectionError: 'There appears to be a problem with your internet connection.',\r\n            unknownError: 'We received an unexpected status code from the server.',\r\n        };\r\n        this.sobjects = {};\r\n        this.graphql = new graphql_1.default(this);\r\n        this.getTranslations = function (url) {\r\n            return _this.doFetch(url, { method: 'get' });\r\n        };\r\n        this.logClientError = function (message, level) {\r\n            // const url = `${this.getBaseRoute()}/logs`;\r\n            if (level === void 0) { level = 'ERROR'; }\r\n            // if (!this.enableLogging) {\r\n            //     throw new ClientError(this.getUrl(), {\r\n            //         message: 'Logging disabled.',\r\n            //         url,\r\n            //     });\r\n            // }\r\n            // return this.doFetch<{\r\n            //     message: string;\r\n            // }>(\r\n            //     url,\r\n            //     {method: 'post', body: JSON.stringify({message, level})},\r\n            // );\r\n        };\r\n        this.login = function (user, password, token, deviceId) {\r\n            if (token === void 0) { token = ''; }\r\n            if (deviceId === void 0) { deviceId = ''; }\r\n            _this.trackEvent('api', 'api_users_login');\r\n            var body = {\r\n                device_id: deviceId,\r\n                user: user,\r\n                password: password,\r\n                token: token,\r\n                locale: \"zh-cn\"\r\n            };\r\n            return _this.doFetch(_this.getAccountsRoute() + \"/password/login\", { method: 'POST', body: JSON.stringify(body) });\r\n        };\r\n        this.createUser = function (user, token, inviteId, redirect) {\r\n            _this.trackEvent('api', 'api_users_createUser');\r\n            var queryParams = {};\r\n            if (token) {\r\n                queryParams.t = token;\r\n            }\r\n            if (inviteId) {\r\n                queryParams.iid = inviteId;\r\n            }\r\n            if (redirect) {\r\n                queryParams.r = redirect;\r\n            }\r\n            var auth = _this.doFetch(_this.getAccountsRoute() + \"/password/register\" + helpers_1.buildQueryString(queryParams), { method: 'POST', body: JSON.stringify(user) });\r\n            return auth;\r\n        };\r\n        this.createSpace = function (name) {\r\n            _this.trackEvent('api', 'api_users_createTenant');\r\n            var queryParams = {};\r\n            var auth = _this.doFetch(_this.getBaseRoute() + \"/api/v4/spaces/register/tenant\" + helpers_1.buildQueryString(queryParams), { method: 'POST', body: JSON.stringify({ name: name }) });\r\n            return auth;\r\n        };\r\n        this.sendVerificationToken = function (user) {\r\n            _this.trackEvent('api', 'api_users_verify');\r\n            var body = {\r\n                user: user,\r\n            };\r\n            return _this.doFetch(_this.getAccountsRoute() + \"/password/sendVerificationCode\", { method: 'POST', body: JSON.stringify(body) });\r\n        };\r\n        this.getSettings = function () {\r\n            return _this.doFetch(_this.getAccountsRoute() + \"/settings\", { method: 'get' });\r\n        };\r\n        this.getMe = function () {\r\n            return _this.doFetch(_this.getAccountsRoute() + \"/user\", { method: 'get' });\r\n        };\r\n        this.getMySpaces = function () {\r\n            return _this.doFetch(_this.getAccountsRoute() + \"/user/spaces\", { method: 'get' });\r\n        };\r\n        this.logout = function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.trackEvent('api', 'api_users_logout');\r\n                        return [4 /*yield*/, this.doFetchWithResponse(this.getAccountsRoute() + \"/logout\", { method: 'post' })];\r\n                    case 1:\r\n                        response = (_a.sent()).response;\r\n                        if (response.ok) {\r\n                            this.token = '';\r\n                        }\r\n                        this.serverVersion = '';\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        }); };\r\n        // Client Helpers\r\n        this.doFetch = function (url, options) { return __awaiter(_this, void 0, void 0, function () {\r\n            var data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.doFetchWithResponse(url, options)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2 /*return*/, data];\r\n                }\r\n            });\r\n        }); };\r\n        this.doFetchWithResponse = function (url, options) { return __awaiter(_this, void 0, void 0, function () {\r\n            var response, headers, data, err_1, serverVersion, clusterId, error, msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, fetch_etag_1.default(url, this.getOptions(options))];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        headers = parseAndMergeNestedHeaders(response.headers);\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        data = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_1 = _a.sent();\r\n                        throw new ClientError(this.getUrl(), {\r\n                            message: 'Received invalid response from the server.',\r\n                            intl: {\r\n                                id: 'mobile.request.invalid_response',\r\n                                defaultMessage: 'Received invalid response from the server.',\r\n                            },\r\n                            url: url,\r\n                        });\r\n                    case 5:\r\n                        if (headers.has(exports.HEADER_X_VERSION_ID) && !headers.get('Cache-Control')) {\r\n                            serverVersion = headers.get(exports.HEADER_X_VERSION_ID);\r\n                            if (serverVersion && this.serverVersion !== serverVersion) {\r\n                                this.serverVersion = serverVersion;\r\n                            }\r\n                        }\r\n                        if (headers.has(HEADER_X_CLUSTER_ID)) {\r\n                            clusterId = headers.get(HEADER_X_CLUSTER_ID);\r\n                            if (clusterId && this.clusterId !== clusterId) {\r\n                                this.clusterId = clusterId;\r\n                            }\r\n                        }\r\n                        if (response.ok) {\r\n                            return [2 /*return*/, {\r\n                                    response: response,\r\n                                    headers: headers,\r\n                                    data: data,\r\n                                }];\r\n                        }\r\n                        error = data && data.error ? data.error : data;\r\n                        msg = error.message || '';\r\n                        if (this.logToConsole) {\r\n                            console.error(msg); // eslint-disable-line no-console\r\n                        }\r\n                        throw new ClientError(this.getUrl(), {\r\n                            message: msg,\r\n                            server_error_id: data.id,\r\n                            status_code: error.code,\r\n                            url: url,\r\n                        });\r\n                }\r\n            });\r\n        }); };\r\n        this.changePassword = function (oldPassword, newPassword) {\r\n            return _this.doFetch(_this.getAccountsRoute() + \"/password/changePassword\", { method: 'POST', body: JSON.stringify({\r\n                    oldPassword: oldPassword,\r\n                    newPassword: newPassword,\r\n                }) });\r\n        };\r\n        this.verifyEmail = function (email, code) {\r\n            return _this.doFetch(_this.getAccountsRoute() + \"/password/verify/email\", { method: 'POST', body: JSON.stringify({\r\n                    email: email,\r\n                    code: code,\r\n                }) });\r\n        };\r\n        this.verifyMobile = function (mobile, code) {\r\n            return _this.doFetch(_this.getAccountsRoute() + \"/password/verify/mobile\", { method: 'POST', body: JSON.stringify({\r\n                    mobile: mobile,\r\n                    code: code,\r\n                }) });\r\n        };\r\n        this.sobject = function (objectName) {\r\n            this.sobjects = this.sobjects || {};\r\n            var sobject = this.sobjects[objectName] = this.sobjects[objectName] || new sobject_1.default(this, objectName);\r\n            return sobject;\r\n        };\r\n        // graphql = function(){\r\n        //     if(!this._graphql){\r\n        //         this._graphql = new Graphql(this);\r\n        //     }\r\n        //     return this._graphql;\r\n        // }\r\n        // _initLocalStorage(ROOT_URL_PATH_PREFIX){\r\n        //     if (ROOT_URL_PATH_PREFIX) {\r\n        //         let namespace = `:${ROOT_URL_PATH_PREFIX}`;\r\n        //         this.LOGIN_TOKEN_KEY += namespace;\r\n        //         this.LOGIN_TOKEN_EXPIRES_KEY += namespace;\r\n        //         this.USER_ID_KEY += namespace;\r\n        //       }\r\n        // }\r\n        // _getTokenLifetimeMs() {\r\n        //     const loginExpirationInDays = (this.loginExpirationInDays === null) ? LOGIN_UNEXPIRING_TOKEN_DAYS : this.loginExpirationInDays;\r\n        //     return (loginExpirationInDays || DEFAULT_LOGIN_EXPIRATION_DAYS) * 24 * 60 * 60 * 1000;\r\n        // }\r\n        // _tokenExpiration(when) {\r\n        //     return new Date((new Date(when)).getTime() + this._getTokenLifetimeMs());\r\n        // }\r\n        // _storeLoginToken(userId, token, tokenExpires) {\r\n        //     localStorage.setItem(this.USER_ID_KEY, userId);\r\n        //     localStorage.setItem(this.LOGIN_TOKEN_KEY, token);\r\n        //     if (! tokenExpires)\r\n        //       tokenExpires = this._tokenExpiration(new Date());\r\n        //       localStorage.setItem(this.LOGIN_TOKEN_EXPIRES_KEY, tokenExpires);\r\n        //     this._lastLoginTokenWhenPolled = token;\r\n        //   };\r\n        // _unstoreLoginToken() {\r\n        //     localStorage.removeItem(this.USER_ID_KEY);\r\n        //     localStorage.removeItem(this.LOGIN_TOKEN_KEY);\r\n        //     localStorage.removeItem(this.LOGIN_TOKEN_EXPIRES_KEY);\r\n        //     this._lastLoginTokenWhenPolled = null;\r\n        // };\r\n    }\r\n    SteedosClient.prototype.getUrl = function () {\r\n        if (!this.url) {\r\n            var href = new URL(window.location.href);\r\n            var foo = href.pathname.split('/accounts');\r\n            var ROOT_URL_PATH_PREFIX = '';\r\n            if (foo.length > 1) {\r\n                ROOT_URL_PATH_PREFIX = foo[0];\r\n            }\r\n            return ROOT_URL_PATH_PREFIX;\r\n        }\r\n        return this.url;\r\n    };\r\n    SteedosClient.prototype.getAbsoluteUrl = function (baseUrl) {\r\n        if (typeof baseUrl !== 'string' || !baseUrl.startsWith('/')) {\r\n            return baseUrl;\r\n        }\r\n        return this.getUrl() + baseUrl;\r\n    };\r\n    SteedosClient.prototype.setUrl = function (url) {\r\n        this.url = url;\r\n    };\r\n    SteedosClient.prototype.setUserAgent = function (userAgent) {\r\n        this.userAgent = userAgent;\r\n    };\r\n    SteedosClient.prototype.getToken = function () {\r\n        return this.token;\r\n    };\r\n    SteedosClient.prototype.setToken = function (token) {\r\n        this.token = token;\r\n        this.authToken = this.getSpaceId() + ',' + token;\r\n    };\r\n    SteedosClient.prototype.getSpaceId = function () {\r\n        return this.spaceId;\r\n    };\r\n    SteedosClient.prototype.setSpaceId = function (spaceId) {\r\n        this.spaceId = spaceId;\r\n        this.authToken = spaceId + ',' + this.getToken();\r\n    };\r\n    SteedosClient.prototype.getAuthToken = function () {\r\n        // return this.getSpaceId() + ',' + this.getToken();\r\n        return this.authToken;\r\n    };\r\n    SteedosClient.prototype.setCSRF = function (csrfToken) {\r\n        this.csrf = csrfToken;\r\n    };\r\n    SteedosClient.prototype.setAcceptLanguage = function (locale) {\r\n        this.defaultHeaders['Accept-Language'] = locale;\r\n    };\r\n    SteedosClient.prototype.setEnableLogging = function (enable) {\r\n        this.enableLogging = enable;\r\n    };\r\n    SteedosClient.prototype.setIncludeCookies = function (include) {\r\n        this.includeCookies = include;\r\n    };\r\n    SteedosClient.prototype.setUserId = function (userId) {\r\n        this.userId = userId;\r\n    };\r\n    SteedosClient.prototype.setUserRoles = function (roles) {\r\n        this.userRoles = roles;\r\n    };\r\n    SteedosClient.prototype.setDiagnosticId = function (diagnosticId) {\r\n        this.diagnosticId = diagnosticId;\r\n    };\r\n    SteedosClient.prototype.enableRudderEvents = function () {\r\n        this.isRudderKeySet = true;\r\n    };\r\n    SteedosClient.prototype.getServerVersion = function () {\r\n        return this.serverVersion;\r\n    };\r\n    SteedosClient.prototype.getUrlVersion = function () {\r\n        return this.urlVersion;\r\n    };\r\n    SteedosClient.prototype.getBaseRoute = function () {\r\n        return \"\" + this.getUrl() + this.urlVersion;\r\n    };\r\n    SteedosClient.prototype.getAccountsRoute = function () {\r\n        return this.getBaseRoute() + \"/accounts\";\r\n    };\r\n    SteedosClient.prototype.getBootstrapRoute = function () {\r\n        return this.getUrl() + \"/api/bootstrap/\" + this.getSpaceId();\r\n    };\r\n    SteedosClient.prototype.getCSRFFromCookie = function () {\r\n        if (typeof document !== 'undefined' && typeof document.cookie !== 'undefined') {\r\n            var cookies = document.cookie.split(';');\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i].trim();\r\n                if (cookie.startsWith('MMCSRF=')) {\r\n                    return cookie.replace('MMCSRF=', '');\r\n                }\r\n            }\r\n        }\r\n        return '';\r\n    };\r\n    SteedosClient.prototype.getOptions = function (options) {\r\n        var _a;\r\n        var newOptions = __assign({}, options);\r\n        var headers = __assign((_a = {}, _a[HEADER_REQUESTED_WITH] = 'XMLHttpRequest', _a), this.defaultHeaders);\r\n        if (this.authToken) {\r\n            headers[HEADER_AUTH] = HEADER_BEARER + \" \" + this.authToken;\r\n        }\r\n        var csrfToken = this.csrf || this.getCSRFFromCookie();\r\n        if (options.method && options.method.toLowerCase() !== 'get' && csrfToken) {\r\n            headers[HEADER_X_CSRF_TOKEN] = csrfToken;\r\n        }\r\n        if (this.includeCookies) {\r\n            newOptions.credentials = 'include';\r\n        }\r\n        if (this.userAgent) {\r\n            headers[HEADER_USER_AGENT] = this.userAgent;\r\n        }\r\n        if (newOptions.headers) {\r\n            Object.assign(headers, newOptions.headers);\r\n        }\r\n        return __assign(__assign({}, newOptions), { headers: headers });\r\n    };\r\n    SteedosClient.prototype.trackEvent = function (category, event, props) {\r\n        if (!this.isRudderKeySet) {\r\n            return;\r\n        }\r\n        var properties = Object.assign({\r\n            category: category,\r\n            type: event,\r\n            // user_actual_role: this.userRoles && isSystemAdmin(this.userRoles) ? 'system_admin, system_user' : 'system_user',\r\n            user_actual_id: this.userId,\r\n        }, props);\r\n        var options = {\r\n            context: {\r\n                ip: '0.0.0.0',\r\n            },\r\n            page: {\r\n                path: '',\r\n                referrer: '',\r\n                search: '',\r\n                title: '',\r\n                url: '',\r\n            },\r\n            anonymousId: '00000000000000000000000000',\r\n        };\r\n        // rudderAnalytics.track('event', properties, options);\r\n    };\r\n    return SteedosClient;\r\n}());\r\nexports.default = SteedosClient;\r\nfunction parseAndMergeNestedHeaders(originalHeaders) {\r\n    var headers = new Map();\r\n    var nestedHeaders = new Map();\r\n    originalHeaders.forEach(function (val, key) {\r\n        var capitalizedKey = key.replace(/\\b[a-z]/g, function (l) { return l.toUpperCase(); });\r\n        var realVal = val;\r\n        if (val && val.match(/\\n\\S+:\\s\\S+/)) {\r\n            var nestedHeaderStrings = val.split('\\n');\r\n            realVal = nestedHeaderStrings.shift();\r\n            var moreNestedHeaders = new Map(nestedHeaderStrings.map(function (h) { return h.split(/:\\s/); }));\r\n            nestedHeaders = new Map(__spreadArray(__spreadArray([], __read(nestedHeaders)), __read(moreNestedHeaders)));\r\n        }\r\n        headers.set(capitalizedKey, realVal);\r\n    });\r\n    return new Map(__spreadArray(__spreadArray([], __read(headers)), __read(nestedHeaders)));\r\n}\r\nvar ClientError = /** @class */ (function (_super) {\r\n    __extends(ClientError, _super);\r\n    function ClientError(baseUrl, data) {\r\n        var _this = _super.call(this, data.message + ': ' + sentry_1.cleanUrlForLogging(baseUrl, data.url || '')) || this;\r\n        _this.message = data.message;\r\n        _this.url = data.url;\r\n        _this.intl = data.intl;\r\n        _this.server_error_id = data.server_error_id;\r\n        _this.status_code = data.status_code;\r\n        // Ensure message is treated as a property of this class when object spreading. Without this,\r\n        // copying the object by using `{...error}` would not include the message.\r\n        Object.defineProperty(_this, 'message', { enumerable: true });\r\n        return _this;\r\n    }\r\n    return ClientError;\r\n}(Error));\r\nexports.ClientError = ClientError;\r\n//# sourceMappingURL=client4.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar fetch = require('node-fetch');\r\nvar data = {};\r\nvar etags = {};\r\nexports.default = (function (url, options) {\r\n    if (url === void 0) { url = null; }\r\n    if (options === void 0) { options = { headers: {} }; }\r\n    url = url || options.url; // eslint-disable-line no-param-reassign\r\n    if (options.method === 'GET' || !options.method) {\r\n        var etag = etags[url];\r\n        var cachedResponse_1 = data[\"\" + url + etag]; // ensure etag is for url\r\n        if (etag) {\r\n            options.headers['If-None-Match'] = etag;\r\n        }\r\n        return fetch(url, options).\r\n            then(function (response) {\r\n            if (response.status === 304) {\r\n                return cachedResponse_1.clone();\r\n            }\r\n            if (response.status === 200) {\r\n                var responseEtag = response.headers.get('Etag');\r\n                if (responseEtag) {\r\n                    data[\"\" + url + responseEtag] = response.clone();\r\n                    etags[url] = responseEtag;\r\n                }\r\n            }\r\n            return response;\r\n        });\r\n    }\r\n    // all other requests go straight to fetch\r\n    return Reflect.apply(fetch, undefined, [url, options]); //eslint-disable-line no-undefined\r\n});\r\n//# sourceMappingURL=fetch_etag.js.map","\"use strict\";\r\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n// @flow\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.cleanUrlForLogging = void 0;\r\n// Given a URL from an API request, return a URL that has any parts removed that are either sensitive or that would\r\n// prevent properly grouping the messages in Sentry.\r\nfunction cleanUrlForLogging(baseUrl, apiUrl) {\r\n    var url = apiUrl;\r\n    // Trim the host name\r\n    url = url.substring(baseUrl.length);\r\n    // Filter the query string\r\n    var index = url.indexOf('?');\r\n    if (index !== -1) {\r\n        url = url.substring(0, index);\r\n    }\r\n    // A non-exhaustive whitelist to exclude parts of the URL that are unimportant (eg IDs) or may be sentsitive\r\n    // (eg email addresses). We prefer filtering out fields that aren't recognized because there should generally\r\n    // be enough left over for debugging.\r\n    //\r\n    // Note that new API routes don't need to be added here since this shouldn't be happening for newly added routes.\r\n    var whitelist = [\r\n        'api', 'v4', 'users', 'teams', 'scheme', 'name', 'members', 'channels', 'posts', 'reactions', 'commands',\r\n        'files', 'preferences', 'hooks', 'incoming', 'outgoing', 'oauth', 'apps', 'emoji', 'brand', 'image',\r\n        'data_retention', 'jobs', 'plugins', 'roles', 'system', 'timezones', 'schemes', 'redirect_location', 'patch',\r\n        'mfa', 'password', 'reset', 'send', 'active', 'verify', 'terms_of_service', 'login', 'logout', 'ids',\r\n        'usernames', 'me', 'username', 'email', 'default', 'sessions', 'revoke', 'all', 'audits', 'device', 'status',\r\n        'search', 'switch', 'authorized', 'authorize', 'deauthorize', 'tokens', 'disable', 'enable', 'exists', 'unread',\r\n        'invite', 'batch', 'stats', 'import', 'schemeRoles', 'direct', 'group', 'convert', 'view', 'search_autocomplete',\r\n        'thread', 'info', 'flagged', 'pinned', 'pin', 'unpin', 'opengraph', 'actions', 'thumbnail', 'preview', 'link',\r\n        'delete', 'logs', 'ping', 'config', 'client', 'license', 'websocket', 'webrtc', 'token', 'regen_token',\r\n        'autocomplete', 'execute', 'regen_secret', 'policy', 'type', 'cancel', 'reload', 'environment', 's3_test', 'file',\r\n        'caches', 'invalidate', 'database', 'recycle', 'compliance', 'reports', 'cluster', 'ldap', 'test', 'sync', 'saml',\r\n        'certificate', 'public', 'private', 'idp', 'elasticsearch', 'purge_indexes', 'analytics', 'old', 'webapp', 'fake',\r\n    ];\r\n    url = url.split('/').map(function (part) {\r\n        if (part !== '' && whitelist.indexOf(part) === -1) {\r\n            return '<filtered>';\r\n        }\r\n        return part;\r\n    }).join('/');\r\n    if (index !== -1) {\r\n        // Add this on afterwards since it wouldn't pass the whitelist\r\n        url += '?<filtered>';\r\n    }\r\n    return url;\r\n}\r\nexports.cleanUrlForLogging = cleanUrlForLogging;\r\n//# sourceMappingURL=sentry.js.map","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar filters_1 = require(\"@steedos/filters\");\r\nvar helpers_1 = require(\"./utils/helpers\");\r\nvar _ = require('underscore');\r\nvar SObject = /** @class */ (function () {\r\n    function SObject(client, objectName) {\r\n        this.client = client;\r\n        this.objectName = objectName;\r\n    }\r\n    SObject.prototype.getFilter = function (filters) {\r\n        if (_.isArray(filters)) {\r\n            return filters_1.formatFiltersToODataQuery(filters);\r\n        }\r\n        return filters;\r\n    };\r\n    SObject.prototype.getSelect = function (fields) {\r\n        if (_.isArray(fields)) {\r\n            return fields.toString();\r\n        }\r\n        return fields;\r\n    };\r\n    SObject.prototype.getQueryParams = function (filters, fields, options) {\r\n        var params = {};\r\n        var $filter = this.getFilter(filters);\r\n        if ($filter) {\r\n            params.$filter = $filter;\r\n        }\r\n        var $select = this.getSelect(fields);\r\n        if ($select) {\r\n            params.$select = $select;\r\n        }\r\n        if (options) {\r\n            if (options.pageSize) {\r\n                params.$top = options.pageSize;\r\n            }\r\n            if (options.current) {\r\n                params.$skip = options.current * options.pageSize;\r\n            }\r\n            if (typeof options.sort === 'string') {\r\n                params.$orderby = options.sort;\r\n            }\r\n        }\r\n        // $top?: Number,\r\n        // $skip?: Number,\r\n        // $orderby?: Number,\r\n        //   pageSize: number,\r\n        //   current: number,\r\n        //   sort: any\r\n        return params;\r\n    };\r\n    SObject.prototype.getConfig = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!!this.config) return [3 /*break*/, 2];\r\n                        url = this.client.getBootstrapRoute() + \"/\" + this.objectName;\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.client.doFetch(url, { method: 'get' })];\r\n                    case 1:\r\n                        _a.config = _b.sent();\r\n                        _b.label = 2;\r\n                    case 2: return [2 /*return*/, this.config];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Find and fetch records which matches given conditions\r\n     *\r\n     * @param {String|Array} [filters] - filtering records\r\n     * @param {String|Array} [fields] - Fields to fetch.\r\n     * @param {Object} [options] - Query options.\r\n     * @param {Number} [options.$top] - Maximum number of records the query will return.\r\n     * @param {Number} [options.$skip] - Synonym of options.offset.\r\n     * @param {String} [options.$orderby] - sorting.\r\n     * @param {boolean} [options.$count] - count.\r\n     * @returns {Promise<Array<Record>>}\r\n     */\r\n    SObject.prototype.find = function (filters, fields, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var params, url, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        params = this.getQueryParams(filters, fields, options);\r\n                        url = this.client.getBaseRoute() + \"/api/v4/\".concat(this.objectName) + helpers_1.buildQueryString(params);\r\n                        return [4 /*yield*/, this.client.doFetch(url, { method: 'get' })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * TODO 根据条件查询数据，返回1条($top = 1)。\r\n     * @param filters\r\n     * @param fields\r\n     * @param options\r\n     * @returns {Promise<Record>}\r\n     */\r\n    SObject.prototype.findOne = function (filters, fields, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * TODO 根据id查询数据。\r\n     * @param id\r\n     * @param fields\r\n     */\r\n    SObject.prototype.record = function (id, fields) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * TODO 根据ids查询数据。\r\n     * @param ids\r\n     * @param fields\r\n     */\r\n    SObject.prototype.retrieve = function (ids, fields) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * TODO 写入数据，并返回新记录\r\n     * @param data\r\n     */\r\n    SObject.prototype.insert = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.client.getBaseRoute() + \"/api/v4/\" + this.objectName;\r\n                        return [4 /*yield*/, this.client.doFetch(url, { method: 'POST', body: JSON.stringify(data) })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result.value];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * TODO 根据id，修改记录，并返回新记录\r\n     * @param id\r\n     * @param data\r\n     */\r\n    SObject.prototype.update = function (id, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.client.getBaseRoute() + \"/api/v4/\" + this.objectName + \"/\" + id;\r\n                        return [4 /*yield*/, this.client.doFetch(url, { method: 'put', body: JSON.stringify(data) })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result.value];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * TODO 根据id, 删除记录\r\n     * @param id\r\n     */\r\n    SObject.prototype.delete = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * TODO 返回满足条件的记录数\r\n     * @param filters\r\n     */\r\n    SObject.prototype.count = function (filters) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return SObject;\r\n}());\r\nexports.default = SObject;\r\n//# sourceMappingURL=sobject.js.map","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _ = require('underscore');\r\nvar Graphql = /** @class */ (function () {\r\n    function Graphql(client) {\r\n        this.client = client;\r\n    }\r\n    Graphql.prototype.query = function (query) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, body;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.client.getBaseRoute() + \"/graphql\";\r\n                        body = {\r\n                            query: query\r\n                        };\r\n                        return [4 /*yield*/, this.client.doFetch(url, { method: 'POST', body: JSON.stringify(body) })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Graphql.prototype.insert = function (objectName, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, _data, body;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.client.getBaseRoute() + \"/graphql\";\r\n                        _data = data;\r\n                        if (!_.isString(_data)) {\r\n                            _data = JSON.stringify(data);\r\n                        }\r\n                        body = {\r\n                            query: \"mutation {\\n                \" + objectName + \"__insert(data:\" + _data + \")\\n            }\"\r\n                        };\r\n                        console.log('insert body', body);\r\n                        return [4 /*yield*/, this.client.doFetch(url, { method: 'POST', body: JSON.stringify(body) })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Graphql.prototype.update = function (objectName, _id, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, _data, body;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.client.getBaseRoute() + \"/graphql\";\r\n                        _data = data;\r\n                        if (!_.isString(_data)) {\r\n                            _data = JSON.stringify(data);\r\n                        }\r\n                        body = {\r\n                            query: \"mutation {\\n                \" + objectName + \"__update(_id:\\\"\" + _id + \"\\\", data:\" + _data + \")\\n            }\"\r\n                        };\r\n                        return [4 /*yield*/, this.client.doFetch(url, { method: 'POST', body: JSON.stringify(body) })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Graphql.prototype.delete = function (objectName, _id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, body;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.client.getBaseRoute() + \"/graphql\";\r\n                        body = {\r\n                            query: \"mutation {\\n                \" + objectName + \"__delete(_id:\\\"\" + _id + \"\\\")\\n            }\"\r\n                        };\r\n                        return [4 /*yield*/, this.client.doFetch(url, { method: 'POST', body: JSON.stringify(body) })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Graphql;\r\n}());\r\nexports.default = Graphql;\r\n//# sourceMappingURL=graphql.js.map","import React, {createContext} from \"react\";\r\nimport {RootInstance} from \"./Root\";\r\n\r\nexport const RootStoreContext = createContext<null | RootInstance>(null);\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nexport const FormFieldModel = types.model({\r\n  id: types.identifier,\r\n  name: types.string,\r\n  required: types.boolean,\r\n  readonly: types.boolean,\r\n})\r\n\r\nexport const FormModel = types.model({\r\n  id: types.identifier,\r\n  // objectApiName: types.string,\r\n  // fields: types.array(FormFieldModel),\r\n  mode: types.union(types.string, types.undefined), // 'read' | 'edit'\r\n}).actions(self => ({\r\n  // note the `({`, we are returning an object literal\r\n  setMode(newMode: string) {\r\n    self.mode = newMode\r\n  }\r\n}))","import { types } from \"mobx-state-tree\";\r\n\r\nexport const TableModel = types.model({\r\n  id: types.identifier\r\n}).actions(self => ({\r\n}))","import { types } from \"mobx-state-tree\";\r\n\r\nexport const ObjectModel = types.model({\r\n  id: types.identifier,\r\n  datasource: types.string,\r\n  json: types.string\r\n})","import { types, Instance, onSnapshot } from \"mobx-state-tree\";\r\nimport { FormModel } from \"./Form\";\r\nimport { TableModel } from \"./Table\";\r\nimport { ObjectModel } from \"./Object\";\r\n\r\n// Define a store just like a model\r\nexport const RootModel = types.model({\r\n  currentObjectApiName: types.union(types.string, types.undefined, types.null), \r\n  currentRecordId: types.union(types.string, types.undefined, types.null), \r\n  forms: types.optional(types.map(FormModel), {}),\r\n  tables: types.optional(types.map(TableModel), {}),\r\n  objects: types.optional(types.map(ObjectModel), {}),\r\n}).actions(self => ({\r\n  setCurrentObjectApiName(name: string) {\r\n    self.currentObjectApiName = name;\r\n  },\r\n  setCurrentRecordId(id: string) {\r\n    self.currentRecordId = id;\r\n  },\r\n  getCurrentObjectApiName(name: string) {\r\n    return self.currentObjectApiName;\r\n  },\r\n  getCurrentRecordId(id: string) {\r\n    return self.currentRecordId = id;\r\n  },\r\n  setInitialState(state: any){\r\n    // self.currentObjectApiName = state;\r\n    Object.assign(self, state);\r\n  }\r\n}))\r\n\r\nlet initialState = RootModel.create({\r\n  currentObjectApiName: null, \r\n  currentRecordId: null, \r\n  forms: {},\r\n  tables: {},\r\n  objects: {}\r\n});\r\n\r\n// const data = localStorage.getItem('rootState');\r\n// if (data) {\r\n//   const json: any = JSON.parse(data);\r\n//   if (RootModel.is(json)) {\r\n//     initialState = RootModel.create(json as any);\r\n//   }\r\n// }\r\n\r\nexport const rootStore = initialState;\r\n\r\n// onSnapshot(store, snapshot => {\r\n//   console.log(\"Snapshot: \", snapshot);\r\n//   localStorage.setItem('rootState', JSON.stringify(snapshot));\r\n// });\r\n\r\nexport type RootInstance = Instance<typeof RootModel>;","import React from \"react\";\r\nimport { RootStoreContext } from \"./Context\";\r\nimport { rootStore } from \"./Root\";\r\n\r\n\r\nexport function StoreProvider(props: any) {\r\n\r\n  const {\r\n    initialState = {},\r\n    children,\r\n  } = props;\r\n  rootStore.setInitialState(initialState);\r\n\r\n  return (\r\n    <RootStoreContext.Provider value={rootStore}>\r\n      {children}\r\n    </RootStoreContext.Provider>\r\n  )\r\n}","import { useContext } from \"react\";\r\nimport { RootStoreContext } from \"./Context\";\r\n\r\nexport function useMst() {\r\n  const store = useContext(RootStoreContext);\r\n  if (store === null) {\r\n    throw new Error(\"Store cannot be null, please add a context provider\");\r\n  }\r\n  return store;\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport _ from \"lodash\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { useMst } from \"@steedos/builder-store\"\r\n\r\n// type RecordDetailPageProps = {\r\n//   objectApiName?: string,\r\n//   recordId?: string,\r\n//   children: any\r\n// }\r\n\r\nexport const RecordDetailPage = observer((props: any) => {\r\n  // export function RecordDetailPage(props:RecordDetailPageProps) {\r\n  const { children, ...rest } = props\r\n  let { currentObjectApiName, currentRecordId } = useMst()\r\n\r\n  // const objectApiName = props.objectApiName ? props.objectApiName : currentObjectApiName as string;\r\n  // const recordId = props.recordId ? props.recordId : currentRecordId;\r\n  // console.log(\"=RecordDetailPage===objectApiName, recordId===\", objectApiName, recordId);\r\n\r\n  return <div>{children}</div>\r\n})\r\n","import React, { useContext } from \"react\"\r\nimport * as PropTypes from \"prop-types\"\r\n\r\nimport { Grid, GridItem, Flex, Box } from \"@chakra-ui/layout\"\r\nimport { Form as AntForm } from \"antd\"\r\nimport BaseForm from \"@ant-design/pro-form/es/BaseForm\"\r\nimport { BuilderStoreContext } from \"@builder.io/react\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport _ from \"lodash\"\r\n\r\nimport { FormModel, useMst } from \"@steedos/builder-store\"\r\n\r\n// 在 ProForm的基础上扩展属性\r\n// colSpan: 每一列默认占几栅格，总共12栅格\r\n// mode: edit, read\r\n\r\nexport const Form = observer((props: any) => {\r\n  const store = useMst()\r\n  const {\r\n    name: formId = \"default\",\r\n    mode = \"read\",\r\n    layout,\r\n    children,\r\n    ...rest\r\n  } = props\r\n\r\n  if (!store.forms[formId])\r\n    store.forms[formId] = FormModel.create({ id: formId, mode })\r\n\r\n  const formItemLayout =\r\n    layout === \"horizontal\"\r\n      ? {\r\n          labelAlign: \"left\",\r\n          labelCol: { span: 8 },\r\n          wrapperCol: { span: 16 },\r\n        }\r\n      : null\r\n\r\n  const submitter =\r\n    store.forms[formId].mode === \"read\"\r\n      ? false\r\n      : {\r\n          // 配置按钮文本\r\n          searchConfig: {\r\n            resetText: \"取消\",\r\n            submitText: \"提交\",\r\n          },\r\n          resetButtonProps: {\r\n            onClick: () => {\r\n              store.forms[formId].setMode(\"read\")\r\n            },\r\n          },\r\n        }\r\n\r\n  const contentRender = (items: any, submitter: any) => {\r\n    return (\r\n      <>\r\n        {items}\r\n        {submitter}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const formProps = {\r\n    name: formId,\r\n    mode: store.forms[formId].mode,\r\n    layout,\r\n    ...formItemLayout,\r\n    ...rest,\r\n    submitter,\r\n    contentRender,\r\n  }\r\n\r\n  return <BaseForm {...formProps}>{children}</BaseForm>\r\n})\r\n\r\nForm[\"propTypes\"] = {\r\n  name: PropTypes.string,\r\n  mode: PropTypes.string,\r\n  layout: PropTypes.string,\r\n  initialValues: PropTypes.object,\r\n}\r\n","export const configForm = {\r\n  name: 'Steedos:Form',\r\n  image:\r\n    'https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fef36d2a846134910b64b88e6d18c5ca5',\r\n  inputs: [\r\n    { name: 'name', type: 'string', helperText: '表单名称，会作为表单字段 id 前缀使用' },\r\n    { name: 'columns', type: 'number', defaultValue: 2 , helperText: '表单列数'},\r\n    { name: 'layout', type: 'string', defaultValue: 'vertical', enum: ['horizontal', 'vertical', 'inline'], helperText: '表单布局' },\r\n    { name: 'size', type: 'string', enum: ['small', 'middle', 'large'], defaultValue: 'middle', helperText: '设置字段组件的尺寸' },\r\n    { name: 'labelAlign', type: 'string', enum: ['left', 'right'], defaultValue: 'right', helperText: 'label 标签的文本对齐方式' },\r\n    { name: 'initialValues', type: 'code', language: 'javascript', defaultValue: \"({})\", helperText: '表单默认值，只有初始化以及重置时生效。' },\r\n    { name: 'onValuesChange', type: 'code', language: 'javascript', defaultValue: \"(values) => {  }\", helperText: '字段值更新时触发回调事件' },\r\n    { name: 'onFinish', type: 'code', language: 'javascript', defaultValue: \"(values) => {  }\", helperText: '提交表单且数据验证成功后回调事件' },\r\n    { name: 'preserve', type: 'boolean', defaultValue: 'true', helperText: '当字段被删除时保留字段值' },\r\n    { name: 'submitter', type: 'boolean', defaultValue: 'true', helperText: '提交按钮相关配置' },\r\n    { name: 'scrollToFirstError', type: 'boolean', defaultValue: 'false', helperText: ' 提交失败自动滚动到第一个错误字段' },\r\n    {\r\n      name: 'dateFormatter', type: 'string', enum: ['string', 'number', 'false'],\r\n      defaultValue: 'string', helperText: '自动格式数据,主要是 moment 的表单'\r\n    },\r\n    {\r\n      name: 'omitNil', type: 'boolean', defaultValue: 'true',\r\n      helperText: 'ProForm 会自动清空 null 和 undefined 的数数据，如果你约定了 nil 代表某种数据，可以设置为 false 关闭此功能'\r\n    },\r\n    {\r\n      name: 'labelCol', type: 'object', subFields: [\r\n        { name: 'span', type: 'number' },\r\n        { name: 'offset', type: 'number' }\r\n      ], helperText: 'label 标签布局，同 <Col> 组件，设置 span offset 值'\r\n    },\r\n\r\n  ],\r\n  defaultStyles: {\r\n    display: 'block',\r\n    marginTop: '0',\r\n    paddingBottom: '10px',\r\n    minHeight: '100px',\r\n  },\r\n  canHaveChildren: true\r\n};\r\n","import ProField from \"@ant-design/pro-field\"\r\nimport { Form } from \"antd\"\r\nimport type { InputProps } from \"antd\"\r\n\r\nimport React, { useContext, useState } from \"react\"\r\nimport * as PropTypes from \"prop-types\"\r\nimport { Flex, Box } from \"@chakra-ui/layout\"\r\nimport { EditIcon, LockIcon } from \"@chakra-ui/icons\"\r\nimport { FormContext } from \"antd/es/form/context\"\r\nimport { ProFormDatePicker } from \"@ant-design/pro-form\"\r\nimport createField from \"@ant-design/pro-form/es/BaseForm/createField\"\r\n\r\nimport { BuilderStoreContext } from \"@builder.io/react\"\r\nimport { ProFormItemProps } from \"@ant-design/pro-form/es/interface\"\r\nimport { useMst } from \"@steedos/builder-store\"\r\n\r\nimport { observer } from \"mobx-react-lite\"\r\nimport FieldContext from \"@ant-design/pro-form/es/FieldContext\"\r\n\r\nexport const Field = observer((props: any) => {\r\n  const store = useMst()\r\n  const context = React.useContext(FormContext)\r\n  const formId = context.name ? context.name : \"default\"\r\n  const {\r\n    attributes,\r\n    // name,\r\n    // label,\r\n    // tooltip,\r\n    // allowClear,\r\n    // placeholder,\r\n    // required,\r\n    readonly,\r\n    // referenceTo,\r\n    // disabled,\r\n    mode: fieldMode,\r\n    valueType,\r\n    // type,\r\n    // count,\r\n    // defaultValue,\r\n    // defaultChecked,\r\n    options,\r\n    ...rest\r\n  } = props\r\n  const mode = store.forms[formId].mode\r\n\r\n  const formItemProps = {\r\n    ...attributes,\r\n    style: { borderBottom: mode == \"read\" ? \"1px solid #dddbda\" : \"\" },\r\n  }\r\n\r\n  const fieldProps = {\r\n    options,\r\n  }\r\n\r\n  if (valueType == \"select\") {\r\n    fieldProps[\"showSearch\"] = true\r\n    fieldProps[\"showArrow\"] = true\r\n  }\r\n\r\n  if (valueType != \"switch\") {\r\n    fieldProps[\"style\"] = { width: \"100%\" }\r\n  }\r\n\r\n  const ProFieldWrap = observer((props: any) => {\r\n    const store = useMst()\r\n\r\n    // console.log(\"第一个++++\",props);\r\n    const { readonly, mode, ...rest } = props\r\n\r\n    const proFieldProps = {\r\n      readonly,\r\n      emptyText: \"\",\r\n      ...rest,\r\n    }\r\n    // console.log(\"第二个++++rest\",rest);\r\n\r\n    if (!readonly && mode === \"edit\") {\r\n      // proFieldProps.name = \"company_id\"\r\n      // proFieldProps.referenceTo= \"company\"\r\n\r\n      // console.log('proFieldProps=====',proFieldProps);\r\n      return <ProField mode=\"edit\" {...proFieldProps} />\r\n    }\r\n\r\n    const onInlineEdit = () => {\r\n      store.forms[formId].setMode(\"edit\")\r\n    }\r\n    const inlineIconOpacity = 0.4\r\n    const inlineIcon = readonly ? (\r\n      <LockIcon\r\n        color=\"gray.600\"\r\n        opacity={inlineIconOpacity}\r\n        _groupHover={{ opacity: 1 }}\r\n      />\r\n    ) : (\r\n      <EditIcon\r\n        color=\"gray.600\"\r\n        opacity={inlineIconOpacity}\r\n        _groupHover={{ opacity: 1 }}\r\n        onClick={() => {\r\n          onInlineEdit()\r\n        }}\r\n      />\r\n    )\r\n\r\n    const containerOptions = {\r\n      // borderBottom: (mode=='read')?'1px solid #dddbda':'',\r\n      // pb: 1,\r\n    }\r\n    // console.log('proFieldProps+++++++++++++++++++第二个',rest);\r\n\r\n    return (\r\n      <Flex\r\n        {...containerOptions}\r\n        role=\"group\"\r\n        onDoubleClick={() => {\r\n          if (!readonly) onInlineEdit()\r\n        }}\r\n      >\r\n        <Box flex=\"1\">\r\n          <ProField mode=\"read\" {...proFieldProps} />\r\n        </Box>\r\n        <Box width=\"16px\">{inlineIcon}</Box>\r\n      </Flex>\r\n    )\r\n  })\r\n\r\n  const ProFormField = createField<ProFormItemProps<InputProps>>(\r\n    (props: ProFormItemProps<InputProps>) => {\r\n      // console.log(\"props========\",props);\r\n      // console.log(\"props===fieldProps=====\",props.fieldProps);\r\n      // const newProps = Object.assign({}, props, props.fieldProps)\r\n      return (\r\n        <ProFieldWrap\r\n          valueType={valueType}\r\n          fieldProps={props.fieldProps}\r\n          {...props}\r\n          mode={mode}\r\n          readonly={readonly}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      valueType,\r\n    }\r\n  )\r\n  Object.assign(fieldProps, rest)\r\n  return (\r\n    <ProFormField\r\n      {...rest}\r\n      mode={mode}\r\n      formItemProps={formItemProps}\r\n      fieldProps={fieldProps}\r\n    />\r\n  )\r\n})\r\n\r\nField[\"propTypes\"] = {\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  valueType: PropTypes.string,\r\n}\r\n","export const configFieldObject = {\r\n  name: 'Steedos:FieldObject',\r\n  image:\r\n    'https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F682efef23ace49afac61748dd305c70a',\r\n  inputs: [\r\n    { name: 'name', type: 'text', defaultValue: 'object'},\r\n    { name: 'label', type: 'text', defaultValue: 'Object'},\r\n  ],\r\n  defaultStyles: {\r\n    display: 'block',\r\n    minHeight: '50px',\r\n    marginTop: '0',\r\n  },\r\n  noWrap: false,\r\n  canHaveChildren: true,\r\n  // requiresParent: {\r\n  //   message: 'This block must be inside a \"Form\" block',\r\n  //   query: {\r\n  //     'component.name': { $in: ['@steedos/builder-form:Form'] }\r\n  //   }\r\n  // }\r\n};\r\n","\r\nimport React from \"react\";\r\n\r\nexport const FormContext = React.createContext<any>({});\r\n","import React from 'react'\r\nimport { Input } from 'antd';\r\n\r\nexport const email = {\r\n  render: (text: any, { fieldProps }: any)=> {\r\n    const link = \"mailto:\" + text;\r\n    return (<a href={link}>{text}</a>)\r\n  },\r\n  renderFormItem: (_: any, props: any) => (\r\n    <Input placeholder=\"请输入邮箱地址\" {...props?.fieldProps} />\r\n  ),\r\n}\r\n\r\n","import { href } from './href';\r\nimport {email} from './email';\r\n\r\nexport default  {\r\n    href,\r\n    email\r\n};\r\n","import React from 'react'\r\nimport { Input } from 'antd';\r\n\r\nexport const href = {\r\n  render: (text: any, { fieldProps }: any)=> {\r\n    return (<a href={text}>{text}</a>)\r\n  },\r\n  renderFormItem: (_: any, props: any) => (\r\n    <Input placeholder=\"请输入链接\" {...props?.fieldProps} />\r\n  ),\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { FormContext } from './FormContext';\r\nimport valueTypes from '../valueTypes';\r\n\r\nimport ProContext, {createIntl, \r\n  zhCNIntl as pro_zhCN, \r\n  zhTWIntl as pro_zhTW, \r\n  enUSIntl as pro_enUS\r\n} from '@ant-design/pro-provider';\r\n\r\nimport { ConfigProvider as AntdConfigProvider } from 'antd';\r\nimport antd_zhCN from 'antd/lib/locale/zh_CN';\r\nimport antd_zhTW from 'antd/lib/locale/zh_TW';\r\nimport antd_enUS from 'antd/lib/locale/zh_CN';\r\n\r\nimport { IntlType } from \"@ant-design/pro-table\";\r\n\r\nimport { en_US, zh_CN } from '@steedos/builder-locale';\r\n\r\n/* 通过 valueTypeMap，支持给Form传入第三方自定义控件 */\r\ntype FormProviderProps = {\r\n  locale: string,\r\n  valueTypeMap?: object,\r\n  children: any,\r\n}\r\n\r\nexport function FormProvider(props: FormProviderProps) {\r\n  const {\r\n    locale,\r\n    valueTypeMap,\r\n    children,\r\n  } = props\r\n\r\n  const proContextValues = {\r\n    intl: {\r\n      ...getProLocale(locale),\r\n    },\r\n    valueTypeMap: { ...valueTypes, ...valueTypeMap }\r\n  }\r\n\r\n  const antdContextValues = {\r\n    locale: getAntdLocale(locale)\r\n  }\r\n\r\n  const intl = getSteedosIntl(locale)\r\n  return (\r\n    <FormContext.Provider value={{\r\n      intl,\r\n      valueTypeMap\r\n    }}>\r\n      <AntdConfigProvider {...antdContextValues}>\r\n        <ProContext.Provider value={proContextValues}>\r\n          {children}\r\n        </ProContext.Provider>\r\n      </AntdConfigProvider>\r\n    </FormContext.Provider>\r\n  )\r\n}\r\n\r\n\r\nexport const getAntdLocale:any = (locale: string)=> {\r\n  switch (locale) {\r\n    case 'en_US': return antd_enUS\r\n    case 'zh_CN': return antd_zhCN\r\n    case 'zh_TW': return antd_zhTW\r\n    default: return antd_zhCN\r\n  }\r\n}\r\n\r\nexport const getProLocale = (locale: string)=> {\r\n  switch (locale) {\r\n    case 'en_US': return pro_enUS\r\n    case 'zh_CN': return pro_zhCN\r\n    case 'zh_TW': return pro_zhTW\r\n    default: return pro_zhCN\r\n  }\r\n}\r\n\r\nfunction getMessageFromLocaleMap(\r\n  source: Record<string, unknown>,\r\n  path: string,\r\n  defaultValue?: string,\r\n): string | undefined {\r\n  // a[3].b -> a.3.b\r\n  const paths = path.replace(/\\[(\\d+)\\]/g, '.$1').split('.');\r\n  let result = source;\r\n  let message = defaultValue;\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const p of paths) {\r\n    message = Object(result)[p];\r\n    result = Object(result)[p];\r\n    if (message === undefined) {\r\n      return defaultValue;\r\n    }\r\n  }\r\n  return message;\r\n}\r\n\r\n/**\r\n * 创建一个操作函数\r\n *\r\n * @param locale\r\n * @param localeMap\r\n */\r\nconst createSteedosIntl = (locale: string, localeMap: Record<string, any>): IntlType => ({\r\n  getMessage: (id: string, defaultMessage: string) => {\r\n    let message = getMessageFromLocaleMap(localeMap, id, defaultMessage);\r\n    if (!message)\r\n      message = getProLocale(locale).getMessage(id, '');\r\n      if (!message)\r\n        message = getMessageFromLocaleMap(getAntdLocale(locale), id);\r\n    return message || defaultMessage\r\n  },\r\n  locale,\r\n});\r\n\r\nconst zhCNIntl = createSteedosIntl('zh_CN', zh_CN);\r\nconst enUSIntl = createSteedosIntl('en_US', en_US);\r\n\r\nconst getSteedosIntl = (locale: string) => {\r\n  switch (locale) {\r\n    case 'en_US': return enUSIntl\r\n    case 'zh_CN': return zhCNIntl\r\n    case 'zh_TW': return zhCNIntl\r\n    default: return zhCNIntl\r\n  }\r\n}\r\n\r\nexport function useIntl(): IntlType {\r\n  const context = useContext(FormContext);\r\n  return context.intl || zhCNIntl;\r\n}\r\n","export default {\r\n  form: {\r\n    save: '保存',\r\n    cancel: '取消'\r\n  }\r\n}","export default {\r\n  form: {\r\n    save: 'Save',\r\n    cancel: 'Cancel'\r\n  }\r\n}","import React, { useContext } from \"react\"\r\n// import { BuilderStoreContext } from '@builder.io/react';\r\n\r\nimport { Field } from \"@steedos/builder-form\"\r\nimport _ from \"lodash\"\r\nimport { useQuery } from \"react-query\"\r\nimport { ObjectContext } from \"../\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { FormContext } from \"antd/es/form/context\"\r\nimport { FormModel, useMst } from \"@steedos/builder-store\"\r\n\r\nexport type ObjectFieldProps = {\r\n  objectApiName?: string\r\n  fieldName: string\r\n  required: boolean\r\n  readonly: boolean\r\n}\r\n\r\nexport const getFormFieldProps = (\r\n  formFieldProps: any,\r\n  field: any,\r\n  readonly: boolean\r\n) => {\r\n  const fieldType = field.type\r\n  // console.log(\"field===================\",field);\r\n\r\n  switch (fieldType) {\r\n    case \"datetime\":\r\n      formFieldProps.valueType = \"dateTime\"\r\n      formFieldProps.readonly = readonly\r\n      break\r\n\r\n    case \"boolean\":\r\n      formFieldProps.valueType = \"switch\"\r\n      formFieldProps.readonly = readonly\r\n      break\r\n\r\n    case \"number\":\r\n      formFieldProps.valueType = \"digit\"\r\n      formFieldProps.readonly = readonly\r\n      break\r\n\r\n    case \"currency\":\r\n      formFieldProps.valueType = \"money\"\r\n      formFieldProps.readonly = readonly\r\n      break\r\n    case \"autonumber\":\r\n      formFieldProps.valueType = \"index\"\r\n      formFieldProps.readonly = readonly\r\n      break\r\n    case \"url\":\r\n      formFieldProps.valueType = \"href\"\r\n      break\r\n    case \"lookup\":\r\n      // return (\r\n      //   <div>{`未实现字段类型${fieldType}的组件`}</div>\r\n      // )\r\n      formFieldProps.valueType = \"lookup\"\r\n      formFieldProps.readonly = false\r\n      formFieldProps.referenceTo = field.reference_to\r\n      break\r\n    case \"master_detail\":\r\n      return <div>{`未实现字段类型${fieldType}的组件`}</div>\r\n  }\r\n  // console.log('啊实打实打算+++++++',formFieldProps);\r\n\r\n  return formFieldProps\r\n}\r\n\r\nexport const ObjectField = observer((props: any) => {\r\n  const store = useMst()\r\n  const objectContext = useContext(ObjectContext)\r\n  const context = useContext(FormContext)\r\n  const formId = context.name ? context.name : \"default\"\r\n  const { fieldName, required, readonly } = props\r\n  let objectApiName = props.objectApiName\r\n  // console.log(\"props=========\",props);\r\n  // 请注意所有的react use函数必须放在最前面，不可以放在if等判断逻辑后面\r\n  const { isLoading, error, data, isFetching } = useQuery(\r\n    objectApiName,\r\n    async () => {\r\n      return await objectContext.requestObject(objectApiName)\r\n    }\r\n  )\r\n  if (!objectApiName || !fieldName) return <div>请输入对象名和字段名</div>\r\n\r\n  const objectSchema: any = data\r\n\r\n  if (!objectSchema) return <div>Field Loading...</div>\r\n\r\n  //TODO  fields['name', 'type']不为空\r\n\r\n  const field: any = _.find(objectSchema.fields, (field, key) => {\r\n    return fieldName === key\r\n  })\r\n\r\n  if (!field) {\r\n    return <div>{`对象${objectApiName}上未定义字段${fieldName}`}</div>\r\n  }\r\n\r\n  // 从对象定义中生成字段信息。\r\n  const fieldType: string = field.type //根据objectApiName及fieldName算出type值\r\n  let objectFieldMode = store.forms[formId].mode\r\n  let formFieldProps: any = {\r\n    name: fieldName,\r\n    mode: objectFieldMode,\r\n    label: field.label,\r\n    placeholder: field.help,\r\n    hidden: field.hidden,\r\n    valueType: fieldType,\r\n    required: field.required,\r\n    options: field.options,\r\n    readonly: field.readonly,\r\n  }\r\n\r\n  if (formFieldProps.mode == \"edit\") {\r\n    if (field.omit) {\r\n      formFieldProps.hidden = true\r\n    }\r\n  } else if (formFieldProps.mode == \"read\") {\r\n    if (field.omit) {\r\n      formFieldProps.readonly = true\r\n    }\r\n  }\r\n\r\n  // let fieldProps = {\r\n\r\n  // };\r\n  if (fieldType === \"formula\") {\r\n    let fieldProps = {\r\n      fieldType: field.data_type,\r\n      readonl: true,\r\n    }\r\n    // formFieldProps = getFormFieldProps(formFieldProps, field.data_type, true);\r\n    formFieldProps = getFormFieldProps(\r\n      formFieldProps,\r\n      Object.assign({}, field, { type: field.data_type }),\r\n      true\r\n    )\r\n  } else if (fieldType === \"summary\") {\r\n    formFieldProps = getFormFieldProps(formFieldProps, field.summary_type, true)\r\n  } else {\r\n    formFieldProps = getFormFieldProps(\r\n      formFieldProps,\r\n      field,\r\n      formFieldProps.readonly\r\n    )\r\n  }\r\n\r\n  if (formFieldProps.required) {\r\n    formFieldProps.rules = [\r\n      {\r\n        required: true,\r\n        message: `请输入${formFieldProps.label}...`,\r\n      },\r\n    ]\r\n  }\r\n  // console.log(\"formFieldProps===============\",formFieldProps);\r\n\r\n  // 默认取ProFormText组件\r\n  return <Field {...formFieldProps} />\r\n  // if (fieldType === 'lookup') {\r\n  //   return (\r\n  //     <div></div>\r\n  //     // <ObjectFieldLookup\r\n  //     //   {...rest}\r\n  //     //   label={props.label}\r\n  //     //   name={fieldName}\r\n  //     //   referenceTo={reference_to}\r\n  //     //   enableAdd={true}\r\n  //     //   placeholder={`请搜索${props.label}...`}\r\n  //     //   readonly={readonly}\r\n  //     // />\r\n  //   )\r\n  // } else {\r\n  //   return (\r\n  //     <ProField\r\n  //       {...formFieldProps}\r\n  //     />\r\n  //   )\r\n  // }\r\n})\r\n","import React, { useContext } from \"react\"\r\nimport _ from \"lodash\"\r\n// import { BuilderStoreContext } from '@builder.io/react';\r\nimport { ObjectContext } from \"../\"\r\nimport { useQueries } from \"react-query\"\r\n\r\nimport { Form } from \"@steedos/builder-form\"\r\nimport { BaseFormProps } from \"@ant-design/pro-form/lib/BaseForm\"\r\nimport type { ProFieldFCMode } from \"@ant-design/pro-utils\"\r\nimport { registerObjectFieldComponent, ObjectField } from \"..\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { FormModel, useMst } from \"@steedos/builder-store\"\r\n\r\nexport type ObjectFormFieldMode = \"add\" | ProFieldFCMode\r\n\r\nexport type FormProps<T = Record<string, any>> = {\r\n  mode?: ObjectFormFieldMode\r\n  editable?: boolean\r\n} & BaseFormProps\r\n\r\nexport type ObjectFormProps = {\r\n  objectApiName?: string\r\n  recordId?: string\r\n} & FormProps\r\n\r\nexport const ObjectForm = observer((props: ObjectFormProps) => {\r\n  const store = useMst()\r\n\r\n  const {\r\n    name: formId = \"default\",\r\n    mode = \"edit\",\r\n    layout = \"vertical\",\r\n    ...rest\r\n  } = props\r\n\r\n  if (!store.forms[formId])\r\n    store.forms[formId] = FormModel.create({ id: formId, mode })\r\n\r\n  const objectContext = useContext(ObjectContext)\r\n\r\n  const objectApiName = props.objectApiName\r\n  if (!objectApiName) {\r\n    return <div>请输入对象名</div>\r\n  }\r\n\r\n  const recordId = props.recordId || \"\"\r\n\r\n  //TODO fields的确定\r\n  const filter = [\"_id\", \"=\", recordId]\r\n  const fields = [\r\n    \"name\",\r\n    \"type\",\r\n    \"number_of_employees\",\r\n    \"description\",\r\n    \"email\",\r\n    \"industry\",\r\n    \"rating\",\r\n    \"salutation\",\r\n    \"startdate__c\",\r\n    \"datetime__c\",\r\n    \"state\",\r\n    \"summary__c\",\r\n    \"website\",\r\n    \"annual_revenue\",\r\n    \"fn__c\",\r\n  ]\r\n  const results = useQueries([\r\n    {\r\n      queryKey: objectApiName,\r\n      queryFn: async () => {\r\n        return await objectContext.requestObject(objectApiName as string)\r\n      },\r\n    },\r\n    {\r\n      queryKey: [objectApiName, filter, fields],\r\n      queryFn: async () => {\r\n        return await objectContext.requestRecords(objectApiName, filter, fields)\r\n      },\r\n    },\r\n  ])\r\n  const {\r\n    isLoading: isLoadingObject,\r\n    error: errorObject,\r\n    data: data1,\r\n    isFetching: isFetchingObject,\r\n  } = results[0]\r\n  const {\r\n    isLoading: isLoadingRecord,\r\n    error: errorRecord,\r\n    data: data2,\r\n    isFetching: isFetchingRecord,\r\n  } = results[1]\r\n\r\n  const isLoadings = isLoadingObject || isLoadingRecord\r\n\r\n  if (isLoadings) return <div>Object Loading...</div>\r\n\r\n  const object: any = data1\r\n  const records: any = data2\r\n\r\n  registerObjectFieldComponent(_.keys(object.fields))\r\n\r\n  let initialValues = {}\r\n  if (records.value && records.value.length > 0) {\r\n    const record = records.value[0]\r\n    fields.map((fieldName) => {\r\n      initialValues[fieldName] = record[fieldName]\r\n    })\r\n  }\r\n  const onFinish = async (values: any) => {\r\n    let result\r\n    if (mode === \"add\") {\r\n      console.log(values)\r\n      result = await objectContext.insertRecord(objectApiName, values)\r\n      if (result) {\r\n        alert(\"添加成功！\")\r\n      }\r\n    } else {\r\n      if (!recordId) {\r\n        return\r\n      }\r\n\r\n      result = await objectContext.updateRecord(objectApiName, recordId, values)\r\n      if (result) {\r\n        alert(\"表单修改成功！\")\r\n      }\r\n    }\r\n  }\r\n\r\n  let fieldsChildrenDom = props.children\r\n  if (!fieldsChildrenDom) {\r\n    const fieldMode = mode === \"add\" ? \"edit\" : mode\r\n    fieldsChildrenDom = (\r\n      <React.Fragment>\r\n        {_.map(object.fields, (field, key) => {\r\n          const fieldItemProps = {\r\n            key,\r\n            objectApiName,\r\n            fieldName: key,\r\n            required: field.required,\r\n            readonly: field.readonly,\r\n            mode: fieldMode,\r\n          }\r\n          return <ObjectField {...fieldItemProps} />\r\n        })}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      // formFieldComponent = {ObjectField}\r\n      initialValues={initialValues}\r\n      mode={mode}\r\n      layout={layout}\r\n      onFinish={onFinish}\r\n      {...rest}\r\n    >\r\n      {fieldsChildrenDom}\r\n    </Form>\r\n  )\r\n})\r\n","import { Builder } from '@builder.io/react';\r\nimport _ from 'lodash';\r\nimport { ObjectField } from \"../\";\r\n\r\nexport const configObjectField: any = {\r\n  name: 'Steedos:ObjectField',\r\n  inputs: [\r\n    // { name: 'fieldName', type: 'text', friendlyName: \"字段名\" },\r\n    { name: 'required', type: 'boolean', friendlyName: \"必须\" },\r\n    { name: 'readonly', type: 'boolean', friendlyName: \"只读\" }\r\n  ],\r\n  canHaveChildren: false,\r\n  // requiresParent: {\r\n  //   message: 'This block must be inside a \"ObjectForm\" block',\r\n  //   query: {\r\n  //     'component.name': { $in: ['Steedos:ObjectForm'] }\r\n  //   }\r\n  // }\r\n};\r\n\r\nexport const registerObjectFieldComponent = (fieldNames: string[]) => {\r\n  let configInputs = _.clone(configObjectField.inputs);\r\n  configInputs.unshift({\r\n    name: 'fieldName', \r\n    type: 'string', \r\n    enum: fieldNames,\r\n    helperText: '请选择字段名'\r\n  });\r\n  const config = Object.assign({}, configObjectField, {inputs: configInputs});\r\n  Builder.registerComponent(ObjectField, config);\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useContext, useRef, useEffect, useState } from \"react\"\r\nimport _ from \"lodash\"\r\n// import { BuilderStoreContext } from '@builder.io/react';\r\nimport { ObjectContext } from \"../\"\r\nimport { useQuery } from \"react-query\"\r\nimport ProTable, {\r\n  ProTableProps,\r\n  RequestData,\r\n  ProColumnType,\r\n} from \"@ant-design/pro-table\"\r\nimport { SortOrder } from \"antd/lib/table/interface\"\r\nimport { ParamsType } from \"@ant-design/pro-provider\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { registerObjectTableComponent } from \"..\"\r\nimport { TableModel, useMst } from \"@steedos/builder-store\"\r\nimport \"./ObjectTable.less\"\r\n// export type TableProps<T extends Record<string, any>, U extends ParamsType, ValueType>  = {\r\n//   mode?: ProFieldFCMode,\r\n//   editable?: boolean,\r\n// } & ProTableProps<T, U, ValueType> & {\r\n//   defaultClassName: string;\r\n// }\r\n\r\n// export type ObjectTableProps = {\r\n//   objectApiName?: string,\r\n//   recordId?: string,\r\n// } & ProTableProps<T, U, ValueType> & {\r\n//   defaultClassName: string;\r\n// }\r\n\r\nexport type ObjectTableColumnProps = {\r\n  fieldName: string\r\n} & ProColumnType\r\n\r\nexport type ObjectTableProps<T extends ObjectTableColumnProps> =\r\n  | ({\r\n      name?: string\r\n      objectApiName?: string\r\n      columnFields?: T[]\r\n      filters?: [] | string\r\n      onChange?: ([any]) => void\r\n      // filterableFields?: [string]\r\n    } & {\r\n      defaultClassName?: string\r\n    })\r\n  | any\r\n\r\nexport const getProColumnProps = (\r\n  proColumnProps: any,\r\n  fieldType: string,\r\n  readonly: boolean,\r\n  field: any\r\n) => {\r\n  switch (fieldType) {\r\n    case \"text\":\r\n      proColumnProps.valueType = \"text\"\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"password\":\r\n      proColumnProps.valueType = \"password\"\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"email\":\r\n      // proColumnProps.valueType = \"email\"\r\n      proColumnProps.valueType = \"text\"\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"percent\":\r\n      proColumnProps.valueType = \"percent\"\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"avatar\":\r\n      proColumnProps.valueType = \"avatar\"\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"select\":\r\n      proColumnProps.valueType = \"select\"\r\n      proColumnProps.fieldProps.options = field.options\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"textarea\":\r\n      proColumnProps.valueType = \"textarea\"\r\n      proColumnProps.hideInSearch = true\r\n      proColumnProps.copyable = true\r\n      proColumnProps.ellipsis = true\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"date\":\r\n      proColumnProps.valueType = \"date\"\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"datetime\":\r\n      proColumnProps.valueType = \"dateTime\"\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"boolean\":\r\n      proColumnProps.valueType = \"switch\"\r\n      proColumnProps.hideInSearch = true\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"number\":\r\n      proColumnProps.valueType = \"digit\"\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"currency\":\r\n      proColumnProps.valueType = \"money\"\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"autonumber\":\r\n      proColumnProps.valueType = \"index\"\r\n      proColumnProps.hideInSearch = true\r\n      proColumnProps.readonly = readonly\r\n      break\r\n    case \"url\":\r\n      proColumnProps.valueType = \"href\"\r\n      break\r\n    case \"lookup\":\r\n      proColumnProps.render = () => (\r\n        <div>{`未实现字段类型${fieldType}的组件`}</div>\r\n      )\r\n      break\r\n    case \"master_detail\":\r\n      proColumnProps.render = () => (\r\n        <div>{`未实现字段类型${fieldType}的组件`}</div>\r\n      )\r\n      break\r\n  }\r\n  return proColumnProps\r\n}\r\n\r\nexport const getObjectTableProColumn = (field: any) => {\r\n  // 把yml中的某个字段field转成ant的ProTable中的columns属性项\r\n  if (!field) {\r\n    return null\r\n  }\r\n\r\n  const fieldType: string = field.type\r\n  let proColumnProps: any = {\r\n    title: field.label,\r\n    dataIndex: field.name,\r\n    formItemProps: {},\r\n    fieldProps: {},\r\n  }\r\n  if (field.required) {\r\n    proColumnProps.formItemProps.required = true\r\n  }\r\n\r\n  if (field.sortable) {\r\n    proColumnProps.sorter = true\r\n  }\r\n\r\n  if (fieldType === \"formula\") {\r\n    proColumnProps = getProColumnProps(\r\n      proColumnProps,\r\n      field.data_type,\r\n      true,\r\n      field\r\n    )\r\n  } else if (fieldType === \"summary\") {\r\n    proColumnProps = getProColumnProps(\r\n      proColumnProps,\r\n      field.summary_type,\r\n      true,\r\n      field\r\n    )\r\n  } else {\r\n    proColumnProps = getProColumnProps(\r\n      proColumnProps,\r\n      fieldType,\r\n      field.readonly || false,\r\n      field\r\n    )\r\n  }\r\n  return proColumnProps\r\n}\r\n\r\nexport const ObjectTable = observer((props: ObjectTableProps<any>) => {\r\n  // export const ObjectTable = <T extends Record<string, any>, U extends ParamsType, ValueType>(props: ObjectTableProps<T, U, ValueType>) => {\r\n  // const store = useContext(BuilderStoreContext);\r\n  const objectContext = useContext(ObjectContext)\r\n  const store = useMst()\r\n  // console.log(\"=RecordDetailPage===currentObjectApiName\", currentObjectApiName);\r\n\r\n  const {\r\n    name: tableId = \"default\",\r\n    objectApiName,\r\n    columnFields = [],\r\n    filters,\r\n    defaultClassName,\r\n    onChange,\r\n    ...rest\r\n  } = props\r\n\r\n  if (!store.forms[tableId])\r\n    store.forms[tableId] = TableModel.create({ id: tableId })\r\n\r\n  const { isLoading, error, data, isFetching } = useQuery(\r\n    objectApiName + \"_schema\",\r\n    async () => {\r\n      return await objectContext.requestObject(objectApiName as string)\r\n    }\r\n  )\r\n  const objectSchema: any = data\r\n  let [proColumns, setProColumns] = useState([])\r\n  useEffect(() => {\r\n    if (objectSchema) {\r\n      let tmpProColumns = []\r\n      registerObjectTableComponent(_.keys(objectSchema.fields))\r\n\r\n      const objectFields = objectSchema.fields\r\n\r\n      if (objectFields) {\r\n        _.forEach(\r\n          columnFields,\r\n          ({ fieldName, ...columnItem }: ObjectTableColumnProps) => {\r\n            if (columnItem.hideInTable) return\r\n            const proColumn = getObjectTableProColumn(objectFields[fieldName])\r\n\r\n            if (proColumn) {\r\n              tmpProColumns.push({ ...proColumn, ...columnItem })\r\n            }\r\n          }\r\n        )\r\n      }\r\n      setProColumns(tmpProColumns)\r\n    }\r\n  }, [objectSchema])\r\n\r\n  const request = async (\r\n    params: any & {\r\n      pageSize?: number\r\n      current?: number\r\n      keyword?: string\r\n    },\r\n    sort: Record<string, SortOrder>,\r\n    filter: Record<string, React.ReactText[]>\r\n  ): Promise<any> => {\r\n    console.log(params)\r\n\r\n    // 第一个参数 params 查询表单和 params 参数的结合\r\n    // 第一个参数中一定会有 pageSize 和  current ，这两个参数是 antd 的规范\r\n    // 这里需要返回一个 Promise,在返回之前你可以进行数据转化\r\n    // 如果需要转化参数可以在这里进行修改\r\n    /*\r\n    const msg = await myQuery({\r\n      page: params.current,\r\n      pageSize: params.pageSize,\r\n    });\r\n    return {\r\n      data: msg.result,\r\n      // success 请返回 true，\r\n      // 不然 table 会停止解析数据，即使有数据\r\n      success: boolean,\r\n      // 不传会使用 data 的长度，如果是分页一定要传\r\n      total: number,\r\n    };\r\n    */\r\n\r\n    const { current, pageSize, ...searchFilters } = params\r\n    let tableFilters = Object.keys(searchFilters).map((key) => {\r\n      return \"contains(\" + key + \",'\" + searchFilters[key] + \"')\"\r\n    })\r\n\r\n    // TODO: 这里antd的request请求函数与ObjectTable组件传入的filters,sort等格式不一样，需要转换处理\r\n    const fields = columnFields.map((n) => {\r\n      return n.fieldName\r\n    })\r\n    const result = await objectContext.requestRecords(\r\n      objectApiName,\r\n      [filters ? \"(\" + filters + \")\" : \"\", ...tableFilters]\r\n        .filter((a) => a)\r\n        .join(\" and \"), //[filters, tableFilters].filter(a=>a).join(' and '),\r\n      fields,\r\n      {\r\n        pageSize: params.pageSize as number,\r\n        current: params.current as number,\r\n        sort: sort\r\n          ? Object.keys(sort).map((sk) => [\r\n              sk,\r\n              sort[sk] == \"ascend\" ? \"asc\" : \"desc\",\r\n            ])\r\n          : [],\r\n      }\r\n    )\r\n    return {\r\n      data: result.value,\r\n      success: true,\r\n      total: result[\"@odata.count\"],\r\n    }\r\n  }\r\n\r\n  const selfTableRef = useRef(null)\r\n\r\n  return (\r\n    <ProTable\r\n      request={request}\r\n      columns={proColumns}\r\n      rowKey={rest.rowKey || \"_id\"}\r\n      rowSelection={rest.rowSelection || { onChange }}\r\n      pagination={{ ...rest.pagination, hideOnSinglePage: true }}\r\n      options={false}\r\n      actionRef={rest.actionRef || selfTableRef}\r\n      {...rest}\r\n      onChange={() => {\r\n        ;(rest.actionRef || selfTableRef).current.reload()\r\n      }}\r\n      className={[\"object-table\", rest.className].join(\" \")}\r\n    />\r\n  )\r\n})\r\n","import { Builder } from '@builder.io/react';\r\nimport { Component, Input } from '@builder.io/sdk';\r\nimport _ from 'lodash';\r\nimport { ObjectTable } from \"./ObjectTable\";\r\n\r\nexport const configObjectTable: Component = {\r\n  name: 'Steedos:ObjectTable',\r\n  inputs: [\r\n    { name: 'objectApiName', type: 'text', friendlyName: \"对象名\" },\r\n  ],\r\n  canHaveChildren: false\r\n};\r\n\r\nexport const registerObjectTableComponent = (fieldNames: string[] | { label: string; value: any; helperText?: string }[]) => {\r\n  let configInputs: Input[] = _.clone(configObjectTable.inputs) as Input[];\r\n  configInputs.push({\r\n    name: 'columnFields', \r\n    type: 'list', \r\n    subFields: [\r\n      { name: 'fieldName', type: 'string', enum: fieldNames, defaultValue: \"name\" },\r\n      { name: 'wrap', type: 'boolean', defaultValue: false },\r\n    ],\r\n    helperText: '请选择要显示的列字段'\r\n  });\r\n  const config = Object.assign({}, configObjectTable, {inputs: configInputs});\r\n  Builder.registerComponent(ObjectTable, config);\r\n}\r\n\r\n","// import { BuilderStoreContext } from '@builder.io/react';\r\nimport { ObjectContext } from \"..\"\r\nimport { Tree } from \"antd\"\r\nimport _ from \"lodash\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { useQuery } from \"react-query\"\r\nimport { registerObjectTreeComponent } from \"..\"\r\nimport { useMst } from \"@steedos/builder-store\"\r\nimport \"./ObjectTree.less\"\r\n// export type TreeProps<T extends Record<string, any>, U extends ParamsType, ValueType>  = {\r\n//   mode?: ProFieldFCMode,\r\n//   editable?: boolean,\r\n// } & ProTreeProps<T, U, ValueType> & {\r\n//   defaultClassName: string;\r\n// }\r\n\r\n// export type ObjectTreeProps = {\r\n//   objectApiName?: string,\r\n//   recordId?: string,\r\n// } & ProTreeProps<T, U, ValueType> & {\r\n//   defaultClassName: string;\r\n// }\r\n\r\nexport type ObjectTreeProps =\r\n  | ({\r\n      name?: string\r\n      objectApiName?: string\r\n      nameField?: string\r\n      parentField?: string\r\n      rootNodeValue?: string\r\n      filters?: string | string[]\r\n      checkable?: boolean\r\n      onChange?: () => void\r\n    } & {\r\n      defaultClassName: string\r\n    })\r\n  | any\r\n\r\nexport const ObjectTree = observer((props: ObjectTreeProps) => {\r\n  // export const ObjectTree = <T extends Record<string, any>, U extends ParamsType, ValueType>(props: ObjectTreeProps<T, U, ValueType>) => {\r\n  // const store = useContext(BuilderStoreContext);\r\n  const objectContext: any = useContext(ObjectContext)\r\n\r\n  let {\r\n    name: treeId = \"default\",\r\n    objectApiName,\r\n    nameField,\r\n    parentField,\r\n    releatedColumnField,\r\n    rootNodeValue,\r\n    filters,\r\n    checkable,\r\n    onChange,\r\n    ...rest\r\n  } = props\r\n  if (checkable == undefined) checkable = true\r\n\r\n  const { isLoading, error, data: objectSchema, isFetching } = useQuery<any>(\r\n    objectApiName + \"_schema\",\r\n    async () => {\r\n      return await objectContext.requestObject(objectApiName as string)\r\n    }\r\n  )\r\n  if (objectSchema) registerObjectTreeComponent(_.keys(objectSchema.fields))\r\n  //上边都是schema相关的操作\r\n  //下边才是去请求数据\r\n\r\n  const [treeData, setTreeData] = useState([])\r\n  const [expandedKeys, setExpandedKeys] = useState([])\r\n  let { data: records } = useQuery(\r\n    [\r\n      objectApiName + \"_records\",\r\n      nameField,\r\n      parentField,\r\n      rootNodeValue,\r\n      filters,\r\n      checkable,\r\n    ], //这里以Props里的参数作为useQuery的第一参数，react-query会通过该参数是否发生变化来判断是否要重新进行请求\r\n    async () => {\r\n      const objectFields = Object.values(objectSchema.fields)\r\n        .filter(({ hidden }) => !hidden)\r\n        .map(({ name }) => name)\r\n      return await objectContext.requestRecords(\r\n        objectApiName as string,\r\n        filters,\r\n        objectFields\r\n      )\r\n    },\r\n    { enabled: !!objectSchema } //只有上边的schema加载好了，才启用下边的记录查询\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (records) {\r\n      let td: any = []\r\n      let ek: any = []\r\n      let tp: any = {}\r\n      let _rootNodeValue = rootNodeValue\r\n      ;(records.value as any[]).forEach((d) => {\r\n        let { _id, ...rest } = d\r\n        let parent = rest[parentField || \"parent\"]\r\n        tp[_id] = {\r\n          value: _id,\r\n          key: _id,\r\n          title: d[nameField || \"name\"],\r\n          children: [],\r\n          _id,\r\n          ...rest,\r\n          ...(tp[_id] || {}),\r\n        }\r\n        ek.push(_id)\r\n        if (parent) {\r\n          if (tp[parent]) {\r\n            tp[parent].children.push(tp[_id])\r\n          } else tp[parent] = { children: [tp[_id]] }\r\n        } else if (!parent) {\r\n          td = [tp[_id]]\r\n          _rootNodeValue = _id\r\n        }\r\n      })\r\n      if (_rootNodeValue) {\r\n        td = (tp[_rootNodeValue] && [tp[_rootNodeValue]]) || []\r\n      }\r\n      setTreeData(td)\r\n      // setExpandedKeys(ek)\r\n      setExpandedKeys([_rootNodeValue])\r\n    }\r\n  }, [records])\r\n\r\n  return (\r\n    <Tree\r\n      style={{ width: \"100%\" }}\r\n      // checkable={checkable}\r\n      expandedKeys={expandedKeys}\r\n      treeData={treeData}\r\n      onExpand={(expandedKeys, { expanded, node }) => {\r\n        setExpandedKeys(expandedKeys)\r\n      }}\r\n      onSelect={(values, { selectedNodes }) => {\r\n        onChange && onChange(selectedNodes)\r\n      }}\r\n      // onCheck={(values, { checkedNodes }) => {\r\n      //   console.log(values, checkedNodes)\r\n      //   onChange && onChange(checkedNodes)\r\n      // }}\r\n      {...rest}\r\n    ></Tree>\r\n  )\r\n})\r\n","import { Builder } from '@builder.io/react';\r\nimport { Component, Input } from '@builder.io/sdk';\r\nimport _ from 'lodash';\r\nimport { ObjectTree } from \"./ObjectTree\";\r\n\r\nexport const configObjectTree: Component = {\r\n  name: 'Steedos:ObjectTree',\r\n  inputs: [\r\n    { name: 'objectApiName', type: 'text', friendlyName: \"对象名\" },\r\n  ],\r\n  canHaveChildren: false\r\n};\r\n\r\nexport const registerObjectTreeComponent = (fieldNames: string[] ) => {\r\n  let configInputs: Input[] = _.clone(configObjectTree.inputs) as Input[];\r\n  configInputs.unshift({\r\n    name: 'fieldName', \r\n    type: 'string', \r\n    enum: fieldNames,\r\n    helperText: '请选择字段名'\r\n  });\r\n\r\n  const config = Object.assign({}, configObjectTree, {inputs: configInputs});\r\n  Builder.registerComponent(ObjectTree, config);\r\n}\r\n\r\n","/*\r\n这是一个列表组件,将华炎魔方中的数据以列表的形式展示出来\r\n * @Author: Kent.Wood \r\n * @Date: 2021-03-25 22:41:50 \r\n * @Last Modified by: Kent.Wood\r\n * @Last Modified time: 2021-03-26 20:52:23\r\n */\r\n// import { BuilderStoreContext } from '@builder.io/react';\r\nimport { ObjectContext } from \"..\"\r\nimport { useMst } from \"@steedos/builder-store\"\r\nimport { List, Button, Checkbox } from \"antd\"\r\nimport _ from \"lodash\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { useQuery } from \"react-query\"\r\nimport { registerObjectListComponent } from \"..\"\r\nimport \"./ObjectList.less\"\r\nexport type ObjectListProps =\r\n  | ({\r\n      name?: string\r\n      objectApiName?: string\r\n      nameField?: string\r\n      filters?: string | string[]\r\n      checkable?: boolean //是否需要显示checkable,如果显示了,表示是多选多模式\r\n      onChange?: (any) => void\r\n    } & {\r\n      defaultClassName: string\r\n    })\r\n  | any\r\n\r\nexport const ObjectList = observer((props: ObjectListProps) => {\r\n  const objectContext: any = useContext(ObjectContext)\r\n  let store = useMst()\r\n  let { currentObjectApiName } = store\r\n  if (!currentObjectApiName) {\r\n    currentObjectApiName = objectContext.currentObjectApiName\r\n  }\r\n\r\n  let {\r\n    name: treeId = \"default\",\r\n    objectApiName,\r\n    nameField,\r\n    filters,\r\n    checkable,\r\n    onChange,\r\n    ...rest\r\n  } = props\r\n  // if (checkable == undefined) checkable = true\r\n\r\n  objectApiName = objectApiName || (currentObjectApiName as string)\r\n  const { isLoading, error, data: objectSchema, isFetching } = useQuery<any>(\r\n    objectApiName + \"_schema\",\r\n    async () => {\r\n      return await objectContext.requestObject(objectApiName as string)\r\n    }\r\n  )\r\n  if (objectSchema) registerObjectListComponent(_.keys(objectSchema.fields))\r\n  //上边都是schema相关的操作\r\n  //下边才是去请求数据\r\n\r\n  const [listData, setListData] = useState([])\r\n\r\n  const [selectedData, setSelectedData] = useState([])\r\n\r\n  let { data: records } = useQuery(\r\n    [objectApiName + \"_records\", nameField, filters, checkable], //这里以Props里的参数作为useQuery的第一参数，react-query会通过该参数是否发生变化来判断是否要重新进行请求\r\n    async () => {\r\n      const objectFields = Object.values(objectSchema.fields)\r\n        .filter(({ hidden }) => !hidden)\r\n        .map(({ name }) => name)\r\n      return await objectContext.requestRecords(\r\n        objectApiName as string,\r\n        filters,\r\n        objectFields\r\n      )\r\n    },\r\n    { enabled: !!objectSchema } //只有上边的schema加载好了，才启用下边的记录查询\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (records) {\r\n      setListData(records.value)\r\n    }\r\n  }, [records])\r\n\r\n  const handleItemClick = (record) => {\r\n    let tmpSelectedData = [...selectedData]\r\n    let isCheckedIndex = tmpSelectedData.findIndex(\r\n      ({ _id }) => _id == record._id\r\n    )\r\n    if (isCheckedIndex >= 0) {\r\n      tmpSelectedData.splice(isCheckedIndex, 1)\r\n    } else {\r\n      if (checkable) {\r\n        tmpSelectedData.push(record)\r\n      } else {\r\n        tmpSelectedData = [record]\r\n      }\r\n    }\r\n    setSelectedData(tmpSelectedData)\r\n    onChange && onChange(tmpSelectedData)\r\n  }\r\n\r\n  return (\r\n    <List\r\n      style={{ width: \"100%\" }}\r\n      dataSource={listData}\r\n      itemLayout=\"vertical\"\r\n      renderItem={(record: any) => {\r\n        return (\r\n          <List.Item\r\n            onClick={(e) => {\r\n              handleItemClick(record)\r\n            }}\r\n            className={\r\n              \"object-list-item \" +\r\n              (selectedData.some(({ _id }) => _id == record._id)\r\n                ? \"selected\"\r\n                : \"\")\r\n            }\r\n          >\r\n            {checkable ? (\r\n              <Checkbox\r\n                checked={selectedData.some(({ _id }) => _id == record._id)}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {/* <Button\r\n              type=\"text\"\r\n              style={{ width: \"100%\", textAlign: \"left\" }}\r\n              className={selectedData.some(({_id})=>_id==record._id)?\"selected\":\"\"}\r\n             \r\n            > */}\r\n            {record[nameField]}\r\n            {/* </Button> */}\r\n          </List.Item>\r\n        )\r\n      }}\r\n      {...rest}\r\n    ></List>\r\n  )\r\n})\r\n","import { Builder } from \"@builder.io/react\"\r\nimport { Component, Input } from \"@builder.io/sdk\"\r\nimport _ from \"lodash\"\r\nimport { ObjectList } from \"./ObjectList\"\r\n\r\nexport const configObjectList: Component = {\r\n  name: \"Steedos:ObjectList\",\r\n  inputs: [{ name: \"objectApiName\", type: \"text\", friendlyName: \"对象名\" }],\r\n  canHaveChildren: false,\r\n}\r\n\r\nexport const registerObjectListComponent = (fieldNames: string[]) => {\r\n  let configInputs: Input[] = _.clone(configObjectList.inputs) as Input[]\r\n  configInputs.unshift({\r\n    name: \"fieldName\",\r\n    type: \"string\",\r\n    enum: fieldNames,\r\n    helperText: \"请选择字段名\",\r\n  })\r\n\r\n  const config = Object.assign({}, configObjectList, { inputs: configInputs })\r\n  Builder.registerComponent(ObjectList, config)\r\n}\r\n","/*\r\n该组件在ObjectTable的基础上,扩展了左侧内容.提供List和Tree两种形式展示\r\n通过columnFields里添加相关属性来驱动\r\n\r\n * @Author: Kent.Wood \r\n * @Date: 2021-03-25 22:35:51 \r\n * @Last Modified by: Kent.Wood\r\n * @Last Modified time: 2021-03-29 20:56:02\r\n */\r\n\r\nimport ProCard from \"@ant-design/pro-card\"\r\nimport { useMst } from \"@steedos/builder-store\"\r\nimport _ from \"lodash\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\"\r\nimport { ActionType } from \"react-table\"\r\nimport \"./ObjectExpandTable.less\"\r\n// import { BuilderStoreContext } from '@builder.io/react';\r\n\r\nimport {\r\n  ObjectContext,\r\n  ObjectList,\r\n  ObjectTable,\r\n  ObjectTableColumnProps,\r\n  ObjectTableProps,\r\n  ObjectTree,\r\n} from \"..\"\r\n\r\nexport type ObjectExpandTableColumnProps = {\r\n  expandType?: \"tree\" | \"list\" //两种扩展内容形式\r\n  expandReference?: string //针对树显示所使用的对象名.等于树的objectApiName\r\n  expandNameField?: string //树中用于显示的字段名\r\n  expandParentField?: string //树中对象的父级的字段名，默认是parent,只在expand为tree时有效\r\n} & ObjectTableColumnProps\r\n\r\nexport type ObjectExpandTableProps =\r\n  | ({\r\n      name?: string\r\n      //parentField: string //当前对象的父级对象，用于树形结构呈现时使用\r\n      onChange: ([any]) => void\r\n      columnFields: ObjectExpandTableColumnProps[]\r\n    } & ObjectTableProps<ObjectExpandTableColumnProps> & {\r\n        defaultClassName?: string\r\n      })\r\n  | any\r\n\r\nfunction getFilter(ids, key): string {\r\n  return ids.map((id) => (key || \"_id\") + \" eq '\" + id + \"'\").join(\" or \")\r\n}\r\nfunction getContainsFilter(ids, key): string {\r\n  return ids\r\n    .map((id) => \"contains(\" + (key || \"_id\") + \",'\" + id + \"')\")\r\n    .join(\" or \")\r\n}\r\n\r\nexport const ObjectExpandTable = observer((props: ObjectExpandTableProps) => {\r\n  const objectContext = useContext(ObjectContext)\r\n  let store = useMst()\r\n  let { currentObjectApiName } = store\r\n  if (!currentObjectApiName) {\r\n    currentObjectApiName = objectContext.currentObjectApiName\r\n  }\r\n\r\n  const {\r\n    name: ObjectExpandTableId = \"default\",\r\n    // includeSub,\r\n    onChange,\r\n    ...rest\r\n  } = props\r\n\r\n  const [selectedUsers, setSelectedUsers] = useState([])\r\n  const [selectedExpandNode, setSelectedExpandNode] = useState([])\r\n\r\n  // const flatChildren = (node) => {\r\n  //   return [\r\n  //     node,\r\n  //     ...(node.children.length > 0\r\n  //       ? _.flatten(node.children.map((c) => flatChildren(c)))\r\n  //       : [null]),\r\n  //   ].filter((a) => a)\r\n  // }\r\n  const handleExpandContentChange = (selectedNodes) => {\r\n    //原先是过滤用户ID的。现有调整成过滤组织ID的方式\r\n    // let tmpUsers=[]\r\n    // selectedNodes.forEach(({ users }) => { tmpUsers = [...tmpUsers, ...users] });\r\n    // tmpUsers = _.uniq(tmpUsers);\r\n    //setSelectedUsers(tmpUsers)\r\n\r\n    let tmpTreeNodes = []\r\n\r\n    // if (includeSub) {\r\n    //   selectedNodes = _.flatten(selectedNodes.map((node) => flatChildren(node)))\r\n    // }\r\n\r\n    selectedNodes.forEach(({ _id }) => {\r\n      tmpTreeNodes = [...tmpTreeNodes, _id]\r\n    })\r\n    tmpTreeNodes = _.uniq(tmpTreeNodes)\r\n    setSelectedExpandNode(tmpTreeNodes)\r\n    tableRef.current?.reload()\r\n  }\r\n\r\n  const handleTableRowChose = (selectedRowKeys, selectedRows) => {\r\n    // console.log(selectedRowKeys, selectedRows);\r\n    onChange && onChange(selectedRows)\r\n  }\r\n\r\n  const tableRef = useRef<ActionType>()\r\n\r\n  useEffect(() => {\r\n    tableRef.current?.reload()\r\n  }, [tableRef.current])\r\n\r\n  const [expandProps, setExpandProps] = useState<{\r\n    type: string\r\n    objectApiName: string\r\n    nameField: string\r\n    parentField: string\r\n    releatedColumnField: string\r\n  }>(null)\r\n\r\n  useEffect(() => {\r\n    let expandDefine:\r\n      | {\r\n          expandType\r\n          expandReference\r\n          expandNameField\r\n          expandParentField\r\n          fieldName\r\n        }\r\n      | any = props.columnFields.find(\r\n      ({\r\n        expandType,\r\n        expandReference,\r\n        expandNameField,\r\n        expandParentField,\r\n        fieldName,\r\n      }) => {\r\n        if (expandType) {\r\n          return {\r\n            expandType,\r\n            expandReference,\r\n            expandNameField,\r\n            expandParentField,\r\n            fieldName,\r\n          }\r\n        }\r\n      }\r\n    )\r\n\r\n    setExpandProps(\r\n      expandDefine && {\r\n        type: expandDefine.expandType,\r\n        objectApiName: expandDefine.expandReference,\r\n        nameField: expandDefine.expandNameField,\r\n        parentField: expandDefine.expandParentField,\r\n        releatedColumnField: expandDefine.fieldName,\r\n      }\r\n    )\r\n  }, [props.columnFields])\r\n\r\n  return (\r\n    <>\r\n      <ProCard\r\n        split=\"vertical\"\r\n        className={[\"object-expand-table\", rest.className].join(\" \")}\r\n      >\r\n        {expandProps && expandProps.type && (\r\n          <ProCard colSpan=\"30%\" className=\"expand-part\">\r\n            {expandProps.type == \"tree\" && (\r\n              <ObjectTree\r\n                {...expandProps}\r\n                onChange={handleExpandContentChange}\r\n              />\r\n            )}\r\n            {expandProps.type == \"list\" && (\r\n              <ObjectList\r\n                {...(() => {\r\n                  let {\r\n                    parentField,\r\n                    releatedColumnField,\r\n                    ...expandPropsRest\r\n                  } = expandProps\r\n                  return expandPropsRest\r\n                })()}\r\n                onChange={handleExpandContentChange}\r\n              />\r\n            )}\r\n          </ProCard>\r\n        )}\r\n        <ProCard className=\"table-part\" ghost>\r\n          <ObjectTable\r\n            {...rest}\r\n            // filters={getFilter(selectedUsers.length>0?selectedUsers:['__none_exisit__'], \"user\")}\r\n            filters={\r\n              expandProps &&\r\n              getContainsFilter(\r\n                selectedExpandNode.length > 0 ? selectedExpandNode : [], //: [\"__none_exisit__\"],//本来的意思是,如果不选任何节点,就不能搜到任何人.现有调整成不选任何节点就找到所有人.\r\n                expandProps.releatedColumnField\r\n                // \"organizations_parents\"\r\n              )\r\n            }\r\n            // manualRequest={true}\r\n            actionRef={tableRef}\r\n            onChange={handleTableRowChose}\r\n          />\r\n        </ProCard>\r\n      </ProCard>\r\n    </>\r\n  )\r\n})\r\n","\r\nimport React from \"react\";\r\nimport { RequestData } from \"@ant-design/pro-table\";\r\n\r\nexport type RecordQueryRequestParams = {\r\n  pageSize: number,\r\n  current: number,\r\n  sort: any\r\n  // filter: any\r\n} \r\n\r\nconst defaultRequestObject = async ( objectApiName:string) =>{\r\n  throw new Error(`requestObject ${objectApiName} failed, you should impl this function in ObjectProvider.`)\r\n}\r\n\r\nconst defaultRequestRecords = async ( objectApiName:string, filters:any, fields:any, params?: RecordQueryRequestParams ) =>{\r\n  throw new Error(`requestRecords ${objectApiName} failed, you should impl this function in ObjectProvider.`)\r\n}\r\n\r\nconst defaultUpdateRecord = async (objectApiName:string, objectRecordId:string, formData:any) =>{\r\n  throw new Error(`submitForm ${objectApiName} update id: ${objectRecordId} failed, you should impl this function in ObjectProvider.`)\r\n}\r\n\r\nconst defaultInsertRecord = async (objectApiName:string, formData:any) =>{\r\n  throw new Error(`submitForm ${objectApiName} add record failed, you should impl this function in ObjectProvider.`)\r\n}\r\n\r\nexport type ObjectContextValueType = {\r\n  currentObjectApiName?: string,\r\n  currentRecordId?: string,\r\n  queryClient?: any,\r\n  requestObject: ( objectApiName:string) => Promise<object | Error>\r\n  requestRecords: <T extends Record<string, any>>( objectApiName:string, filters:any, fields:any, params?: RecordQueryRequestParams ) => Promise<Partial<RequestData<T>>>\r\n  updateRecord: (objectApiName:string, objectRecordId:string, formData:any ) => Promise<object | Error>\r\n  insertRecord: (objectApiName:string, formData:any ) => Promise<object | Error>\r\n}\r\n\r\nexport const ObjectContext = React.createContext<ObjectContextValueType>({\r\n  requestObject: defaultRequestObject,\r\n  requestRecords: defaultRequestRecords,\r\n  updateRecord: defaultUpdateRecord,\r\n  insertRecord: defaultInsertRecord\r\n});\r\n","/*\r\n这是一个带有输入框的组件,点了能够弹出ObjectTablePicker模式弹窗来\r\n它定义了value,onChange这两个和ant design的formItem兼容的属性\r\n * @Author: Kent.Wood \r\n * @Date: 2021-03-25 22:40:09 \r\n * @Last Modified by: Kent.Wood\r\n * @Last Modified time: 2021-03-26 12:22:50\r\n */\r\n\r\nimport { Button, Input, Select } from \"antd\"\r\nimport _ from \"lodash\"\r\nimport React, { useState } from \"react\"\r\nimport { PlusOutlined } from \"@ant-design/icons\"\r\nimport { ObjectTablePicker, ObjectTablePickerProps } from \"..\"\r\nconst { Option } = Select\r\n\r\nexport type SelectUserInputProps = {\r\n  value: any[]\r\n  inputLabelField: string | ((any) => string) //选出来的数据,如何渲染成输入框里的标签文本\r\n  onChange: ([any]) => void\r\n} & ObjectTablePickerProps\r\n\r\nexport const SelectUserInput = (props: SelectUserInputProps) => {\r\n  const { value, inputLabelField, onChange, ...rest } = props\r\n  const [selectedRecords, setSelectedRecords] = useState<any[]>(value)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Input.Group compact style={{ display: \"flex\" }}>\r\n        <Button\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setOpenPopup(true)}\r\n        ></Button>\r\n        <Select mode=\"tags\" style={{ flex: 1 }} value={selectedRecords}>\r\n          {selectedRecords &&\r\n            selectedRecords.map((item, i) => (\r\n              <Option key={i} value={item}>\r\n                {inputLabelField == undefined\r\n                  ? item\r\n                  : typeof inputLabelField == \"string\"\r\n                  ? item[inputLabelField]\r\n                  : typeof inputLabelField == \"function\"\r\n                  ? inputLabelField(item)\r\n                  : item}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n      </Input.Group>\r\n\r\n      <ObjectTablePicker\r\n        show={openPopup}\r\n        {...rest}\r\n        onClose={() => setOpenPopup(false)}\r\n        onChange={(emails) => {\r\n          setSelectedRecords([...selectedRecords, ...emails])\r\n        }}\r\n      ></ObjectTablePicker>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { ObjectContext, ObjectContextValueType, RecordQueryRequestParams } from \"./ObjectContext\";\r\n\r\n/* 通过 valueTypeMap，支持给Form传入第三方自定义控件 */\r\ntype ObjectProviderProps = ObjectContextValueType & {\r\n  children: any,\r\n}\r\n\r\nexport function ObjectProvider(props: ObjectProviderProps) {\r\n\r\n  const {\r\n    currentObjectApiName,\r\n    currentRecordId,\r\n    requestObject,\r\n    requestRecords,\r\n    updateRecord,\r\n    insertRecord,\r\n    queryClient = new QueryClient(),\r\n    children,\r\n  } = props;\r\n\r\n  return (\r\n    <ObjectContext.Provider value={{\r\n      currentObjectApiName,\r\n      currentRecordId,\r\n      queryClient,\r\n      requestObject,\r\n      requestRecords,\r\n      updateRecord,\r\n      insertRecord\r\n    }}>\r\n      <QueryClientProvider client={queryClient}>\r\n        {children}\r\n      </QueryClientProvider>\r\n    </ObjectContext.Provider>\r\n  )\r\n}","import React, {useContext} from \"react\";\r\n\r\nexport { ObjectContext } from \"@steedos/builder-object\";\r\n\r\nexport const SteedosContext = React.createContext<any>(null);\r\n\r\n","import React from \"react\"\r\n\r\nimport { SteedosClient } from \"@steedos/client\"\r\nimport { SteedosContext } from \"..\"\r\nimport { ObjectProvider } from \"@steedos/builder-object\"\r\nimport { FormProvider } from \"@steedos/builder-form\"\r\nimport { StoreProvider } from \"@steedos/builder-store\"\r\n\r\nconst {\r\n  STEEDOS_ROOT_URL,\r\n  STEEDOS_TENANT_ID,\r\n  STEEDOS_USER_ID,\r\n  STEEDOS_AUTH_TOKEN,\r\n  STEEDOS_LOCALE = \"zh_CN\",\r\n} = process.env\r\n\r\n/*\r\n参数：\r\n- locale: zh_CN, en_US, zh_TW  TODO: 和steedos的locale值不一样，获取user之后需要转换。\r\n\r\n*/\r\nexport function SteedosProvider(props: any) {\r\n  const {\r\n    rootUrl = STEEDOS_ROOT_URL,\r\n    tenantId = STEEDOS_TENANT_ID,\r\n    userId = STEEDOS_USER_ID,\r\n    authToken = STEEDOS_AUTH_TOKEN,\r\n    user = {},\r\n    locale = STEEDOS_LOCALE,\r\n    children,\r\n  } = props\r\n\r\n  let initialState = props.initialState ? props.initialState : {}\r\n\r\n  const client = new SteedosClient()\r\n\r\n  client.setUrl(rootUrl)\r\n  client.setUserId(userId)\r\n  client.setToken(authToken)\r\n  client.setSpaceId(tenantId)\r\n\r\n  const steedosContextValues = {\r\n    rootUrl,\r\n    tenantId,\r\n    userId,\r\n    authToken,\r\n    user,\r\n    locale,\r\n    client,\r\n  }\r\n\r\n  const requestObject = async (objectApiName: string) => {\r\n    //TODO 通过接口获取对象信息 /api/bootstrap/:spaceId/:objectName\r\n    if (!objectApiName) {\r\n      return\r\n    }\r\n    const object = await client.sobject(objectApiName).getConfig()\r\n    return object\r\n  }\r\n\r\n  const requestRecords = async (\r\n    objectApiName: string,\r\n    filters: any,\r\n    fields: any,\r\n    options: any\r\n  ) => {\r\n    const records = await client.sobject(objectApiName).find(filters, fields)\r\n    return records\r\n  }\r\n\r\n  const updateRecord = async (\r\n    objectApiName: string,\r\n    objectRecordId: string,\r\n    data: any\r\n  ) => {\r\n    const result = await client\r\n      .sobject(objectApiName)\r\n      .update(objectRecordId, data)\r\n\r\n    return result\r\n  }\r\n\r\n  const insertRecord = async (objectApiName: string, data: any) => {\r\n    const result = await client.sobject(objectApiName).insert(data)\r\n    return result\r\n  }\r\n\r\n  const objectProviderProps = {\r\n    requestObject,\r\n    requestRecords,\r\n    updateRecord,\r\n    insertRecord,\r\n  }\r\n\r\n  return (\r\n    <StoreProvider initialState={initialState}>\r\n      <SteedosContext.Provider value={steedosContextValues}>\r\n        <ObjectProvider {...objectProviderProps}>\r\n          <FormProvider locale={locale}>{children}</FormProvider>\r\n        </ObjectProvider>\r\n      </SteedosContext.Provider>\r\n    </StoreProvider>\r\n  )\r\n}\r\n","export const getCookie = (name: string) => {\r\n    let pattern = RegExp(name + \"=.[^;]*\")\r\n    let matched = document.cookie.match(pattern)\r\n    if (matched) {\r\n        let cookie = matched[0].split('=')\r\n        return cookie[1]\r\n    }\r\n    return ''\r\n}","// eslint-disable-next-line\r\nimport React, { useEffect, useState } from \"react\"\r\nimport logo from \"./logo.svg\"\r\nimport \"./App.css\"\r\n\r\nimport { SteedosProvider } from \"@steedos/builder-steedos\"\r\nimport { ObjectExpandTable, ObjectTable } from \"@steedos/builder-object\"\r\n\r\nimport { Modal, TreeSelect, Select, Input, Button } from \"antd\"\r\nimport ProCard from \"@ant-design/pro-card\"\r\nimport queryString from \"querystring\"\r\nimport { getAuthToken, getSpaceId, getUserId } from \"./accounts\"\r\nconst {\r\n  REACT_APP_STEEDOS_ROOT_URL,\r\n  REACT_APP_STEEDOS_TENANT_ID,\r\n  REACT_APP_STEEDOS_USER_ID,\r\n  REACT_APP_STEEDOS_AUTH_TOKEN,\r\n  REACT_APP_STEEDOS_LOCALE = \"zh_CN\",\r\n} = process.env\r\n\r\nfunction App(props: any) {\r\n  let queryObject = queryString.parse(window.location.search.slice(1))\r\n  const providerProps = {\r\n    rootUrl: queryObject.rooturl || REACT_APP_STEEDOS_ROOT_URL || \"/\",\r\n    tenantId:\r\n      queryObject.spaceid || getSpaceId() || REACT_APP_STEEDOS_TENANT_ID, //REACT_APP_STEEDOS_TENANT_ID,\r\n    userId: queryObject.userid || getUserId() || REACT_APP_STEEDOS_USER_ID,\r\n    authToken:\r\n      queryObject.authtoken || getAuthToken() || REACT_APP_STEEDOS_AUTH_TOKEN,\r\n    locale: REACT_APP_STEEDOS_LOCALE,\r\n  }\r\n\r\n  const [selectedUser, setSelectedUsers] = useState([])\r\n  const [selectedUserInTab1, setSelectedUsersInTab1] = useState([])\r\n  const [selectedUserInTab2, setSelectedUsersInTab2] = useState([])\r\n\r\n  const handleOnTab1Change = (users: any) => {\r\n    setSelectedUsersInTab1(users)\r\n  }\r\n  const handleOnTab2Change = (users: any) => {\r\n    setSelectedUsersInTab2(users)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSelectedUsers([...selectedUserInTab1, ...selectedUserInTab2])\r\n  }, [selectedUserInTab1, selectedUserInTab2])\r\n\r\n  const handleOnChange = (users: any) => {\r\n    setSelectedUsers(users)\r\n    // setSelectedEmails(users.map(({ name, email }) => `${name}<${email}>`))\r\n  }\r\n  const confirmChose = () => {\r\n    ;(window.opener || window.parent).postMessage(\r\n      {\r\n        ...queryObject,\r\n        selection: selectedUser.map(({ name, email }) => ({ name, email })),\r\n      },\r\n      \"*\"\r\n    )\r\n\r\n    window.close()\r\n    // setSelectedEmails(users.map(({ name, email }) => `${name}<${email}>`))\r\n  }\r\n\r\n  return (\r\n    <SteedosProvider {...providerProps}>\r\n      <div className=\"App\">\r\n        <ProCard\r\n          className=\"main-container\"\r\n          title=\"\"\r\n          split=\"horizontal\"\r\n          bordered\r\n          headerBordered\r\n        >\r\n          <ProCard\r\n            tabs={{\r\n              type: \"card\",\r\n            }}\r\n          >\r\n            <ProCard.TabPane\r\n              key=\"tab1\"\r\n              tab={`用户${\r\n                selectedUserInTab1.length > 0\r\n                  ? \"(\" + selectedUserInTab1.length + \")\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <ObjectExpandTable\r\n                onChange={handleOnTab1Change}\r\n                objectApiName=\"space_users\"\r\n                columnFields={[\r\n                  {\r\n                    fieldName: \"name\",\r\n                    sorter: true,\r\n                  },\r\n                  {\r\n                    fieldName: \"email\",\r\n                  },\r\n                  {\r\n                    fieldName: \"organizations_parents\",\r\n                    expandType: \"tree\",\r\n                    expandReference: \"organizations\",\r\n                    expandNameField: \"name\",\r\n                    expandParentField: \"parent\",\r\n                    hideInTable: true,\r\n                  },\r\n                ]}\r\n              />\r\n            </ProCard.TabPane>\r\n            <ProCard.TabPane\r\n              key=\"tab2\"\r\n              tab={`联系人${\r\n                selectedUserInTab2.length > 0\r\n                  ? \"(\" + selectedUserInTab2.length + \")\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <ObjectExpandTable\r\n                onChange={handleOnTab2Change}\r\n                rowKey=\"_id\"\r\n                objectApiName=\"contacts\"\r\n                columnFields={[\r\n                  {\r\n                    fieldName: \"name\",\r\n                    sorter: true,\r\n                  },\r\n                  {\r\n                    fieldName: \"email\",\r\n                  },\r\n                  {\r\n                    fieldName: \"group\",\r\n                    expandType: \"list\",\r\n                    expandReference: \"contacts_group\",\r\n                    expandNameField: \"name\",\r\n                    hideInTable: true,\r\n                  },\r\n                ]}\r\n              />\r\n            </ProCard.TabPane>\r\n          </ProCard>\r\n          <ProCard\r\n            style={{ height: \"60px\" }}\r\n            bodyStyle={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Button\r\n              disabled={selectedUser.length <= 0}\r\n              onClick={confirmChose}\r\n              type=\"primary\"\r\n            >\r\n              确定\r\n            </Button>\r\n          </ProCard>\r\n        </ProCard>\r\n      </div>\r\n    </SteedosProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { getCookie } from './cookie';\r\n\r\nexport const getUserId = () => {\r\n    return getCookie(\"X-User-Id\");\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n    return getCookie(\"X-Auth-Token\");\r\n}\r\n\r\nexport const getSpaceId = () => {\r\n    return getCookie(\"X-Space-Id\");\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />\r\n  // </React.StrictMode>,\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}