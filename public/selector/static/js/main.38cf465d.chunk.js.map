{"version":3,"sources":["../../builder-object/src/valueTypes/aggrid.less","../../builder-sdk/src/fetch_etag.ts","../../builder-sdk/src/utils/helpers.ts","../../builder-sdk/src/sobject.ts","../../builder-sdk/src/graphql.ts","../../builder-sdk/src/client4.ts","../../builder-sdk/src/utils/sentry.ts","../../builder-store/src/Settings.tsx","../../builder-store/src/API.tsx","../../builder-store/src/Form.tsx","../../builder-store/src/Object.tsx","../../builder-store/src/Apps.tsx","../../builder-store/src/User.tsx","../../builder-store/src/Queries.tsx","../../builder-store/src/index.tsx","../../builder-form/src/components/Form.tsx","../../builder-form/src/components/Form.config.tsx","../../builder-form/src/components/Field.tsx","../../builder-form/src/components/FieldSection.tsx","../../builder-form/src/components/FieldObject.config.tsx","../../builder-form/src/providers/FormContext.tsx","../../builder-form/src/valueTypes/index.tsx","../../builder-form/src/valueTypes/href.tsx","../../builder-form/src/valueTypes/email.tsx","../../builder-form/src/providers/FormProvider.tsx","../../builder-locale/src/zh_CN.tsx","../../builder-locale/src/en_US.tsx","../../builder-object/src/components/ObjectField.tsx","../../builder-object/src/components/ObjectForm.tsx","../../builder-object/src/components/ObjectTable.tsx","../../builder-object/src/utils/index.tsx","../../builder-object/src/components/ObjectTree.tsx","../../builder-object/src/components/ObjectList.tsx","../../builder-object/src/components/ObjectExpandTable.tsx","../../builder-object/src/components/SelectUserInput.tsx","../../builder-object/src/components/ObjectListView.tsx","../../builder-object/src/components/Iframe.tsx","../../builder-object/src/components/ag-grid/CellEditor.tsx","../../builder-object/src/components/ag-grid/CellRender.tsx","../../builder-object/src/components/ag-grid/CellFilter.tsx","../../builder-object/src/components/ObjectGrid.tsx","../../builder-object/src/providers/ObjectContext.tsx","../../builder-object/src/valueTypes/boolean.tsx","../../builder-object/src/valueTypes/currency.tsx","../../builder-object/src/valueTypes/datetime.tsx","../../builder-object/src/valueTypes/email.tsx","../../builder-object/src/valueTypes/number.tsx","../../builder-object/src/valueTypes/percent.tsx","../../builder-object/src/valueTypes/select.tsx","../../builder-object/src/valueTypes/toggle.tsx","../../builder-object/src/valueTypes/url.tsx","../../builder-lightning/src/components/AppLauncher.jsx","../../builder-lightning/src/components/ListView.jsx","../../builder-lightning/src/components/Icon.jsx","../../builder-lightning/src/components/IconSettings.jsx","../../builder-object/src/valueTypes/lookup.tsx","../../builder-object/src/valueTypes/master_detail.tsx","../../builder-object/src/valueTypes/object.tsx","../../builder-object/src/valueTypes/aggrid.tsx","../../builder-object/src/valueTypes/image.tsx","../../builder-object/src/valueTypes/index.tsx","../../builder-object/src/valueTypes/avatar.tsx","../../builder-object/src/valueTypes/formula.tsx","../../builder-object/src/valueTypes/summary.tsx","../../builder-object/src/valueTypes/autonumber.tsx","../../builder-object/src/providers/ObjectProvider.tsx","../../builder-object/src/providers/SteedosProvider.tsx","../../builder-object/src/providers/SteedosContext.tsx","cookie.ts","App.tsx","accounts.ts","use-resize-observer.ts","reportWebVitals.ts","index.tsx","../../builder-store/src/utils/index.tsx","webpack:///./src/App.less?3f93","App.less","webpack:///../builder-form/src/components/Field.less?2e5d","../../builder-form/src/components/Field.less","webpack:///../builder-object/src/components/ObjectForm.less?4a64","../../builder-object/src/components/ObjectForm.less","webpack:///../builder-object/src/components/ObjectTable.less?0258","../../builder-object/src/components/ObjectTable.less","webpack:///../builder-object/src/components/ObjectTree.less?50de","../../builder-object/src/components/ObjectTree.less","webpack:///../builder-object/src/components/ObjectList.less?e238","../../builder-object/src/components/ObjectList.less","webpack:///../builder-object/src/components/ObjectExpandTable.less?bc07","../../builder-object/src/components/ObjectExpandTable.less","webpack:///../builder-object/src/valueTypes/lookup.less?4fd7","../../builder-object/src/valueTypes/lookup.less","webpack:///../builder-object/src/valueTypes/aggrid.less?af8e"],"names":["___CSS_LOADER_EXPORT___","push","module","i","etags","url","options","headers","method","etag","fetch","then","response","status","clone","responseEtag","get","Reflect","apply","undefined","buildQueryString","parameters","keys","Object","length","query","key","encodeURIComponent","client","objectName","this","getFilter","filters","isArray","userContext","userId","getUserId","spaceId","getSpaceId","user","getSelect","fields","toString","getQueryParams","params","$filter","$select","pageSize","$top","current","$skip","sortIsNull","sort","map","value","join","$orderby","getConfig","getUrl","doFetch","getRecordPermissions","recordId","find","getBaseRoute","concat","findOne","record","id","retrieve","ids","insert","data","body","JSON","stringify","update","delete","count","_data","isString","console","log","_id","HEADER_X_CLUSTER_ID","HEADER_X_VERSION_ID","LOGIN_TOKEN_KEY","LOGIN_TOKEN_EXPIRES_KEY","USER_ID_KEY","logToConsole","_lastLoginTokenWhenPolled","loginExpirationInDays","serverVersion","clusterId","token","authToken","csrf","urlVersion","userAgent","enableLogging","defaultHeaders","diagnosticId","includeCookies","isRudderKeySet","translations","connectionError","unknownError","sobjects","graphql","getTranslations","logClientError","message","level","login","password","deviceId","trackEvent","device_id","locale","getAccountsRoute","createUser","inviteId","redirect","queryParams","t","iid","r","createSpace","name","sendVerificationToken","getSettings","getMe","getMySpaces","logout","doFetchWithResponse","ok","getOptions","originalHeaders","Map","nestedHeaders","forEach","val","capitalizedKey","replace","l","toUpperCase","realVal","match","nestedHeaderStrings","split","shift","moreNestedHeaders","h","set","parseAndMergeNestedHeaders","json","intl","defaultMessage","has","error","msg","server_error_id","status_code","code","changePassword","oldPassword","newPassword","verifyEmail","email","verifyMobile","mobile","sobject","foo","URL","window","location","href","pathname","ROOT_URL_PATH_PREFIX","getAbsoluteUrl","baseUrl","startsWith","setUrl","setUserAgent","getToken","setToken","setSpaceId","getAuthToken","setCSRF","csrfToken","setAcceptLanguage","setEnableLogging","enable","setIncludeCookies","include","setUserId","setUserRoles","roles","userRoles","setDiagnosticId","enableRudderEvents","getServerVersion","getUrlVersion","getBootstrapRoute","getCSRFFromCookie","document","cookie","cookies","trim","newOptions","HEADER_BEARER","toLowerCase","credentials","assign","validate","category","event","props","type","user_actual_id","apiUrl","index","substring","indexOf","whitelist","part","cleanUrlForLogging","defineProperty","enumerable","Error","localStorage","getItem","config","rootUrl","tenantId","env","Settings","model","isProd","maybeNull","string","currentObjectApiName","currentRecordId","frozen","actions","self","setRootUrl","setTenantId","setItem","removeItem","setAuthToken","setLocale","setCurrentObjectApiName","setCurrentRecordId","create","API","requestObject","objectApiName","object","requestRecordPermissions","requestRecords","updateRecord","objectRecordId","insertRecord","deleteRecord","FormModel","identifier","required","boolean","readonly","mode","union","setMode","newMode","setValue","Forms","items","optional","loadById","form","newForm","put","RecordCache","array","permissions","isLoading","loadRecord","RecordListCache","recordsJson","views","parse","loadRecords","ObjectModel","schema","recordCaches","recordListCaches","loadObject","Creator","Objects","getRecord","newRecord","getRecordList","stringifyFilters","stringifyOptions","recordListId","recordList","newRecordList","objects","getObject","newObject","AppMenuModel","path","icon","target","description","children","Apps","menus","currentAppId","currentApp","loadMenus","menu","setMenus","getMenus","size","getCurrentApp","app","toJSON","setCurrentAppId","appId","User","me","session","isLoginFailed","setSession","loadSession","getSession","setMe","goLogin","loadMe","spaces","getCompanyOrganizationIds","companies","c","organization","userInput","passowrd","username","Number","afterCreate","QueryModel","loadData","queryId","results","columns","rows","result","column","Queries","getData","newQuery","stores","Meteor","Form","formId","layout","submitter","isModalForm","isDrawerForm","trigger","rest","formItemLayout","labelAlign","labelCol","span","wrapperCol","defSubmitter","searchConfig","resetText","submitText","resetButtonProps","onClick","_submitter","formProps","className","contentRender","FormComponent","BaseForm","ModalForm","DrawerForm","initialValues","context","useContext","attributes","fieldMode","valueType","isWide","showInlineIcon","formItemProps","formItemPropsMerged","style","gridColumn","vertical","ProFieldWrap","fieldSchema","fieldProps","dependFieldValues","proFieldProps","emptyText","field_schema","depend_field_values","onInlineEdit","inlineIcon","iconCategory","iconName","iconSize","iconVariant","iconClassName","variant","role","onDoubleClick","flex","width","ProFormField","createField","label","FieldSection","colSize","title","titleHidden","boxOptions","templateColumns","gap","FormContext","createContext","render","text","renderFormItem","_","placeholder","link","FormProvider","valueTypeMap","proContextValues","getProLocale","valueTypes","antdContextValues","getAntdLocale","getSteedosIntl","Provider","getMessageFromLocaleMap","source","defaultValue","paths","p","createSteedosIntl","localeMap","getMessage","zhCNIntl","save","cancel","enUSIntl","ObjectField","fieldName","disableMobile","is_wide","formFieldProps","help","hidden","omit","rules","colon","dependOn","depend_on","objectSchema","afterUpdate","afterInsert","visible","proForm","useForm","fieldNames","fieldSchemaArray","mergedSchema","field","group","isObjectField","test","isOmitField","recordCache","setFieldsValue","onFinish","values","sections","dom","sectionName","sectionFields","getSection","getSections","columnFields","defaultFilters","onChange","toolbar","search","totalRecords","setTotalRecords","isMobile","selfTableRef","defaultSort","proColumns","columnItem","columnOption","defaultSortOrder","sortDirection","sortValue","ele","getDefaultSortOrder","proColumn","fieldType","proColumnProps","dataIndex","sortable","sorter","multiple","getObjectTableProColumn","searchOptions","filterType","proSearch","toolbarOptions","subTitle","settings","proToolbar","request","filter","searchFilters","__objectApiName","__columnFields","__defaultFilters","restFilters","keyFilters","includes","odataKeyFilters","n","isEmpty","sk","success","total","rowKey","rowSelection","pagination","hideOnSinglePage","columnEmptyText","actionRef","reload","getObjectRecordUrl","redordId","getTreeDataFromRecords","records","nameField","parentField","tempParentValue","rootNode","getChildrenNodes","parent","nodes","tempNode","tempChildren","isRoot","item","getTreeNode","rootNodeValue","checkable","treeData","setTreeData","expandedKeys","setExpandedKeys","useQuery","objectFields","enabled","rootNodeValues","treeItem","onExpand","onSelect","selectedNodes","listData","setListData","selectedData","setSelectedData","dataSource","itemLayout","renderItem","Item","e","tmpSelectedData","isCheckedIndex","findIndex","splice","handleItemClick","some","checked","getTableFilter","expandProps","selectedExpandNode","expandFilters","expandKey","releatedColumnField","setSelectedExpandNode","handleExpandContentChange","keyField","tmpTreeNodes","node","uniq","tableRef","setExpandProps","expandDefine","expandType","expandReference","expandNameField","expandParentField","tablePartWidth","scroll","colSpan","ghost","selectedRowKeys","selectedRows","listName","listView","list_views","listViewColumns","nameFieldKey","master","isObject","to","columnField","relatedFieldApiName","getListViewColumnFields","default","NAME_FIELD_KEY","getListviewColumns","filter_scope","isFunction","warn","filtersOwner","getListViewFilters","AgGridCellEditor","ref","getValue","isPopup","newValue","currentTarget","AgGridCellRenderer","AgGridCellFilter","initialValue","setFilter","isFilterActive","getModel","setModel","filterChangedCallback","padding","assistiveText","menuPosition","option","height","columnDefs","resizable","maxWidth","minWidth","checkboxSelection","headerCheckboxSelection","suppressMenu","filterParams","headerName","rowGroup","cellRenderer","cellRendererParams","cellEditor","cellEditorParams","editable","getColumns","rowModelType","paginationPageSize","modules","stopEditingWhenGridLosesFocus","serverSideDatasource","getRows","sortModel","sortField","colId","startRow","rowData","rowCount","serverSideStoreType","Partial","sideBar","frameworkComponents","rowActions","ObjectContext","formData","Check","currency","datetime","number","percent","realValue","tags","optionsFunction","optionItem","Fragment","tagItem","open","openTag","setParams","__keyWords","keyWords","onDropdownVisibleChange","Date","showSearch","optionFilterProp","toggle","state","onSearch","setState","triggerOnClick","history","appApiName","src","onClose","apps","tabs","tab","getTabs","actionSprite","standardSprite","customSprite","utilitySprite","region","triggerName","isOpen","iconNode","displayName","Component","iconPath","info","nameSwitcherDropdown","buttonClassName","buttonVariant","onRenderActions","align","onRenderControls","truncate","LookupField","defaultReferenceTo","resizeSubject","reference_to","reference_sort","reference_limit","showIcon","reference_to_field","fieldFilters","filtersFunction","referenceTos","o","referenceToObject","referenceToObjectSchema","referenceToLableField","referenceToObjectIcon","referenceParentField","referenceTo","setReferenceTo","selectItemLabel","setSelectItemLabel","parent_field","recordListData","referenceTofilters","selectItem","recordItem","labelInValue","requestFun","__referenceTo","textFilters","filtersOfField","odataTextFilters","newFieldProps","optionItemRender","isLookupTree","enable_tree","dropdownRender","blur","PlusOutlined","showArrow","SelectProFieldProps","dropdownMatchSelectWidth","needReferenceToSelect","isLoadingReferenceTosObject","referenceToObjectLeftIcon","FieldTreeSelect","opened","setOpened","treeDefaultExpandedKeys","treeNameField","treeNodeFilterProp","allowClear","dropdownStyle","maxHeight","overflow","master_detail","ObjectFieldObject","sub_fields","component","onValuesChange","changedValues","allValues","fieldItemProps","getFields","ObjectFieldGrid","row","gridApi","setGridApi","immutableData","getRowNodeId","rowDragManaged","animateRows","rowDrag","hide","onRowDragEnd","api","forEachNode","bind","onCellClicked","$event","startEditingCell","rowIndex","colKey","onGridReady","sizeColumnsToFit","suppressNoRowsOverlay","selectedId","dataItem","setRowData","deleteRow","iconPosition","newRow","addRow","ImageField","fileType","alt","proProps","fileList","propsOther","action","listType","onPreview","file","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","image","Image","write","outerHTML","accept","space","owner","newFileList","select","lookup","avatar","grid","formula","summary","autonumber","defaultQueryClientConfig","defaultOptions","queries","refetchOnWindowFocus","ObjectProvider","queryClient","QueryClientProvider","SteedosProvider","objectProviderProps","SteedosContext","getCookie","pattern","RegExp","matched","observer","queryObject","queryString","slice","providerProps","rooturl","spaceid","userid","authtoken","useState","selectedUser","setSelectedUsers","selectedUserInTab1","setSelectedUsersInTab1","selectedUserInTab2","setSelectedUsersInTab2","selectedOrgForMobile","setSelectedOrgForMobile","spaceUsersFilters","setSpaceUsersFilters","selectedContactForMobile","setSelectedContactForMobile","contactsFilters","setContactsFilters","useRef","contentRectHeight","targetRef","contentRect","setContentRect","resizeObserver","disconnect","useEffect","observe","ResizeObserver","entries","top","right","bottom","left","useResizeObserver","firstChild","useMemo","scrollHeight","y","useAntdMediaQuery","userSession","defaultSaceUsersFilters","orgExpandFilters","is_space_admin","orgIds","spaceUserSearchBar","contactSearchBar","organizationColumns","hideInSearch","hideInTable","groupColumns","changeValues","organizations_parents","bordered","headerBordered","TabPane","users","debounceTime","toolBarRender","bodyStyle","display","justifyContent","alignItems","disabled","opener","postMessage","selection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","saveEval","js","eval","getFieldSchema","objectConfig","fieldNameForReg","fieldItem","matches","lastFieldKey","_reference_to","getFieldsSchema","fieldsSchema","getListViewSchema","_filters","_index","pop","_value","_is_date","getListViewsSchema","listViewsSchema","listViewSchema","convertObjectSchema","getObjectOdataExpandFields","expand_fields","ref1","ref2","convertRecordsForLookup","recoreds","fieldValue","fieldReferenceTo","labels","_NAME_FIELD_VALUE","content","__esModule","exports","locals"],"mappings":"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","file":"static/js/main.38cf465d.chunk.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ag-theme-balham {\\n  font-size: 13px;\\n  overflow: scroll;\\n}\\n.ag-theme-balham .ag-root-wrapper {\\n  overflow: visible;\\n}\\n.ag-theme-balham .ag-root-wrapper-body.ag-layout-normal {\\n  height: inherit;\\n}\\n.ag-theme-balham .ag-row {\\n  border-top-style: none;\\n  border-left-style: none;\\n  border-right-style: none;\\n}\\n.ag-theme-balham .ag-row:first-child {\\n  border-bottom-style: solid;\\n}\\n.ag-theme-balham .ag-ltr .ag-has-focus .ag-cell-inline-editing.ag-cell-focus {\\n  overflow: visible;\\n  background: transparent;\\n}\\n.ag-theme-balham .ag-ltr .ag-has-focus .ag-cell-inline-editing.ag-cell-focus .ag-react-container {\\n  min-width: 200px;\\n  overflow: visible;\\n}\\n.ag-theme-balham .ag-popup-editor {\\n  border: none;\\n  box-shadow: none;\\n}\\n.ag-theme-balham .ag-popup-editor .slds-popover--edit .slds-popover__body,\\n.ag-theme-balham .ag-popup-editor .slds-popover_edit .slds-popover__body {\\n  padding: 0.25rem;\\n}\\n.ag-theme-balham .ag-body-viewport {\\n  min-height: 10px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://../builder-object/src/valueTypes/aggrid.less\"],\"names\":[],\"mappings\":\"AAEA;EACE,eAAA;EACA,gBAAA;AADF;AADA;EAKI,iBAAA;AADJ;AAJA;EAQI,eAAA;AADJ;AAPA;EAWI,sBAAA;EACA,uBAAA;EACA,wBAAA;AADJ;AAZA;EAgBI,0BAAA;AADJ;AAfA;EAoBI,iBAAA;EAEA,uBAAA;AAHJ;AAnBA;EAwBM,gBAAA;EACA,iBAAA;AAFN;AAvBA;EA6BI,YAAA;EACA,gBAAA;AAHJ;AA3BA;;EAgCM,gBAAA;AADN;AA/BA;EAoCI,gBAAA;AAFJ\",\"sourcesContent\":[\"\\n\\n.ag-theme-balham {\\n  font-size: 13px;    \\n  overflow: scroll;\\n  \\n  .ag-root-wrapper{\\n    overflow: visible;\\n  }\\n  .ag-root-wrapper-body.ag-layout-normal {\\n    height: inherit;\\n  }\\n  .ag-row {\\n    border-top-style: none;\\n    border-left-style: none;\\n    border-right-style: none;\\n  }\\n  .ag-row:first-child {\\n    border-bottom-style: solid;\\n  }\\n  // .ag-cell-focus:not(.ag-cell-range-selected),\\n  .ag-ltr .ag-has-focus .ag-cell-inline-editing.ag-cell-focus {\\n    overflow: visible;\\n    // border: none;\\n    background: transparent;\\n    .ag-react-container {\\n      min-width: 200px;\\n      overflow: visible;\\n    }\\n  }\\n  .ag-popup-editor {\\n    border: none;\\n    box-shadow: none;\\n    .slds-popover--edit .slds-popover__body, .slds-popover_edit .slds-popover__body {\\n      padding: 0.25rem;\\n    }\\n  }\\n  .ag-body-viewport {\\n    min-height: 10px;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// const fetch = require('node-fetch');\r\nconst data = {};\r\nconst etags = {};\r\n\r\nexport default (url:any = null, options:any = {headers: {}}) => {\r\n    url = url || options.url; // eslint-disable-line no-param-reassign\r\n\r\n    if (options.method === 'GET' || !options.method) {\r\n        const etag = etags[url];\r\n        const cachedResponse = data[`${url}${etag}`]; // ensure etag is for url\r\n        if (etag) {\r\n            options.headers['If-None-Match'] = etag;\r\n        }\r\n\r\n        return fetch(url, options).\r\n            then((response) => {\r\n                if (response.status === 304) {\r\n                    return cachedResponse.clone();\r\n                }\r\n\r\n                if (response.status === 200) {\r\n                    const responseEtag = response.headers.get('Etag');\r\n\r\n                    if (responseEtag) {\r\n                        data[`${url}${responseEtag}`] = response.clone();\r\n                        etags[url] = responseEtag;\r\n                    }\r\n                }\r\n\r\n                return response;\r\n            });\r\n    }\r\n\r\n    // all other requests go straight to fetch\r\n    return Reflect.apply(fetch, undefined, [url, options]); //eslint-disable-line no-undefined\r\n};\r\n","import {Dictionary} from '../types/utilities';\r\n\r\nexport function buildQueryString(parameters: Dictionary<any>): string {\r\n    const keys = Object.keys(parameters);\r\n    if (keys.length === 0) {\r\n        return '';\r\n    }\r\n\r\n    let query = '?';\r\n    for (let i = 0; i < keys.length; i++) {\r\n        const key = keys[i];\r\n        query += key + '=' + encodeURIComponent(parameters[key]);\r\n\r\n        if (i < keys.length - 1) {\r\n            query += '&';\r\n        }\r\n    }\r\n\r\n    return query;\r\n}","import { formatFiltersToODataQuery } from '@steedos/filters';\r\nimport { buildQueryString } from './utils/helpers';\r\nimport { Filters, Fields, Options, Record, ODataQuery } from './types/sobject';\r\n\r\nimport _ from 'underscore';\r\n\r\nexport default class SObject {\r\n    client: any;\r\n    objectName: string;\r\n    config: any;\r\n    constructor(client, objectName){\r\n        this.client = client;\r\n        this.objectName = objectName;\r\n    }\r\n\r\n    private getFilter(filters: Filters){\r\n        if(_.isArray(filters)){\r\n            let userContext: any = {};\r\n            userContext.userId = this.client.getUserId();\r\n            userContext.spaceId = this.client.getSpaceId();\r\n            userContext.user = {}; //TODU:当前用户userSession\r\n            return formatFiltersToODataQuery(filters, userContext)\r\n        }\r\n        return filters;\r\n    }\r\n\r\n    private getSelect(fields){\r\n        if(_.isArray(fields)){\r\n            return fields.toString()\r\n        }\r\n        return fields;\r\n    }\r\n\r\n    private getQueryParams(filters: Filters, fields: Fields, options: Options){\r\n        let params: ODataQuery = {};\r\n        const $filter = this.getFilter(filters);\r\n        if($filter){\r\n            params.$filter = $filter\r\n        }\r\n        const $select = this.getSelect(fields);\r\n        if($select){\r\n            params.$select = $select\r\n        }\r\n        // if(options && options.expand){\r\n        //     params.$expand = options.expand\r\n        // }\r\n        if(options){\r\n            if(options.pageSize){\r\n                params.$top = options.pageSize;\r\n            }\r\n            // current是从1开始的页码索引\r\n            if(options.current && options.pageSize){\r\n                params.$skip = (options.current - 1) * options.pageSize;\r\n            }\r\n            let sortIsNull:any;\r\n            if(typeof options.sort === 'string'){\r\n                sortIsNull=options.sort;\r\n            }else if(_.isArray(options.sort)){\r\n                let order = _.map(options.sort,(value)=>{\r\n                    let order2 = value[1]==='desc' ? value[0] + ' desc' : value[0];\r\n                    return order2;\r\n                }).join(\",\")\r\n                sortIsNull=order;\r\n            }\r\n            if(sortIsNull){\r\n                params.$orderby=sortIsNull;\r\n            }\r\n        }\r\n        return params;\r\n    }\r\n\r\n    async getConfig(){\r\n        // const url = `${this.client.getBootstrapRoute()}/${this.objectName}`;\r\n        const url = `${this.client.getUrl()}/service/api/@${this.objectName}/uiSchema`;\r\n        return await this.client.doFetch(url, {method: 'get'});\r\n    }\r\n\r\n    async getRecordPermissions(recordId){\r\n        const url = `${this.client.getUrl()}/service/api/@${this.objectName}/recordPermissions/${recordId}`;\r\n        return await this.client.doFetch(url, {method: 'get'});\r\n    }\r\n\r\n    /**\r\n     * Find and fetch records which matches given conditions\r\n     *\r\n     * @param {String|Array} [filters] - filtering records\r\n     * @param {String|Array} [fields] - Fields to fetch.\r\n     * @param {Object} [options] - Query options.\r\n     * @param {Number} [options.$top] - Maximum number of records the query will return.\r\n     * @param {Number} [options.$skip] - Synonym of options.offset.\r\n     * @param {String} [options.$orderby] - sorting.\r\n     * @param {boolean} [options.$count] - count.\r\n     * @returns {Promise<Array<Record>>}\r\n     */\r\n    async find(filters: Filters, fields: Fields, options: Options){\r\n        let params = this.getQueryParams(filters, fields, options);\r\n        let url = this.client.getBaseRoute() + \"/api/v4/\".concat(this.objectName) + buildQueryString(params);\r\n        let result = await this.client.doFetch(url, {method: 'get'});\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * TODO 根据条件查询数据，返回1条($top = 1)。\r\n     * @param filters \r\n     * @param fields \r\n     * @param options \r\n     * @returns {Promise<Record>}\r\n     */\r\n    async findOne(filters: Filters, fields: Fields, options: Options){\r\n\r\n    }\r\n\r\n    /**\r\n     * TODO 根据id查询数据。\r\n     * @param id \r\n     * @param fields \r\n     */\r\n    async record(id: string, fields: Fields){\r\n        \r\n    }\r\n\r\n    /**\r\n     * TODO 根据ids查询数据。\r\n     * @param ids \r\n     * @param fields \r\n     */\r\n    async retrieve(ids: Array<string>, fields: Fields){\r\n\r\n    }\r\n\r\n    /**\r\n     * TODO 写入数据，并返回新记录\r\n     * @param data \r\n     */\r\n    async insert(data: Record){\r\n        let url = `${this.client.getBaseRoute()}/api/v4/${this.objectName}`;\r\n        let result = await this.client.doFetch(url, {method: 'POST', body: JSON.stringify(data)});\r\n        return result.value;\r\n    }\r\n\r\n    /**\r\n     * TODO 根据id，修改记录，并返回新记录\r\n     * @param id \r\n     * @param data \r\n     */\r\n    async update(id: string, data: Record){\r\n        let url = `${this.client.getBaseRoute()}/api/v4/${this.objectName}/${id}`;\r\n        let result = await this.client.doFetch(url, {method: 'put', body: JSON.stringify(data)});\r\n        return result.value;\r\n    }\r\n\r\n    /**\r\n     * TODO 根据id, 删除记录\r\n     * @param id \r\n     */\r\n    async delete(id: string){\r\n        let url = `${this.client.getBaseRoute()}/api/v4/${this.objectName}/${id}`;\r\n        let result = await this.client.doFetch(url, {method: 'delete'});\r\n        return result\r\n    }\r\n\r\n    /**\r\n     * TODO 返回满足条件的记录数\r\n     * @param filters \r\n     */\r\n    async count(filters: Filters){\r\n\r\n    }\r\n\r\n    // 预留\r\n    // recent(){}\r\n}","import _ from 'underscore';\r\n\r\nexport default class Graphql {\r\n    client: any;\r\n    constructor(client){\r\n        this.client = client;\r\n    }\r\n\r\n    async query(query: string){\r\n        let url = this.client.getBaseRoute() + \"/graphql\";\r\n        let body = {\r\n            query: query\r\n        };\r\n        return await this.client.doFetch(url, {method: 'POST', body: JSON.stringify(body)});\r\n    }\r\n\r\n    async insert(objectName: string, data){\r\n        let url = this.client.getBaseRoute() + \"/graphql\";\r\n        let _data = data;\r\n        if(!_.isString(_data)){\r\n            _data = JSON.stringify(data)\r\n        }\r\n        let body = {\r\n            query: `mutation {\r\n                ${objectName}__insert(data:${_data})\r\n            }`\r\n        };\r\n        console.log('insert body', body);\r\n        return await this.client.doFetch(url, {method: 'POST', body: JSON.stringify(body)});\r\n    }\r\n\r\n    async update(objectName: string, _id: string, data){\r\n        let url = this.client.getBaseRoute() + \"/graphql\";\r\n        let _data = data;\r\n        if(!_.isString(_data)){\r\n            _data = JSON.stringify(data)\r\n        }\r\n        let body = {\r\n            query: `mutation {\r\n                ${objectName}__update(_id:\"${_id}\", data:${_data})\r\n            }`\r\n        };\r\n        return await this.client.doFetch(url, {method: 'POST', body: JSON.stringify(body)});\r\n    }\r\n\r\n    async delete(objectName: string, _id: string){\r\n        let url = this.client.getBaseRoute() + \"/graphql\";\r\n        let body = {\r\n            query: `mutation {\r\n                ${objectName}__delete(_id:\"${_id}\")\r\n            }`\r\n        };\r\n        return await this.client.doFetch(url, {method: 'POST', body: JSON.stringify(body)});\r\n    }\r\n\r\n\r\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n\r\nimport fetch from './fetch_etag';\r\nimport {cleanUrlForLogging} from './utils/sentry';\r\nimport { Options, ClientResponse } from './types/client4';\r\nimport {buildQueryString} from './utils/helpers';\r\nimport { UserProfile } from './types/users';\r\nimport { ServerError } from './types/errors';\r\nimport { Space } from './types/spaces';\r\nimport SObject from './sobject';\r\nimport Graphql from './graphql';\r\n\r\nconst HEADER_AUTH = 'Authorization';\r\nconst HEADER_BEARER = 'Bearer';\r\nconst HEADER_REQUESTED_WITH = 'X-Requested-With';\r\nconst HEADER_USER_AGENT = 'User-Agent';\r\nconst HEADER_X_CLUSTER_ID = 'X-Cluster-Id';\r\nconst HEADER_X_CSRF_TOKEN = 'X-CSRF-Token';\r\nexport const HEADER_X_VERSION_ID = 'X-Version-Id';\r\nconst PER_PAGE_DEFAULT = 60;\r\nconst LOGS_PER_PAGE_DEFAULT = 10000;\r\nexport const DEFAULT_LIMIT_BEFORE = 30;\r\nexport const DEFAULT_LIMIT_AFTER = 30;\r\n\r\nconst DEFAULT_LOGIN_EXPIRATION_DAYS = 90;\r\nconst LOGIN_UNEXPIRING_TOKEN_DAYS = 365 * 100;\r\n\r\nexport default class SteedosClient {\r\n    LOGIN_TOKEN_KEY = \"Meteor.loginToken\";\r\n    LOGIN_TOKEN_EXPIRES_KEY = \"Meteor.loginTokenExpires\";\r\n    USER_ID_KEY = \"Meteor.userId\";\r\n    logToConsole = false;\r\n    _lastLoginTokenWhenPolled= null;\r\n    loginExpirationInDays = null;\r\n    serverVersion = '';\r\n    clusterId = '';\r\n    token = '';\r\n    spaceId = '';\r\n    authToken = '';\r\n    csrf = '';\r\n    url = (process.env.NODE_ENV == 'development' && process.env.REACT_APP_API_URL)? process.env.REACT_APP_API_URL as string : '';\r\n    urlVersion = '';\r\n    userAgent: string|null = null;\r\n    enableLogging = false;\r\n    defaultHeaders: {[x: string]: string} = {\r\n        'Content-Type': 'application/json'\r\n    };\r\n    userId = '';\r\n    diagnosticId = '';\r\n    includeCookies = true;\r\n    isRudderKeySet = false;\r\n    translations = {\r\n        connectionError: 'There appears to be a problem with your internet connection.',\r\n        unknownError: 'We received an unexpected status code from the server.',\r\n    };\r\n    userRoles?: string;\r\n\r\n    sobjects = {};\r\n    graphql = new Graphql(this);\r\n    \r\n    getUrl() {\r\n        if(!this.url){\r\n            var href = new URL(window.location.href);\r\n            var foo = href.pathname.split('/accounts');\r\n            var ROOT_URL_PATH_PREFIX = '';\r\n            if(foo.length > 1){\r\n                ROOT_URL_PATH_PREFIX = foo[0];\r\n            }\r\n            return ROOT_URL_PATH_PREFIX;\r\n        }\r\n        return this.url;\r\n    }\r\n\r\n    getAbsoluteUrl(baseUrl: string) {\r\n        if (typeof baseUrl !== 'string' || !baseUrl.startsWith('/')) {\r\n            return baseUrl;\r\n        }\r\n        return this.getUrl() + baseUrl;\r\n    }\r\n\r\n    setUrl(url: string) {\r\n        this.url = url;\r\n    }\r\n\r\n    setUserAgent(userAgent: string) {\r\n        this.userAgent = userAgent;\r\n    }\r\n\r\n    getToken() {\r\n        return this.token;\r\n    }\r\n\r\n    setToken(token: string) {\r\n        this.token = token;\r\n    }\r\n\r\n    getUserId(){\r\n        return this.userId;\r\n    }\r\n\r\n    getSpaceId(){\r\n        return this.spaceId;\r\n    }\r\n\r\n    setSpaceId(spaceId){\r\n        this.spaceId = spaceId;\r\n    }\r\n\r\n    getAuthToken(){\r\n        if (this.getSpaceId() && this.getToken())\r\n            return this.getSpaceId() + ',' + this.getToken();\r\n        else\r\n            return this.getToken();\r\n    }\r\n\r\n    setCSRF(csrfToken: string) {\r\n        this.csrf = csrfToken;\r\n    }\r\n\r\n    setAcceptLanguage(locale: string) {\r\n        this.defaultHeaders['Accept-Language'] = locale;\r\n    }\r\n\r\n    setEnableLogging(enable: boolean) {\r\n        this.enableLogging = enable;\r\n    }\r\n\r\n    setIncludeCookies(include: boolean) {\r\n        this.includeCookies = include;\r\n    }\r\n\r\n    setUserId(userId: string) {\r\n        this.userId = userId;\r\n    }\r\n\r\n    setUserRoles(roles: string) {\r\n        this.userRoles = roles;\r\n    }\r\n\r\n    setDiagnosticId(diagnosticId: string) {\r\n        this.diagnosticId = diagnosticId;\r\n    }\r\n\r\n    enableRudderEvents() {\r\n        this.isRudderKeySet = true;\r\n    }\r\n\r\n    getServerVersion() {\r\n        return this.serverVersion;\r\n    }\r\n\r\n    getUrlVersion() {\r\n        return this.urlVersion;\r\n    }\r\n\r\n    getBaseRoute() {\r\n        return `${this.getUrl()}${this.urlVersion}`;\r\n    }\r\n\r\n    getAccountsRoute() {\r\n        return `${this.getBaseRoute()}/accounts`;\r\n    }\r\n\r\n    getBootstrapRoute() {\r\n        return `${this.getUrl()}/api/bootstrap/${this.getSpaceId()}`;\r\n    }\r\n\r\n    getCSRFFromCookie() {\r\n        if (typeof document !== 'undefined' && typeof document.cookie !== 'undefined') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                if (cookie.startsWith('MMCSRF=')) {\r\n                    return cookie.replace('MMCSRF=', '');\r\n                }\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    getOptions(options: Options) {\r\n        const newOptions: Options = {...options};\r\n\r\n        const headers: {[x: string]: string} = {\r\n            [HEADER_REQUESTED_WITH]: 'XMLHttpRequest',\r\n            ...this.defaultHeaders,\r\n        };\r\n\r\n        if (this.getAuthToken()) {\r\n            headers[HEADER_AUTH] = `${HEADER_BEARER} ${this.getAuthToken()}`;\r\n        }\r\n\r\n        const csrfToken = this.csrf || this.getCSRFFromCookie();\r\n        if (options.method && options.method.toLowerCase() !== 'get' && csrfToken) {\r\n            headers[HEADER_X_CSRF_TOKEN] = csrfToken;\r\n        }\r\n\r\n        if (this.includeCookies) {\r\n            newOptions.credentials = 'include';\r\n        }\r\n\r\n        if (this.userAgent) {\r\n            headers[HEADER_USER_AGENT] = this.userAgent;\r\n        }\r\n\r\n        if (newOptions.headers) {\r\n            Object.assign(headers, newOptions.headers);\r\n        }\r\n\r\n        return {\r\n            ...newOptions,\r\n            headers,\r\n        };\r\n    }\r\n\r\n    getTranslations = (url: string) => {\r\n        return this.doFetch<Record<string, string>>(\r\n            url,\r\n            {method: 'get'},\r\n        );\r\n    }\r\n\r\n\r\n    logClientError = (message: string, level = 'ERROR') => {\r\n        // const url = `${this.getBaseRoute()}/logs`;\r\n\r\n        // if (!this.enableLogging) {\r\n        //     throw new ClientError(this.getUrl(), {\r\n        //         message: 'Logging disabled.',\r\n        //         url,\r\n        //     });\r\n        // }\r\n\r\n        // return this.doFetch<{\r\n        //     message: string;\r\n        // }>(\r\n        //     url,\r\n        //     {method: 'post', body: JSON.stringify({message, level})},\r\n        // );\r\n    };\r\n\r\n    login = (user: string | object, password: string, token = '', deviceId = '') => {\r\n        this.trackEvent('api', 'api_users_login');\r\n\r\n        const body: any = {\r\n            device_id: deviceId,\r\n            user,\r\n            password,\r\n            token,\r\n            locale: \"zh-cn\"\r\n        };\r\n\r\n        return this.doFetch<UserProfile>(\r\n            `${this.getAccountsRoute()}/password/login`,\r\n            {method: 'POST', body: JSON.stringify(body)},\r\n        );\r\n\r\n    };\r\n\r\n    async validate(){\r\n        let url = this.getBaseRoute() + \"/api/v4/users/validate\";\r\n        // let body = { 'utcOffset': moment().utcOffset() / 60 };\r\n        let body = { 'utcOffset': 8 };\r\n        return await this.doFetch(url, {method: 'POST', body: JSON.stringify(body)});\r\n    }\r\n\r\n    createUser = (user: UserProfile, token: string, inviteId: string, redirect: string) => {\r\n        this.trackEvent('api', 'api_users_createUser');\r\n\r\n        const queryParams: any = {};\r\n\r\n        if (token) {\r\n            queryParams.t = token;\r\n        }\r\n\r\n        if (inviteId) {\r\n            queryParams.iid = inviteId;\r\n        }\r\n\r\n        if (redirect) {\r\n            queryParams.r = redirect;\r\n        }\r\n\r\n        const auth:any = this.doFetch<UserProfile>(\r\n            `${this.getAccountsRoute()}/password/register${buildQueryString(queryParams)}`,\r\n            {method: 'POST', body: JSON.stringify(user)},\r\n        );\r\n\r\n        return auth\r\n    };\r\n\r\n    createSpace = (name: string) => {\r\n        this.trackEvent('api', 'api_users_createTenant');\r\n\r\n        const queryParams: any = {};\r\n\r\n        const auth:any = this.doFetch<UserProfile>(\r\n            `${this.getBaseRoute()}/api/v4/spaces/register/tenant${buildQueryString(queryParams)}`,\r\n            {method: 'POST', body: JSON.stringify({name: name})},\r\n        );\r\n\r\n        return auth\r\n    };\r\n\r\n    sendVerificationToken = (user: string) => {\r\n        this.trackEvent('api', 'api_users_verify');\r\n\r\n        const body: any = {\r\n            user: user,\r\n        };\r\n\r\n        return this.doFetch<UserProfile>(\r\n            `${this.getAccountsRoute()}/password/sendVerificationCode`,\r\n            {method: 'POST', body: JSON.stringify(body)},\r\n        );\r\n    };\r\n\r\n    getSettings = () => {\r\n        return this.doFetch<UserProfile>(\r\n            `${this.getAccountsRoute()}/settings`,\r\n            {method: 'get'},\r\n        );\r\n    };\r\n\r\n    getMe = () => {\r\n        return this.doFetch<UserProfile>(\r\n            `${this.getAccountsRoute()}/user`,\r\n            {method: 'get'},\r\n        );\r\n    };\r\n\r\n    getMySpaces = () => {\r\n        return this.doFetch<Space[]>(\r\n            `${this.getAccountsRoute()}/user/spaces`,\r\n            {method: 'get'},\r\n        );\r\n    };\r\n\r\n    logout = async () => {\r\n        this.trackEvent('api', 'api_users_logout');\r\n\r\n        const {response} = await this.doFetchWithResponse(\r\n            `${this.getAccountsRoute()}/logout`,\r\n            {method: 'post'},\r\n        );\r\n\r\n        if (response.ok) {\r\n            this.token = '';\r\n        }\r\n\r\n        this.serverVersion = '';\r\n        \r\n        return response;\r\n    };\r\n\r\n    // Client Helpers\r\n\r\n    doFetch = async <T>(url: string, options: Options): Promise<T> => {\r\n        const {data} = await this.doFetchWithResponse<T>(url, options);\r\n\r\n        return data;\r\n    };\r\n\r\n    doFetchWithResponse = async <T>(url: string, options: Options): Promise<ClientResponse<T>> => {\r\n        const response = await fetch(url, this.getOptions(options));\r\n        const headers = parseAndMergeNestedHeaders(response.headers);\r\n\r\n        let data;\r\n        try {\r\n            data = await response.json();\r\n        } catch (err) {\r\n            throw new ClientError(this.getUrl(), {\r\n                message: 'Received invalid response from the server.',\r\n                intl: {\r\n                    id: 'mobile.request.invalid_response',\r\n                    defaultMessage: 'Received invalid response from the server.',\r\n                },\r\n                url,\r\n            });\r\n        }\r\n\r\n        if (headers.has(HEADER_X_VERSION_ID) && !headers.get('Cache-Control')) {\r\n            const serverVersion = headers.get(HEADER_X_VERSION_ID);\r\n            if (serverVersion && this.serverVersion !== serverVersion) {\r\n                this.serverVersion = serverVersion as string;\r\n            }\r\n        }\r\n\r\n        if (headers.has(HEADER_X_CLUSTER_ID)) {\r\n            const clusterId = headers.get(HEADER_X_CLUSTER_ID);\r\n            if (clusterId && this.clusterId !== clusterId) {\r\n                this.clusterId = clusterId as string;\r\n            }\r\n        }\r\n\r\n        if (response.ok) {\r\n            return {\r\n                response,\r\n                headers: headers as Map<string, string>,\r\n                data,\r\n            };\r\n        }\r\n\r\n    \r\n        const error = data && data.error ? data.error : data\r\n        const msg = error.message || '';\r\n\r\n        if (this.logToConsole) {\r\n            console.error(msg); // eslint-disable-line no-console\r\n        }\r\n\r\n        throw new ClientError(this.getUrl(), {\r\n            message: msg,\r\n            server_error_id: data.id,\r\n            status_code: error.code,\r\n            url,\r\n        });\r\n    };\r\n\r\n    trackEvent(category: string, event: string, props?: any) {\r\n        if (!this.isRudderKeySet) {\r\n            return;\r\n        }\r\n\r\n        const properties = Object.assign({\r\n            category,\r\n            type: event,\r\n            // user_actual_role: this.userRoles && isSystemAdmin(this.userRoles) ? 'system_admin, system_user' : 'system_user',\r\n            user_actual_id: this.userId,\r\n        }, props);\r\n        const options = {\r\n            context: {\r\n                ip: '0.0.0.0',\r\n            },\r\n            page: {\r\n                path: '',\r\n                referrer: '',\r\n                search: '',\r\n                title: '',\r\n                url: '',\r\n            },\r\n            anonymousId: '00000000000000000000000000',\r\n        };\r\n\r\n        // rudderAnalytics.track('event', properties, options);\r\n    }\r\n\r\n    changePassword = (oldPassword: string, newPassword: string)=>{\r\n        return this.doFetch<UserProfile>(\r\n            `${this.getAccountsRoute()}/password/changePassword`,\r\n            {method: 'POST', body: JSON.stringify({\r\n                oldPassword: oldPassword,\r\n                newPassword: newPassword,\r\n            })},\r\n        );\r\n    }\r\n\r\n    verifyEmail = (email: string, code: string)=>{\r\n        return this.doFetch<UserProfile>(\r\n            `${this.getAccountsRoute()}/password/verify/email`,\r\n            {method: 'POST', body: JSON.stringify({\r\n                email: email,\r\n                code: code,\r\n            })},\r\n        );\r\n    }\r\n\r\n    verifyMobile = (mobile: string, code: string)=>{\r\n        return this.doFetch<UserProfile>(\r\n            `${this.getAccountsRoute()}/password/verify/mobile`,\r\n            {method: 'POST', body: JSON.stringify({\r\n                mobile: mobile,\r\n                code: code,\r\n            })},\r\n        );\r\n    }\r\n\r\n    sobject = function(objectName) {\r\n        this.sobjects = this.sobjects || {};\r\n        var sobject = this.sobjects[objectName] = this.sobjects[objectName] || new SObject(this, objectName);\r\n        return sobject;\r\n    };\r\n\r\n    // graphql = function(){\r\n    //     if(!this._graphql){\r\n    //         this._graphql = new Graphql(this);\r\n    //     }\r\n    //     return this._graphql;\r\n    // }\r\n\r\n    // _initLocalStorage(ROOT_URL_PATH_PREFIX){\r\n    //     if (ROOT_URL_PATH_PREFIX) {\r\n    //         let namespace = `:${ROOT_URL_PATH_PREFIX}`;\r\n    //         this.LOGIN_TOKEN_KEY += namespace;\r\n    //         this.LOGIN_TOKEN_EXPIRES_KEY += namespace;\r\n    //         this.USER_ID_KEY += namespace;\r\n    //       }\r\n    // }\r\n\r\n    // _getTokenLifetimeMs() {\r\n    //     const loginExpirationInDays = (this.loginExpirationInDays === null) ? LOGIN_UNEXPIRING_TOKEN_DAYS : this.loginExpirationInDays;\r\n    //     return (loginExpirationInDays || DEFAULT_LOGIN_EXPIRATION_DAYS) * 24 * 60 * 60 * 1000;\r\n    // }\r\n\r\n    // _tokenExpiration(when) {\r\n    //     return new Date((new Date(when)).getTime() + this._getTokenLifetimeMs());\r\n    // }\r\n    \r\n    // _storeLoginToken(userId, token, tokenExpires) {\r\n    //     localStorage.setItem(this.USER_ID_KEY, userId);\r\n    //     localStorage.setItem(this.LOGIN_TOKEN_KEY, token);\r\n    //     if (! tokenExpires)\r\n    //       tokenExpires = this._tokenExpiration(new Date());\r\n    //       localStorage.setItem(this.LOGIN_TOKEN_EXPIRES_KEY, tokenExpires);\r\n    \r\n    //     this._lastLoginTokenWhenPolled = token;\r\n    //   };\r\n    \r\n    // _unstoreLoginToken() {\r\n    //     localStorage.removeItem(this.USER_ID_KEY);\r\n    //     localStorage.removeItem(this.LOGIN_TOKEN_KEY);\r\n    //     localStorage.removeItem(this.LOGIN_TOKEN_EXPIRES_KEY);\r\n\r\n    //     this._lastLoginTokenWhenPolled = null;\r\n    // };\r\n}\r\n\r\nfunction parseAndMergeNestedHeaders(originalHeaders: any) {\r\n    const headers = new Map();\r\n    let nestedHeaders = new Map();\r\n    originalHeaders.forEach((val: string, key: string) => {\r\n        const capitalizedKey = key.replace(/\\b[a-z]/g, (l) => l.toUpperCase());\r\n        let realVal = val;\r\n        if (val && val.match(/\\n\\S+:\\s\\S+/)) {\r\n            const nestedHeaderStrings = val.split('\\n');\r\n            realVal = nestedHeaderStrings.shift() as string;\r\n            const moreNestedHeaders = new Map(\r\n                nestedHeaderStrings.map((h: any) => h.split(/:\\s/)),\r\n            );\r\n            nestedHeaders = new Map([...nestedHeaders, ...moreNestedHeaders]);\r\n        }\r\n        headers.set(capitalizedKey, realVal);\r\n    });\r\n    return new Map([...headers, ...nestedHeaders]);\r\n}\r\n\r\nexport class ClientError extends Error implements ServerError {\r\n    url?: string;\r\n    intl?: {\r\n        id: string;\r\n        defaultMessage: string;\r\n        values?: any;\r\n    };\r\n    server_error_id?: string;\r\n    status_code?: number;\r\n\r\n    constructor(baseUrl: string, data: ServerError) {\r\n        super(data.message + ': ' + cleanUrlForLogging(baseUrl, data.url || ''));\r\n\r\n        this.message = data.message;\r\n        this.url = data.url;\r\n        this.intl = data.intl;\r\n        this.server_error_id = data.server_error_id;\r\n        this.status_code = data.status_code;\r\n\r\n        // Ensure message is treated as a property of this class when object spreading. Without this,\r\n        // copying the object by using `{...error}` would not include the message.\r\n        Object.defineProperty(this, 'message', {enumerable: true});\r\n    }\r\n}\r\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\n// @flow\r\n\r\n// Given a URL from an API request, return a URL that has any parts removed that are either sensitive or that would\r\n// prevent properly grouping the messages in Sentry.\r\nexport function cleanUrlForLogging(baseUrl, apiUrl) {\r\n    let url = apiUrl;\r\n\r\n    // Trim the host name\r\n    url = url.substring(baseUrl.length);\r\n\r\n    // Filter the query string\r\n    const index = url.indexOf('?');\r\n    if (index !== -1) {\r\n        url = url.substring(0, index);\r\n    }\r\n\r\n    // A non-exhaustive whitelist to exclude parts of the URL that are unimportant (eg IDs) or may be sentsitive\r\n    // (eg email addresses). We prefer filtering out fields that aren't recognized because there should generally\r\n    // be enough left over for debugging.\r\n    //\r\n    // Note that new API routes don't need to be added here since this shouldn't be happening for newly added routes.\r\n    const whitelist = [\r\n        'api', 'v4', 'users', 'teams', 'scheme', 'name', 'members', 'channels', 'posts', 'reactions', 'commands',\r\n        'files', 'preferences', 'hooks', 'incoming', 'outgoing', 'oauth', 'apps', 'emoji', 'brand', 'image',\r\n        'data_retention', 'jobs', 'plugins', 'roles', 'system', 'timezones', 'schemes', 'redirect_location', 'patch',\r\n        'mfa', 'password', 'reset', 'send', 'active', 'verify', 'terms_of_service', 'login', 'logout', 'ids',\r\n        'usernames', 'me', 'username', 'email', 'default', 'sessions', 'revoke', 'all', 'audits', 'device', 'status',\r\n        'search', 'switch', 'authorized', 'authorize', 'deauthorize', 'tokens', 'disable', 'enable', 'exists', 'unread',\r\n        'invite', 'batch', 'stats', 'import', 'schemeRoles', 'direct', 'group', 'convert', 'view', 'search_autocomplete',\r\n        'thread', 'info', 'flagged', 'pinned', 'pin', 'unpin', 'opengraph', 'actions', 'thumbnail', 'preview', 'link',\r\n        'delete', 'logs', 'ping', 'config', 'client', 'license', 'websocket', 'webrtc', 'token', 'regen_token',\r\n        'autocomplete', 'execute', 'regen_secret', 'policy', 'type', 'cancel', 'reload', 'environment', 's3_test', 'file',\r\n        'caches', 'invalidate', 'database', 'recycle', 'compliance', 'reports', 'cluster', 'ldap', 'test', 'sync', 'saml',\r\n        'certificate', 'public', 'private', 'idp', 'elasticsearch', 'purge_indexes', 'analytics', 'old', 'webapp', 'fake',\r\n    ];\r\n\r\n    url = url.split('/').map((part) => {\r\n        if (part !== '' && whitelist.indexOf(part) === -1) {\r\n            return '<filtered>';\r\n        }\r\n\r\n        return part;\r\n    }).join('/');\r\n\r\n    if (index !== -1) {\r\n        // Add this on afterwards since it wouldn't pass the whitelist\r\n        url += '?<filtered>';\r\n    }\r\n\r\n    return url;\r\n}\r\n","import { destroy, flow, types } from 'mobx-state-tree';\r\nimport { get } from 'lodash';\r\n\r\nconst isProd = process.env.NODE_ENV === 'production';\r\nlet rootUrl = isProd ? '/' : process.env.REACT_APP_API_URL? process.env.REACT_APP_API_URL: 'http://localhost:5000';\r\n\r\nlet tenantId = localStorage.getItem('steedos:spaceId');\r\nlet userId = localStorage.getItem('steedos:userId');\r\nlet authToken = localStorage.getItem('steedos:token');\r\nlet locale = 'zh_CN';\r\n\r\nlet config = get(window, 'steedos.setting', {});\r\nrootUrl = config.rootUrl || rootUrl;\r\ntenantId = config.tenantId || tenantId;\r\nuserId = config.userId || userId;\r\nauthToken = config.authToken || authToken;\r\nlocale = config.locale || locale;\r\nlet env = config.env;\r\n\r\nexport const Settings = types\r\n.model('Settings', {\r\n  isProd,\r\n  rootUrl,\r\n  tenantId: types.maybeNull(types.string),\r\n  userId: types.maybeNull(types.string),\r\n  authToken: types.maybeNull(types.string),\r\n  locale: types.maybeNull(types.string),\r\n  currentObjectApiName: types.maybeNull(types.string),\r\n  currentRecordId: types.maybeNull(types.string),\r\n  env: types.frozen(),\r\n})\r\n.actions(self => {\r\n  return {\r\n    setRootUrl: (rootUrl) => {\r\n        self.rootUrl = rootUrl\r\n    },\r\n    setTenantId: (tenantId) => {\r\n        self.tenantId = tenantId\r\n        if (tenantId)\r\n          localStorage.setItem('steedos:spaceId', tenantId);\r\n        else \r\n          localStorage.removeItem('steedos:spaceId')\r\n    },\r\n    setUserId: (userId) => {\r\n        self.userId = userId\r\n        if (userId)\r\n          localStorage.setItem('steedos:userId', userId);\r\n          else \r\n            localStorage.removeItem('steedos:userId')\r\n    },\r\n    setAuthToken: (authToken) => {\r\n        self.authToken = authToken\r\n        if (authToken)\r\n          localStorage.setItem('steedos:token', authToken);\r\n        else \r\n          localStorage.removeItem('steedos:token')\r\n    },\r\n    setLocale(locale){\r\n        self.locale = locale\r\n    },\r\n    setCurrentObjectApiName(name: string) {\r\n      self.currentObjectApiName = name;\r\n    },\r\n    setCurrentRecordId(id: string) {\r\n      self.currentRecordId = id;\r\n    },\r\n  }\r\n})\r\n.create({\r\n  rootUrl,\r\n  tenantId,\r\n  userId,\r\n  authToken,\r\n  locale,\r\n  env,\r\n});\r\n\r\n","\r\n\r\nimport { types, Instance, onSnapshot } from \"mobx-state-tree\";\r\n\r\nimport { SteedosClient } from '@steedos/builder-sdk';\r\nimport { convertObjectSchema } from './utils';\r\nimport { Settings } from './Settings';\r\nimport _ from 'lodash';\r\nconst client = new SteedosClient();\r\n\r\nclient.setUrl(Settings.rootUrl)\r\nclient.setUserId(Settings.userId)\r\nclient.setToken(Settings.authToken);\r\nclient.setSpaceId(Settings.tenantId);\r\n\r\nonSnapshot(Settings, () => {\r\n  client.setUrl(Settings.rootUrl)\r\n  client.setUserId(Settings.userId)\r\n  client.setToken(Settings.authToken);\r\n  client.setSpaceId(Settings.tenantId);\r\n})\r\n\r\n\r\n\r\nconst requestObject = async (objectApiName: string) => {\r\n  //TODO 通过接口获取对象信息 /api/bootstrap/:spaceId/:objectName\r\n  if (!objectApiName) {\r\n    return;\r\n  }\r\n  const object = await client.sobject(objectApiName).getConfig();\r\n  \r\n  // TODO： 转换 object, grid 类型字段，生成 subFields 属性\r\n  convertObjectSchema(object);\r\n  return object;\r\n}\r\n\r\nconst requestRecordPermissions = async (objectApiName: string, recordId: string) => {\r\n  if (!objectApiName || !recordId) {\r\n    return;\r\n  }\r\n  return await client.sobject(objectApiName).getRecordPermissions(recordId);\r\n}\r\n\r\nconst requestRecords = async (objectApiName: string, filters: any, fields: any, options?: any) => {\r\n  const records = await client.sobject(objectApiName).find(filters, fields, options);\r\n  return records;\r\n}\r\n\r\nconst updateRecord = async (objectApiName: string, objectRecordId: string, data: any) => {\r\n  const result = await client.sobject(objectApiName).update(objectRecordId, data);\r\n\r\n  return result;\r\n}\r\n\r\nconst insertRecord = async (objectApiName: string, data: any) => {\r\n  const result = await client.sobject(objectApiName).insert(data);\r\n  return result;\r\n}\r\n\r\nconst deleteRecord = async (objectApiName: string, objectRecordId: string) => {\r\n  const result = await client.sobject(objectApiName).delete(objectRecordId);\r\n\r\n  return result;\r\n}\r\n\r\nexport const API = {\r\n  client,\r\n  requestObject,\r\n  requestRecordPermissions,\r\n  requestRecords,\r\n  updateRecord,\r\n  insertRecord,\r\n  deleteRecord,\r\n}\r\n","import { types } from \"mobx-state-tree\";\r\n\r\nexport const FormFieldModel = types.model({\r\n  id: types.identifier,\r\n  name: types.string,\r\n  required: types.boolean,\r\n  readonly: types.boolean,\r\n})\r\n\r\nexport const FormModel = types.model({\r\n  id: types.identifier,\r\n  // objectApiName: types.string,\r\n  // fields: types.array(FormFieldModel),\r\n  mode: types.union(types.string, types.undefined), // 'read' | 'edit'\r\n  value: types.frozen(),\r\n}).actions(self => ({\r\n  // note the `({`, we are returning an object literal\r\n  setMode(newMode: string) {\r\n    self.mode = newMode\r\n  },\r\n  setValue(value) {\r\n    self.value = value;\r\n  }\r\n}))\r\n\r\nexport const Forms = types.model({\r\n  items: types.optional(types.map(FormModel), {})\r\n})\r\n.actions((self) => {\r\n  const loadById = (id: string)=>{\r\n    if (!id)\r\n      return null;\r\n    const form = self.items.get(id) \r\n    if (form) {\r\n      return form\r\n    }\r\n    const newForm = FormModel.create({\r\n      id,\r\n      mode: 'read'\r\n    })\r\n    self.items.put(newForm);\r\n    return newForm\r\n  }\r\n  return {\r\n    loadById,\r\n  }\r\n}).create()\r\n","import { values } from \"mobx\"\r\nimport { types, getParent, flow } from \"mobx-state-tree\"\r\nimport { API } from './API';\r\nimport { getObjectOdataExpandFields ,convertRecordsForLookup} from './utils/index'\r\n\r\nexport const RecordCache = types.model({\r\n  id: types.identifier, //记录ID\r\n  objectApiName: types.string,\r\n  fields: types.array(types.string),\r\n  data: types.frozen(),\r\n  permissions: types.frozen(),\r\n  isLoading: true,\r\n})\r\n.actions((self) => {\r\n\r\n  const loadRecord = flow(function* loadRecord() {\r\n    try {\r\n      const filters = ['_id', '=', self.id]\r\n      // const object = Objects.getObject(self.objectApiName);\r\n      // const objectSchema = object.schema;\r\n      // const expand = getObjectOdataExpandFields(objectSchema, self.fields)\r\n      // 添加 expand 参数\r\n      // const dataResult = yield API.requestRecords(self.objectApiName, filters, self.fields, {expand})\r\n      // lookup组件reference_to是否是数组 的初始化值 的转换。\r\n      // self.data = convertRecordsForLookup(dataResult, objectSchema.fields)\r\n      self.data = yield API.requestRecords(self.objectApiName, filters, self.fields)\r\n\r\n      self.permissions = yield API.requestRecordPermissions(self.objectApiName, self.id);\r\n      self.isLoading = false\r\n    } catch (err) {\r\n      console.error(`Failed to load record ${self.id} `, err)\r\n    }\r\n  });\r\n\r\n  const deleteRecord = flow(function* deleteRecord() {\r\n    try {\r\n      return yield API.deleteRecord(self.objectApiName, self.id);\r\n      self.isLoading = false\r\n    } catch (err) {\r\n      console.error(`Failed to delete record ${self.id} `, err)\r\n    }\r\n  });\r\n\r\n  return {\r\n    loadRecord,\r\n    deleteRecord\r\n  }\r\n});\r\n\r\nexport const RecordListCache = types.model({\r\n  id: types.identifier, //请求的filters, fields\r\n  objectApiName: types.string,\r\n  filters: types.string,\r\n  fields: types.array(types.string),\r\n  options: types.union(types.string, types.undefined),\r\n  recordsJson: types.string,\r\n  isLoading: true,\r\n})\r\n.views((self) => ({\r\n  get data() {\r\n    if (!self.recordsJson)\r\n      return null\r\n    return JSON.parse(self.recordsJson)\r\n  },\r\n}))\r\n.actions((self) => {\r\n  const loadRecords = flow(function* loadRecords() {\r\n    try {\r\n      const filters = JSON.parse(self.filters);\r\n      const options = self.options ? JSON.parse(self.options) : undefined;\r\n      const json = yield API.requestRecords(self.objectApiName, filters, self.fields, options)\r\n      self.recordsJson = JSON.stringify(json)\r\n      self.isLoading = false\r\n    } catch (err) {\r\n      console.error(`Failed to load record ${self.id} `, err)\r\n    }\r\n  })\r\n\r\n  return {\r\n    loadRecords,\r\n  }\r\n});\r\n\r\nexport const ObjectModel = types.model({\r\n  id: types.identifier, // object_api_name\r\n  schema: types.frozen(),\r\n  recordCaches: types.map(RecordCache),\r\n  recordListCaches: types.map(RecordListCache),\r\n  isLoading: true\r\n})\r\n.actions((self) => {\r\n\r\n  const loadObject = flow(function* loadObject() {\r\n    try {\r\n      self.schema = yield API.requestObject(self.id)\r\n      self.isLoading = false\r\n      const Creator = window.Creator;\r\n      Creator.Objects[self.id] = self.schema\r\n      return self\r\n    } catch (err) {\r\n      console.error(`Failed to load object ${self.id} `, err)\r\n    }\r\n  })\r\n\r\n  const getRecord = (recordId: string, fields: string[]) => {\r\n    if (!recordId)\r\n      return null;\r\n    const record = self.recordCaches.get(recordId)\r\n    if (record)\r\n      return record\r\n    const newRecord = RecordCache.create({\r\n      id: recordId,\r\n      objectApiName: self.id,\r\n      fields,\r\n      data: {},\r\n      isLoading: true\r\n    })\r\n    self.recordCaches.put(newRecord);\r\n    newRecord.loadRecord();\r\n    return newRecord\r\n  }\r\n\r\n  const deleteRecord = (recordId: string)=>{\r\n    if (!recordId){\r\n      return null;\r\n    }\r\n    const record = self.recordCaches.get(recordId)\r\n    if (record){\r\n      record.deleteRecord();\r\n      self.recordCaches.delete(recordId)\r\n    }\r\n  }\r\n\r\n  const getRecordList = (filters: any, fields: any, options?) => {\r\n    const stringifyFilters = JSON.stringify(filters);\r\n    const stringifyFields = JSON.stringify(fields);\r\n    const stringifyOptions = options ? JSON.stringify(options) : \"\";\r\n    const recordListId = stringifyFilters;\r\n    const recordList = self.recordListCaches.get(recordListId)\r\n    if (recordList)\r\n      return recordList\r\n    \r\n    const newRecordList = RecordListCache.create({\r\n      id: recordListId,\r\n      objectApiName: self.id,\r\n      filters: stringifyFilters,\r\n      fields,\r\n      options: stringifyOptions,\r\n      recordsJson: '',\r\n      isLoading: true\r\n    })\r\n    self.recordListCaches.put(newRecordList);\r\n    newRecordList.loadRecords();\r\n    return newRecordList\r\n  }\r\n\r\n  return {\r\n    loadObject,\r\n    getRecord,\r\n    deleteRecord,\r\n    getRecordList\r\n  }\r\n})\r\n\r\nexport const Objects = types.model({\r\n  objects: types.optional(types.map(ObjectModel), {})\r\n})\r\n.actions((self) => {\r\n  const getObject = (objectApiName: string)=>{\r\n    if (!objectApiName)\r\n      return null;\r\n    const object = self.objects.get(objectApiName) \r\n    if (object) {\r\n      return object\r\n    }\r\n    const newObject = ObjectModel.create({\r\n      id: objectApiName,\r\n      schema: {},\r\n      isLoading: true\r\n    })\r\n    self.objects.put(newObject);\r\n    newObject.loadObject();\r\n    return newObject\r\n  }\r\n  return {\r\n    getObject,\r\n  }\r\n}).create()\r\n","import { flow, types } from \"mobx-state-tree\";\r\nimport { API } from './API';\r\nimport { each, keys} from 'lodash';\r\n\r\nexport const AppMenuModel = types.model({\r\n    id: types.identifier,\r\n    name: types.maybeNull(types.string),\r\n    path: types.maybeNull(types.string),\r\n    icon: types.maybeNull(types.string),\r\n    target: types.maybeNull(types.string),\r\n    description: types.maybeNull(types.string),\r\n    children: types.frozen()\r\n})\r\n\r\nexport const Apps = types.model({\r\n    menus: types.optional(types.map(AppMenuModel), {}),\r\n    currentAppId: types.maybeNull(types.string),\r\n    currentApp: types.maybeNull(AppMenuModel),\r\n}).actions((self) => {\r\n    const loadMenus = flow(function* loadMenus() {\r\n        try {\r\n            const menus = yield API.client.doFetch(API.client.getUrl() + `/service/api/apps/menus`, { method: 'get' });\r\n            setMenus(menus);\r\n            return self.menus;\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch apps/menus\", error)\r\n        }\r\n    })\r\n    function setMenus(menus) {\r\n        each(menus, function(menu){\r\n            self.menus.put(menu);\r\n        })\r\n    }\r\n    const getMenus = function () {\r\n        if (self.menus && self.menus.size) {\r\n            return self.menus;\r\n        } else {\r\n            const menus = loadMenus();\r\n            return self.menus;\r\n        }\r\n    }\r\n    const getCurrentApp = function(){\r\n        const menus = getMenus();\r\n        let app = menus.get(self.currentAppId);\r\n        if(!app){\r\n            if(menus.size > 0){\r\n                app = menus.get(self.currentAppId);\r\n                if(!app){\r\n                    app = menus.get(keys(menus.toJSON())[0]);\r\n                }\r\n              }\r\n        }\r\n        return app;\r\n    }\r\n    return {\r\n        getMenus,\r\n        getCurrentApp,\r\n        setCurrentAppId: function(appId){\r\n            self.currentAppId = appId;\r\n            // self.currentApp = getCurrentApp(self.currentAppId)\r\n        },\r\n    }\r\n}).create()\r\n","import { flow, types } from \"mobx-state-tree\";\r\nimport { API } from './API';\r\nimport { Settings } from \"./Settings\";\r\n\r\nexport const User = types.model({\r\n  me: types.maybeNull(types.frozen()),\r\n  session: types.maybeNull(types.frozen()),\r\n  isLoading: false,\r\n  isLoginFailed: false,\r\n})\r\n.actions(self => {\r\n  const setSession = (session: any) => {\r\n    self.session = session;\r\n  };\r\n  const loadSession = flow(function* loadSession() {\r\n    try {\r\n      self.isLoading = true;\r\n      // 获取user session信息\r\n      const session = yield API.client.validate();\r\n      setSession(session);\r\n      self.isLoading = false;\r\n      // self.isLoginFailed = false\r\n      return session;\r\n    } catch (error) {\r\n      self.isLoading = false;\r\n      // self.isLoginFailed = true\r\n      setSession(null)\r\n      console.error(\"Failed to validate\", error)\r\n      return null;\r\n    }\r\n  });\r\n  const getSession = () => {\r\n    if(self.isLoading)\r\n      return null;\r\n    if (!self.session && !self.isLoginFailed)\r\n      loadSession();\r\n    return self.session\r\n  };\r\n  const getCompanyOrganizationIds  = () => {\r\n    const session = getSession();\r\n    if (session && session.companies){\r\n      return session.companies.map((c: any)=> c.organization);\r\n    }\r\n    return []\r\n  }\r\n  const setMe = (user: any) => {\r\n    self.me = user;\r\n  };\r\n  const goLogin = () => {\r\n    Settings.setUserId(null)\r\n    Settings.setAuthToken(null)\r\n    // window.location.href = `/login`;\r\n  };\r\n  const loadMe = flow(function* loadMe() {\r\n    try {\r\n      self.isLoading = true;\r\n      // 获取user信息， 不需要传入 spaceId，否则传错的话会导致可能验证失败\r\n      API.client.setSpaceId(null);\r\n      const me = yield API.client.getMe();\r\n      Settings.setUserId(me._id)\r\n      if (me.spaces.length>0) {\r\n        API.client.setSpaceId(me.spaces[0]._id);\r\n        Settings.setTenantId(me.spaces[0]._id)\r\n      }\r\n      setMe(me);\r\n      self.isLoading = false;\r\n      self.isLoginFailed = false\r\n      return me;\r\n    } catch (error) {\r\n      self.isLoading = false;\r\n      self.isLoginFailed = true\r\n      setMe(null)\r\n      console.error(\"Failed to fetch userinfo\", error)\r\n      return null;\r\n    }\r\n  });\r\n  const getMe = () => {\r\n    if (!self.me && !self.isLoginFailed){\r\n      loadMe();\r\n    }\r\n    return self.me\r\n  }\r\n  return {\r\n    loadMe,\r\n    getMe, \r\n    loadSession,\r\n    getSession, \r\n    getCompanyOrganizationIds,\r\n    login: flow(function* login(userInput, passowrd) {\r\n      self.isLoading = true;\r\n      let email = '';\r\n      let mobile = '';\r\n      let username = '';\r\n      if (userInput) {\r\n          if (userInput.indexOf('@') > 0) {\r\n              email = userInput;\r\n          } else if (userInput.length === 11 && new Number(userInput) > 10000000000) {\r\n              mobile = userInput;\r\n          } else {\r\n              username = userInput;\r\n          }\r\n      }\r\n\r\n      const user = { email: email, mobile: mobile, username: username, spaceId: \"\" }\r\n\r\n      try {\r\n          const data = yield API.client.login(user, passowrd);\r\n          if (data.token) {\r\n            API.client.setToken(data.token);\r\n            Settings.setAuthToken(data.token)\r\n          }\r\n          const me = yield User.loadMe();\r\n          console.log(\"==API.client.getSpaceId==1=\", API.client.getSpaceId());\r\n          yield User.loadSession();\r\n          self.isLoading = false;\r\n          self.isLoginFailed = false\r\n          return me\r\n      } catch (error) {\r\n        self.isLoading = false;\r\n        self.isLoginFailed = true\r\n        console.error(\"Failed to fetch userinfo\", error)\r\n        goLogin();\r\n      }\r\n    }),\r\n    logout: flow(function* logout() {\r\n        try {\r\n            yield API.client.logout();\r\n            setMe(null)\r\n            setSession(null)\r\n            Settings.setUserId(null)\r\n            Settings.setAuthToken(null)\r\n            Settings.setTenantId(null)\r\n            goLogin();\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch userinfo\", error)\r\n            goLogin();\r\n        }\r\n    }),\r\n    afterCreate() {\r\n      \r\n    }\r\n  }\r\n}).create()","import { flow, types } from \"mobx-state-tree\";\r\nimport { API } from './API';\r\nimport { each, union, concat, keys} from 'lodash';\r\n\r\n\r\nexport const QueryModel = types.model({\r\n    id: types.identifier,\r\n    isLoading: true,\r\n    data: types.frozen()\r\n}).actions((self) => {\r\n    const loadData = flow(function* loadData(queryId) {\r\n        try {\r\n            const results = yield API.client.doFetch(API.client.getUrl() + `/service/api/~packages-@steedos/service-charts/queries/${queryId}/results`, { method: 'post' });\r\n            let data = {\r\n                columns: [],\r\n                rows: results\r\n            }\r\n            let columns = [];\r\n            each(results, function(result){\r\n                columns = union(concat(columns, keys(result))); \r\n            })\r\n\r\n            each(columns, function(column){\r\n                data.columns.push({type: '', name: column})\r\n            })\r\n            self.data = data\r\n            self.isLoading = false\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch apps/menus\", error)\r\n        }\r\n    })\r\n    return {\r\n        loadData\r\n    }\r\n})\r\n\r\nexport const Queries = types.model({\r\n    Queries: types.optional(types.map(QueryModel), {})\r\n}).actions((self) => {\r\n    return {\r\n        getData: function(queryId){\r\n            if(!queryId){\r\n                return null;\r\n            }\r\n            const query = self.Queries.get(queryId);\r\n            if(query){\r\n                return query;\r\n            }\r\n            const newQuery = QueryModel.create({\r\n                id: queryId,\r\n                data: [],\r\n                isLoading: true\r\n            })\r\n            self.Queries.put(newQuery);\r\n            newQuery.loadData(queryId);\r\n            return newQuery;\r\n        },\r\n    }\r\n}).create()\r\n","import { API } from './API';\r\nimport { Forms } from './Form';\r\nimport { Objects } from './Object';\r\nimport { Settings } from './Settings';\r\nimport { Apps } from './Apps'\r\nimport { User } from './User'\r\nimport { Queries } from './Queries';\r\nconst stores = {\r\n  Forms,\r\n  Objects,\r\n  Settings,\r\n  API,\r\n  Apps,\r\n  User,\r\n  Queries,\r\n};\r\n\r\n// if (process.env.NODE_ENV !== 'production') {\r\n  (window as any).stores = stores;\r\n// }\r\n\r\nexport {\r\n  Forms,\r\n  Objects,\r\n  Settings,\r\n  API,\r\n  Apps,\r\n  User,\r\n  Queries\r\n}\r\n\r\nexport default stores;\r\n\r\ndeclare global {\r\n  interface Window {\r\n      Creator: any\r\n  }\r\n  interface Window {\r\n    Meteor: any\r\n  }\r\n}\r\n\r\nif(!window.Meteor){\r\n  window.Creator = {};\r\n  window.Creator.Objects = {};\r\n}\r\n","import React, { useContext } from 'react';\r\nimport * as PropTypes from 'prop-types';\r\n\r\nimport { Grid, GridItem, Flex, Box } from '@chakra-ui/layout'\r\nimport { Form as AntForm } from 'antd';\r\nimport BaseForm from '@ant-design/pro-form/es/BaseForm';\r\nimport ProForm, {\r\n  ModalForm,\r\n  DrawerForm,\r\n  ProFormText,\r\n  ProFormDateRangePicker,\r\n  ProFormSelect,\r\n} from '@ant-design/pro-form';\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { isBoolean } from 'lodash'\r\n\r\nimport { Forms } from '@steedos/builder-store';\r\n\r\n// 在 ProForm的基础上扩展属性\r\n// colSpan: 每一列默认占几栅格，总共12栅格\r\n// mode: edit, read\r\n\r\nexport const Form = observer((props:any) => {\r\n  const {\r\n    name: formId = 'default',\r\n    mode= 'read', \r\n    layout,\r\n    children,\r\n    submitter,\r\n    isModalForm,\r\n    isDrawerForm,\r\n    trigger,\r\n    ...rest\r\n  } = props\r\n\r\n  const form = Forms.loadById(formId);\r\n\r\n  const formItemLayout =\r\n    layout === 'horizontal'\r\n      ? {\r\n          labelAlign: 'left',\r\n          labelCol: { span: 6 },\r\n          wrapperCol: { span: 18 },\r\n        }\r\n      : null;\r\n\r\n  const defSubmitter = form.mode ==='read'? false : {\r\n    // 配置按钮文本\r\n    searchConfig: {\r\n      resetText: '取消',\r\n      submitText: '提交',\r\n    },\r\n    resetButtonProps: {\r\n      onClick: () => {\r\n        form.setMode('read')\r\n      },\r\n    },\r\n  }\r\n\r\n  let _submitter = false\r\n  if(form.mode !='read'){\r\n    _submitter = isBoolean(submitter) ? submitter : submitter || defSubmitter;\r\n  }\r\n\r\n  const contentRender = (items:any, submitter:any) => {\r\n    return (\r\n      <>\r\n        {items}\r\n        {submitter}\r\n      </>\r\n    );\r\n  }\r\n  const formProps = {\r\n    name: formId,\r\n    className: 'builder-form',\r\n    mode: form.mode, \r\n    layout,\r\n    ...formItemLayout,\r\n    ...rest,\r\n    submitter: _submitter,\r\n    trigger,\r\n    contentRender,\r\n  }\r\n\r\n  let FormComponent = BaseForm;\r\n  if(isModalForm){\r\n    FormComponent = ModalForm\r\n  }\r\n\r\n  if(isDrawerForm){\r\n    FormComponent = DrawerForm\r\n  }\r\n\r\n  return (\r\n      <FormComponent {...formProps}>\r\n          {children}\r\n      </FormComponent>\r\n  )\r\n});\r\n\r\n\r\nForm['propTypes'] = {\r\n  name: PropTypes.string,\r\n  mode: PropTypes.string,\r\n  layout: PropTypes.string,\r\n  initialValues: PropTypes.object,\r\n};","export const configForm = {\r\n  name: 'Steedos:Form',\r\n  image:\r\n    'https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fef36d2a846134910b64b88e6d18c5ca5',\r\n  inputs: [\r\n    { name: 'name', type: 'string', helperText: '表单名称，会作为表单字段 id 前缀使用' },\r\n    { name: 'columns', type: 'number', defaultValue: 2 , helperText: '表单列数'},\r\n    { name: 'layout', type: 'string', defaultValue: 'vertical', enum: ['horizontal', 'vertical', 'inline'], helperText: '表单布局' },\r\n    { name: 'size', type: 'string', enum: ['small', 'middle', 'large'], defaultValue: 'middle', helperText: '设置字段组件的尺寸' },\r\n    { name: 'labelAlign', type: 'string', enum: ['left', 'right'], defaultValue: 'right', helperText: 'label 标签的文本对齐方式' },\r\n    { name: 'initialValues', type: 'code', language: 'javascript', defaultValue: \"({})\", helperText: '表单默认值，只有初始化以及重置时生效。' },\r\n    { name: 'onValuesChange', type: 'code', language: 'javascript', defaultValue: \"(values) => {  }\", helperText: '字段值更新时触发回调事件' },\r\n    { name: 'onFinish', type: 'code', language: 'javascript', defaultValue: \"(values) => {  }\", helperText: '提交表单且数据验证成功后回调事件' },\r\n    { name: 'preserve', type: 'boolean', defaultValue: 'true', helperText: '当字段被删除时保留字段值' },\r\n    { name: 'submitter', type: 'boolean', defaultValue: 'true', helperText: '提交按钮相关配置' },\r\n    { name: 'scrollToFirstError', type: 'boolean', defaultValue: 'false', helperText: ' 提交失败自动滚动到第一个错误字段' },\r\n    {\r\n      name: 'dateFormatter', type: 'string', enum: ['string', 'number', 'false'],\r\n      defaultValue: 'string', helperText: '自动格式数据,主要是 moment 的表单'\r\n    },\r\n    {\r\n      name: 'omitNil', type: 'boolean', defaultValue: 'true',\r\n      helperText: 'ProForm 会自动清空 null 和 undefined 的数数据，如果你约定了 nil 代表某种数据，可以设置为 false 关闭此功能'\r\n    },\r\n    {\r\n      name: 'labelCol', type: 'object', subFields: [\r\n        { name: 'span', type: 'number' },\r\n        { name: 'offset', type: 'number' }\r\n      ], helperText: 'label 标签布局，同 <Col> 组件，设置 span offset 值'\r\n    },\r\n\r\n  ],\r\n  defaultStyles: {\r\n    display: 'block',\r\n    marginTop: '0',\r\n    paddingBottom: '10px',\r\n    minHeight: '100px',\r\n  },\r\n  canHaveChildren: true\r\n};\r\n","import ProField from \"@ant-design/pro-field\";\r\nimport type { InputProps } from 'antd';\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport * as PropTypes from 'prop-types';\r\nimport { Flex, Box } from \"@chakra-ui/layout\"\r\nimport { FormContext } from \"antd/es/form/context\";\r\nimport createField from '@ant-design/pro-form/es/BaseForm/createField'\r\n\r\nimport { ProFormItemProps } from \"@ant-design/pro-form/es/interface\";\r\nimport { Forms } from '@steedos/builder-store';\r\n\r\nimport { observer } from \"mobx-react-lite\"\r\nimport Button from '@salesforce/design-system-react/components/button'; \r\n\r\nimport './Field.less'\r\n\r\nexport const Field = observer((props: any) => {\r\n  const context = React.useContext(FormContext);\r\n  const formId = context.name ? context.name : 'default';\r\n  const {\r\n    attributes,\r\n    // name, \r\n    // label, \r\n    // tooltip, \r\n    // allowClear,\r\n    // placeholder,\r\n    // required,\r\n    readonly,\r\n    // referenceTo,\r\n    // disabled,\r\n    mode: fieldMode,\r\n    valueType,\r\n    isWide = false,\r\n    showInlineIcon = true, //valueType != 'object' && valueType != 'grid',\r\n    formItemProps = {},\r\n    // type,\r\n    // count,\r\n    // defaultValue,\r\n    // defaultChecked,\r\n    // options,\r\n    ...rest\r\n  } = props\r\n\r\n  const mode = fieldMode ? fieldMode : Forms.loadById(formId).mode\r\n  const formItemPropsMerged = {\r\n    ...attributes,\r\n    ...formItemProps,\r\n    className: `field type-${valueType} mode-${mode}`,\r\n  }\r\n\r\n  // if (valueType == 'object') {\r\n  //   formItemPropsMerged.style = {gridColumn: 'span 2/span 2'};\r\n  //   formItemPropsMerged.labelCol = { span: 0 };\r\n  //   formItemPropsMerged.wrapperCol = { span: 24 };\r\n  // } else if (valueType == 'grid') {\r\n  //   formItemPropsMerged.style = {gridColumn: 'span 2/span 2'};\r\n  //   formItemPropsMerged.labelCol = { span: 0 };\r\n  //   formItemPropsMerged.wrapperCol = { span: 24 };\r\n  // } else \r\n  if (isWide) {\r\n    formItemPropsMerged.style = {gridColumn: 'span 2/span 2'};\r\n    if (context.vertical) {\r\n      formItemPropsMerged.labelCol = { span: 4 };\r\n      formItemPropsMerged.wrapperCol = { span: 24 };\r\n    } else {\r\n      formItemPropsMerged.labelAlign = 'left'\r\n      formItemPropsMerged.labelCol = { span: 3 };\r\n      formItemPropsMerged.wrapperCol = { span: 21 };\r\n    }\r\n  } else {\r\n    if (context.vertical) {\r\n      formItemPropsMerged.labelCol = { span: 4 };\r\n      formItemPropsMerged.wrapperCol = { span: 24 };\r\n    } else {\r\n      formItemPropsMerged.labelAlign = 'left'\r\n      formItemPropsMerged.labelCol = { span: 6 };\r\n      formItemPropsMerged.wrapperCol = { span: 18 };\r\n    }\r\n\r\n  }\r\n\r\n  const ProFieldWrap = observer((props: any) => {\r\n\r\n    const { \r\n      readonly, \r\n      mode, \r\n      fieldSchema,\r\n      fieldProps,\r\n      dependFieldValues,proFieldProps: defaultProFieldProps, ...rest } = props\r\n\r\n    const proFieldProps = {\r\n      emptyText: '',\r\n      fieldProps: Object.assign({}, fieldProps, {\r\n        field_schema: fieldSchema,\r\n        depend_field_values: dependFieldValues,\r\n      }),\r\n      ...rest\r\n    }\r\n\r\n    if (!readonly && mode === 'edit') {\r\n      return <ProField mode='edit' {...proFieldProps} />\r\n\r\n    }\r\n\r\n    const onInlineEdit = () => {\r\n      Forms.loadById(formId).setMode('edit')\r\n    };\r\n    const inlineIconOpacity = 0.4\r\n    const inlineIcon = readonly ?\r\n      <Button\r\n        iconCategory=\"utility\"\r\n        iconName=\"lock\"\r\n        iconSize=\"small\"\r\n        iconVariant=\"container\"\r\n        iconClassName=\"slds-button__icon slds-button__icon_hint\"\r\n        variant=\"icon\"/> :\r\n      <Button\r\n        iconCategory=\"utility\"\r\n        iconName=\"edit\"\r\n        iconSize=\"small\"\r\n        iconVariant=\"container\"\r\n        iconClassName=\"slds-button__icon slds-button__icon_hint\"\r\n        variant=\"icon\"\r\n        //<EditIcon color='gray.600' opacity={inlineIconOpacity} _groupHover={{ opacity: 1 }}\r\n        onClick={() => {\r\n          onInlineEdit()\r\n        }}\r\n      />\r\n\r\n\r\n    const containerOptions = {\r\n    }\r\n\r\n    return (\r\n      <Flex\r\n        {...containerOptions}\r\n        role=\"group\"\r\n        onDoubleClick={() => { if (!readonly) onInlineEdit(); }}\r\n      >\r\n        <Box flex=\"1\"><ProField mode='read' {...proFieldProps} /></Box>\r\n        {showInlineIcon && (<Box width=\"16px\">{inlineIcon}</Box>)}\r\n      </Flex>\r\n    )\r\n  })\r\n\r\n  const ProFormField = createField<ProFormItemProps<InputProps>>(\r\n\r\n    (props: ProFormItemProps<InputProps>) => {\r\n      return (\r\n        <ProFieldWrap valueType={valueType} {...props} mode={mode} readonly={readonly} />\r\n      )\r\n    },\r\n    {\r\n      valueType,\r\n    },\r\n  );\r\n  return (<ProFormField {...rest} mode={mode} formItemProps={formItemPropsMerged} />)\r\n})\r\n\r\nField['propTypes'] = {\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  valueType: PropTypes.string,\r\n};","import React, { useContext } from 'react';\r\nimport { Grid, GridItem, Flex, Box } from '@chakra-ui/layout'\r\nimport { observer } from \"mobx-react-lite\"\r\nimport useAntdMediaQuery from 'use-media-antd-query';\r\n\r\nimport ExpandableSection from '@salesforce/design-system-react/components/expandable-section';\r\nimport { forEach } from 'lodash';\r\n\r\nexport const FieldSection = observer((props: any) => {\r\n\r\n  const colSize = useAntdMediaQuery();\r\n\r\n  const { \r\n    attributes, // Builder.io 传过来的参数。\r\n    title, \r\n    titleHidden = false,\r\n    columns = (colSize === 'sm' || colSize === 'xs')? 1: 2, //(colSize === 'xl')? 3: (colSize === 'xxl')? 4: 2, \r\n    children \r\n  } = props\r\n  \r\n  const boxOptions = {\r\n    templateColumns: [`repeat(1, 1fr)`, `repeat(${columns}, 1fr)`],\r\n    gap: '0rem 2rem',\r\n  }\r\n  \r\n  const renderChildren = (children:any) => {\r\n    const result: any[] = []\r\n    forEach(children, (child:any) => {\r\n      result.push(child)\r\n      return child\r\n    })\r\n    return (result)\r\n  }\r\n\r\n  if (titleHidden) \r\n    return (\r\n      <Grid {...boxOptions}>\r\n        {children}\r\n      </Grid>\r\n    )\r\n  else\r\n    return (\r\n      <ExpandableSection\r\n        id=\"default-expandable-section\"\r\n        title={title}\r\n      >\r\n        <Grid {...boxOptions}>\r\n          {children}\r\n        </Grid>\r\n      </ExpandableSection>\r\n  )\r\n})","export const configFieldObject = {\r\n  name: 'Steedos:FieldObject',\r\n  image:\r\n    'https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F682efef23ace49afac61748dd305c70a',\r\n  inputs: [\r\n    { name: 'name', type: 'text', defaultValue: 'object'},\r\n    { name: 'label', type: 'text', defaultValue: 'Object'},\r\n  ],\r\n  defaultStyles: {\r\n    display: 'block',\r\n    minHeight: '50px',\r\n    marginTop: '0',\r\n  },\r\n  noWrap: false,\r\n  canHaveChildren: true,\r\n  // requiresParent: {\r\n  //   message: 'This block must be inside a \"Form\" block',\r\n  //   query: {\r\n  //     'component.name': { $in: ['@steedos/builder-form:Form'] }\r\n  //   }\r\n  // }\r\n};\r\n","\r\nimport React from \"react\";\r\n\r\nexport const FormContext = React.createContext<any>({});\r\n","import { href } from './href';\r\nimport {email} from './email';\r\n\r\nexport default  {\r\n    href,\r\n    email\r\n};\r\n","import React from 'react'\r\nimport { Input } from 'antd';\r\n\r\nexport const href = {\r\n  render: (text: any, { fieldProps }: any)=> {\r\n    return (<a href={text}>{text}</a>)\r\n  },\r\n  renderFormItem: (_: any, props: any) => (\r\n    <Input placeholder=\"请输入链接\" {...props?.fieldProps} />\r\n  ),\r\n}\r\n\r\n","import React from 'react'\r\nimport { Input } from 'antd';\r\n\r\nexport const email = {\r\n  render: (text: any, { fieldProps }: any)=> {\r\n    const link = \"mailto:\" + text;\r\n    return (<a href={link}>{text}</a>)\r\n  },\r\n  renderFormItem: (_: any, props: any) => (\r\n    <Input placeholder=\"请输入邮箱地址\" {...props?.fieldProps} />\r\n  ),\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { FormContext } from './FormContext';\r\nimport valueTypes from '../valueTypes';\r\n\r\nimport ProContext, {createIntl, \r\n  zhCNIntl as pro_zhCN, \r\n  zhTWIntl as pro_zhTW, \r\n  enUSIntl as pro_enUS\r\n} from '@ant-design/pro-provider';\r\n\r\nimport { ConfigProvider as AntdConfigProvider } from 'antd';\r\nimport antd_zhCN from 'antd/es/locale/zh_CN';\r\nimport antd_zhTW from 'antd/es/locale/zh_TW';\r\nimport antd_enUS from 'antd/es/locale/zh_CN';\r\n\r\nimport { IntlType } from \"@ant-design/pro-table\";\r\n\r\nimport { en_US, zh_CN } from '@steedos/builder-locale';\r\n\r\n/* 通过 valueTypeMap，支持给Form传入第三方自定义控件 */\r\ntype FormProviderProps = {\r\n  locale?: string,\r\n  valueTypeMap?: object,\r\n  children: any,\r\n}\r\n\r\nexport function FormProvider(props: FormProviderProps) {\r\n  const {\r\n    locale,\r\n    valueTypeMap,\r\n    children,\r\n  } = props\r\n\r\n  const proContextValues = {\r\n    intl: {\r\n      ...getProLocale(locale),\r\n    },\r\n    valueTypeMap: { ...valueTypes, ...valueTypeMap }\r\n  }\r\n\r\n  const antdContextValues = {\r\n    locale: getAntdLocale(locale)\r\n  }\r\n\r\n  const intl = getSteedosIntl(locale)\r\n  return (\r\n    <FormContext.Provider value={{\r\n      intl,\r\n      valueTypeMap\r\n    }}>\r\n      <AntdConfigProvider {...antdContextValues}>\r\n        <ProContext.Provider value={proContextValues}>\r\n          {children}\r\n        </ProContext.Provider>\r\n      </AntdConfigProvider>\r\n    </FormContext.Provider>\r\n  )\r\n}\r\n\r\n\r\nexport const getAntdLocale:any = (locale: string)=> {\r\n  switch (locale) {\r\n    case 'en_US': return antd_enUS\r\n    case 'zh_CN': return antd_zhCN\r\n    case 'zh_TW': return antd_zhTW\r\n    default: return antd_zhCN\r\n  }\r\n}\r\n\r\nexport const getProLocale = (locale?: string)=> {\r\n  switch (locale) {\r\n    case 'en_US': return pro_enUS\r\n    case 'zh_CN': return pro_zhCN\r\n    case 'zh_TW': return pro_zhTW\r\n    default: return pro_zhCN\r\n  }\r\n}\r\n\r\nfunction getMessageFromLocaleMap(\r\n  source: Record<string, unknown>,\r\n  path: string,\r\n  defaultValue?: string,\r\n): string | undefined {\r\n  // a[3].b -> a.3.b\r\n  const paths = path.replace(/\\[(\\d+)\\]/g, '.$1').split('.');\r\n  let result = source;\r\n  let message = defaultValue;\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const p of paths) {\r\n    message = Object(result)[p];\r\n    result = Object(result)[p];\r\n    if (message === undefined) {\r\n      return defaultValue;\r\n    }\r\n  }\r\n  return message;\r\n}\r\n\r\n/**\r\n * 创建一个操作函数\r\n *\r\n * @param locale\r\n * @param localeMap\r\n */\r\nconst createSteedosIntl = (locale: string, localeMap: Record<string, any>): IntlType => ({\r\n  getMessage: (id: string, defaultMessage: string) => {\r\n    let message = getMessageFromLocaleMap(localeMap, id, defaultMessage);\r\n    if (!message)\r\n      message = getProLocale(locale).getMessage(id, '');\r\n      if (!message)\r\n        message = getMessageFromLocaleMap(getAntdLocale(locale), id);\r\n    return message || defaultMessage\r\n  },\r\n  locale,\r\n});\r\n\r\nconst zhCNIntl = createSteedosIntl('zh_CN', zh_CN);\r\nconst enUSIntl = createSteedosIntl('en_US', en_US);\r\n\r\nconst getSteedosIntl = (locale?: string) => {\r\n  switch (locale) {\r\n    case 'en_US': return enUSIntl\r\n    case 'zh_CN': return zhCNIntl\r\n    case 'zh_TW': return zhCNIntl\r\n    default: return zhCNIntl\r\n  }\r\n}\r\n\r\nexport function useIntl(): IntlType {\r\n  const context = useContext(FormContext);\r\n  return context.intl || zhCNIntl;\r\n}\r\n","export default {\r\n  form: {\r\n    save: '保存',\r\n    cancel: '取消'\r\n  }\r\n}","export default {\r\n  form: {\r\n    save: 'Save',\r\n    cancel: 'Cancel'\r\n  }\r\n}","import React, { useContext } from \"react\";\r\n\r\nimport { Field } from '@steedos/builder-form'\r\nimport _ from 'lodash';\r\nimport { useQuery } from \"react-query\";\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { FormContext } from \"antd/es/form/context\";\r\nimport { ProFormDependency } from '@ant-design/pro-form';\r\nimport useAntdMediaQuery from 'use-media-antd-query';\r\nimport { Forms } from '@steedos/builder-store';\r\n\r\nexport type ObjectFieldProps = {\r\n  objectApiName?: string,\r\n  fieldName: string,\r\n  fieldSchema: any,\r\n}\r\n\r\nexport const ObjectField = observer((props: any) => {\r\n  const context = useContext(FormContext);\r\n  const formId = context.name?context.name:'default';\r\n  const { objectApiName, fieldName, fieldSchema } = props\r\n  \r\n  const colSize = useAntdMediaQuery();\r\n  const isMobile = (colSize === 'sm' || colSize === 'xs') && !props.disableMobile;\r\n  if (isMobile)\r\n    fieldSchema.is_wide = true\r\n  /*\r\n    TODO: fieldSchema 如果不存在，应该从对象中获取，但是对象应该从 store 中获取，而不是请求。\r\n  */\r\n  \r\n  // 从对象定义中生成字段信息。\r\n  let mode = Forms.loadById(formId).mode;\r\n  let formFieldProps: any = {\r\n    name: fieldName,\r\n    mode,\r\n    label: fieldSchema.label? fieldSchema.label: fieldName,\r\n    placeholder: fieldSchema.help,\r\n    hidden: fieldSchema.hidden,\r\n    valueType: fieldSchema.type,\r\n    required: fieldSchema.required,\r\n    // options: fieldSchema.options,\r\n    readonly: fieldSchema.readonly,\r\n    isWide: fieldSchema.is_wide,\r\n    fieldSchema,\r\n  }\r\n\r\n  if (mode == \"edit\") {\r\n\r\n    if (fieldSchema.omit) {\r\n      formFieldProps.hidden = true\r\n    }\r\n  } else if (mode == \"read\") {\r\n    if (fieldSchema.omit) {\r\n      formFieldProps.readonly = true\r\n    }\r\n  }\r\n\r\n  if (formFieldProps.required) {\r\n    formFieldProps.rules = [\r\n      {\r\n        required: true,\r\n        message: `请输入${formFieldProps.label}...`,\r\n      },\r\n    ]\r\n  }\r\n\r\n  const formItemProps:any = {\r\n    colon: false,\r\n  }\r\n\r\n  const dependOn = fieldSchema.depend_on ? fieldSchema.depend_on : []\r\n\r\n  return (\r\n    <ProFormDependency name={dependOn}>\r\n      {(dependFieldValues) => {\r\n        return (\r\n          <Field\r\n            formItemProps={formItemProps}\r\n            dependFieldValues={dependFieldValues}\r\n            {...formFieldProps}\r\n          />)\r\n      }}\r\n    </ProFormDependency>\r\n  )\r\n});","\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport * as PropTypes from 'prop-types';\r\nimport { forEach, defaults, groupBy, filter, map, defaultsDeep} from 'lodash';\r\nimport { useQuery } from 'react-query'\r\n\r\nimport { Form } from '@steedos/builder-form';\r\nimport { Form as ProForm } from 'antd';\r\nimport { BaseFormProps } from \"@ant-design/pro-form/es/BaseForm\";\r\nimport type { ProFieldFCMode } from '@ant-design/pro-utils';\r\nimport { ObjectField } from \"./ObjectField\";\r\nimport { observer } from \"mobx-react-lite\"\r\nimport stores, { Objects, Forms, API, Settings } from '@steedos/builder-store';\r\nimport { FieldSection } from \"@steedos/builder-form\";\r\nimport { Spin } from 'antd';\r\n\r\nimport './ObjectForm.less'\r\n\r\nexport type FormProps<T = Record<string, any>>  = {\r\n  mode?: 'read' | 'edit',\r\n  editable?: boolean,\r\n} & BaseFormProps\r\n\r\n/*\r\n  fields: 字段定义数组，\b格式同YML\r\n*/\r\nexport type ObjectFormProps = {\r\n  objectApiName?: string,\r\n  objectSchema?: any,\r\n  initialValues?: any,\r\n  recordId?: string\r\n  submitter?: any,\r\n  isModalForm?: boolean,\r\n  isDrawerForm?: boolean,\r\n  trigger?: any\r\n  afterUpdate?: Function,\r\n  afterInsert?: Function,\r\n  visible?: boolean\r\n} & FormProps\r\n\r\nexport const ObjectForm = observer((props:ObjectFormProps) => {\r\n  const {\r\n    objectApiName, // = Settings.currentObjectApiName,\r\n    initialValues = {},\r\n    objectSchema = {}, // 和对象定义中的fields格式相同，merge之后 render。\r\n    recordId, // = Settings.currentRecordId,\r\n    name: formId = 'default',\r\n    mode = 'edit', \r\n    layout = 'vertical',\r\n    children,\r\n    submitter,\r\n    isModalForm,\r\n    isDrawerForm,\r\n    afterUpdate,\r\n    afterInsert,\r\n    trigger,\r\n    visible,\r\n    ...rest\r\n  } = props;\r\n  const [proForm] = ProForm.useForm();\r\n \r\n  const form = Forms.loadById(formId)\r\n  form.setMode(mode);\r\n\r\n  // const [fieldSchemas, setFieldSchemas] = useState([]);\r\n  // const [fieldNames, setFieldNames] = useState([]);\r\n  const fieldNames = [];\r\n  const fieldSchemaArray = [];\r\n  const sections = [];\r\n\r\n  const object = objectApiName? Objects.getObject(objectApiName): null;\r\n  if (object && object.isLoading) return (<div><Spin/></div>)\r\n\r\n  \r\n  const mergedSchema = object? defaultsDeep({}, object.schema, objectSchema): objectSchema;\r\n  fieldSchemaArray.length = 0\r\n  forEach(mergedSchema.fields, (field, fieldName) => {\r\n    if (!field.group || field.group == 'null' || field.group == '-')\r\n      field.group = '通用'\r\n    let isObjectField = /\\w+\\.\\w+/.test(fieldName)\r\n    if (field.type == 'grid' || field.type == 'object') {\r\n      // field.group = field.label\r\n      field.is_wide = true;\r\n    }\r\n    // 新建记录时，把autonumber、formula、summary类型字段视为omit字段不显示\r\n    let isOmitField = isModalForm && [\"autonumber\", \"formula\", \"summary\"].indexOf(field.type) > -1\r\n    if (!field.hidden && !isObjectField && !isOmitField){\r\n      fieldSchemaArray.push(defaults({name: fieldName}, field))\r\n    }\r\n  })\r\n  forEach(fieldSchemaArray, (field:any)=>{\r\n    fieldNames.push(field.name)\r\n  })\r\n\r\n  if (object && recordId) {\r\n    const recordCache = object.getRecord(recordId, fieldNames)\r\n    if (recordCache.isLoading)\r\n      return (<div><Spin/></div>)\r\n\r\n    if(recordCache.data && recordCache.data.value && recordCache.data.value.length > 0){\r\n      const record = recordCache.data.value[0];\r\n      forEach(fieldNames, (fieldName:any)=>{\r\n        if (record[fieldName])\r\n          initialValues[fieldName] = record[fieldName];\r\n      })\r\n    } else {\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  const onFinish = async(values:any) =>{\r\n    if (!object) \r\n      return\r\n    \r\n    let result; \r\n    if(!recordId){     \r\n      result = await API.insertRecord(objectApiName, values);\r\n      if(afterInsert){\r\n        return afterInsert(result);\r\n      }else{\r\n        return result ? true : false\r\n      }\r\n    }else{\r\n      result = await API.updateRecord(objectApiName, recordId, values);\r\n      object.getRecord(recordId, fieldNames).loadRecord();\r\n      if(afterUpdate){\r\n        return afterUpdate(result);  \r\n      }else{\r\n        return result ? true : false\r\n      }\r\n    } \r\n  }\r\n\r\n  const getSection = (sectionName, options) => {\r\n    const sectionFields = filter(fieldSchemaArray, { 'group': sectionName });\r\n    const columns = isModalForm ? 2 : undefined\r\n    return (\r\n      <FieldSection title={sectionName} key={sectionName} columns={columns} {...options}>\r\n        {map(sectionFields, (field:any)=>{\r\n          const fieldProps = {\r\n            key: field.name,\r\n            name: field.name,\r\n            objectApiName,\r\n            fieldName: field.name,\r\n            label: field.label,\r\n            fieldSchema: field,\r\n            mode,\r\n          };\r\n          return (<ObjectField {...fieldProps} />)\r\n        })}\r\n      </FieldSection>\r\n    )\r\n  }\r\n\r\n  const getSections = () => {\r\n     const sections = groupBy(fieldSchemaArray, 'group');\r\n     const dom = [];\r\n     const options = (Object.keys(sections).length == 1)?{titleHidden: true}: {}\r\n     forEach(sections, (value, key) => {\r\n      dom.push(getSection(key, options))\r\n    })\r\n    return dom;\r\n  }\r\n  // 从详细页面第一次进入另一个相关详细页面是正常，第二次initialValues={initialValues} 这个属性不生效。\r\n  // 所以在此调用下 form.setFieldsValue() 使其重新生效。\r\n  proForm.setFieldsValue(initialValues)\r\n  return (\r\n    <Form \r\n      // formFieldComponent = {ObjectField}\r\n      name={formId}\r\n      className='builder-form object-form'\r\n      initialValues={initialValues}\r\n      mode={mode}\r\n      form={proForm}\r\n      layout={layout}\r\n      submitter={submitter}\r\n      isModalForm={isModalForm}\r\n      isDrawerForm={isDrawerForm}\r\n      trigger={trigger}\r\n      onFinish={onFinish}\r\n      visible={visible}\r\n      {...rest}\r\n    >\r\n      {children}\r\n      {getSections()}\r\n    </Form>\r\n  )\r\n});\r\n\r\n\r\n\r\nObjectForm['propTypes'] = {\r\n  objectApiName: PropTypes.string,\r\n  mode: PropTypes.string,\r\n};","import React, { useContext, useRef, useEffect, useState } from \"react\"\r\nimport _ from \"lodash\"\r\nimport { ObjectContext } from \"../\"\r\nimport { useQuery } from \"react-query\"\r\nimport { formatFiltersToODataQuery } from '@steedos/filters';\r\nimport useAntdMediaQuery from 'use-media-antd-query';\r\nimport ProTable, {\r\n  ProTableProps,\r\n  RequestData,\r\n  ProColumnType,\r\n} from \"@ant-design/pro-table\"\r\nimport { SortOrder } from \"antd/es/table/interface\"\r\nimport { ParamsType } from \"@ant-design/pro-provider\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { Objects, API } from \"@steedos/builder-store\"\r\nimport { getObjectRecordUrl } from \"../utils\"\r\nimport { Spin } from 'antd';\r\nimport \"./ObjectTable.less\"\r\nimport { Link } from \"react-router-dom\"\r\n// export type TableProps<T extends Record<string, any>, U extends ParamsType, ValueType>  = {\r\n//   mode?: ProFieldFCMode,\r\n//   editable?: boolean,\r\n// } & ProTableProps<T, U, ValueType> & {\r\n//   defaultClassName: string;\r\n// }\r\n\r\n// export type ObjectTableProps = {\r\n//   objectApiName?: string,\r\n//   recordId?: string,\r\n// } & ProTableProps<T, U, ValueType> & {\r\n//   defaultClassName: string;\r\n// }\r\n\r\nexport type ObjectTableColumnProps = {\r\n  fieldName: string\r\n} & ProColumnType\r\n\r\nexport type ObjectTableProps<T extends ObjectTableColumnProps> =\r\n  | ({\r\n      name?: string\r\n      objectApiName?: string\r\n      columnFields?: T[]\r\n      filters?: [] | string\r\n      sort?: [] | string\r\n      onChange?: ([any]) => void\r\n      // filterableFields?: [string]\r\n    } & {\r\n      defaultClassName?: string\r\n    })\r\n  | any\r\n\r\nexport const getObjectTableProColumn = (field: any, columnOption?: any) => {\r\n  // 把yml中的某个字段field转成ant的ProTable中的columns属性项\r\n  if (!field) {\r\n    return null\r\n  }\r\n\r\n  const fieldType: string = field.type\r\n  let proColumnProps: any = {\r\n    title: field.label,\r\n    dataIndex: field.name,\r\n    formItemProps: {},\r\n    fieldProps: {\r\n      field_schema: field\r\n    }\r\n  }\r\n  if (field.required) {\r\n    proColumnProps.formItemProps.required = true\r\n  }\r\n\r\n  if (field.sortable) {\r\n    proColumnProps.sorter = {\r\n        multiple: 1\r\n    };\r\n  }\r\n\r\n  proColumnProps.valueType = fieldType\r\n\r\n  if(columnOption){\r\n    proColumnProps = Object.assign({}, proColumnProps, columnOption);\r\n  }\r\n  \r\n  return proColumnProps\r\n}\r\n\r\nexport const checkFieldTypeSupportBetweenQuery = (type: string)=> {\r\n  return false;\r\n  // return [\"date\", \"datetime\", \"currency\", \"number\"].includes(type);\r\n}\r\n\r\nexport const getFieldDefaultOperation = (type: any)=>{\r\n\tif(type && checkFieldTypeSupportBetweenQuery(type)){\r\n\t\treturn 'between';\r\n  }\r\n\telse if([\"textarea\", \"text\", \"code\"].includes(type)){\r\n\t\treturn 'contains'\r\n  }\r\n\telse{\r\n\t\treturn \"=\"\r\n  }\r\n}\r\n\r\nfunction getDefaultSortOrder(fieldName: any, sort:any){\r\n  let sortDirection:any;\r\n  let sortValue: any;\r\n  if (sort) {\r\n    if (typeof sort === 'string' && sort.length > 0) {\r\n      let arr = [];\r\n      arr = sort.split(',');\r\n      sortValue = _.map(arr, (value, key) => {\r\n        if (value.indexOf(' ')) {\r\n          return arr[key] = value.split(' ');\r\n        } else {\r\n          return arr[key] = [value]\r\n        }\r\n      })\r\n    } else {\r\n      sortValue = sort;\r\n    }\r\n    if (sortValue.length > 0) {\r\n      _.forEach(sortValue, (ele) => {\r\n        if (ele[0] === fieldName) {\r\n          sortDirection = ele[1] === 'desc' ? 'descend' : 'ascend';\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return sortDirection;\r\n}\r\n\r\nexport const ObjectTable = observer((props: ObjectTableProps<any>) => {\r\n\r\n  const {\r\n    objectApiName,\r\n    columnFields = [],\r\n    filters: defaultFilters,\r\n    sort,\r\n    defaultClassName,\r\n    onChange,\r\n    toolbar,\r\n    search,\r\n    ...rest\r\n  } = props\r\n\r\n  const [totalRecords, setTotalRecords] = useState(0)\r\n\r\n  const colSize = useAntdMediaQuery();\r\n  const isMobile = (colSize === 'sm' || colSize === 'xs') && !props.disableMobile;\r\n\r\n  const object = Objects.getObject(objectApiName);\r\n  const selfTableRef = useRef(null)\r\n  if (object.isLoading) return (<div><Spin/></div>)\r\n\r\n  let defaultSort: any = {};\r\n  const proColumns = []\r\n  if (object.schema && object.schema.fields) {\r\n    _.forEach(\r\n      columnFields,\r\n      ({ fieldName, ...columnItem }: ObjectTableColumnProps) => {\r\n        // if (columnItem.hideInTable) return\r\n        let columnOption: any = {};\r\n        const defaultSortOrder = getDefaultSortOrder(fieldName,sort)\r\n        if(defaultSortOrder){\r\n          columnOption.defaultSortOrder = defaultSortOrder;\r\n          defaultSort[fieldName] = defaultSortOrder;\r\n        }\r\n        const  proColumn = getObjectTableProColumn(object.schema.fields[fieldName], columnOption)\r\n        if (proColumn) {\r\n          proColumns.push({ ...proColumn, ...columnItem })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const request = async (\r\n    params: any & {\r\n      pageSize?: number\r\n      current?: number\r\n      keyword?: string\r\n    },\r\n    sort: Record<string, SortOrder>,\r\n    filter: Record<string, React.ReactText[]>\r\n  ): Promise<any> => {\r\n\r\n    // 第一个参数 params 查询表单和 params 参数的结合\r\n    // 第一个参数中一定会有 pageSize 和  current ，这两个参数是 antd 的规范\r\n    // 这里需要返回一个 Promise,在返回之前你可以进行数据转化\r\n    // 如果需要转化参数可以在这里进行修改\r\n    /*\r\n    const msg = await myQuery({\r\n      page: params.current,\r\n      pageSize: params.pageSize,\r\n    });\r\n    return {\r\n      data: msg.result,\r\n      // success 请返回 true，\r\n      // 不然 table 会停止解析数据，即使有数据\r\n      success: boolean,\r\n      // 不传会使用 data 的长度，如果是分页一定要传\r\n      total: number,\r\n    };\r\n    */\r\n\r\n    const { current, pageSize, ...searchFilters } = params\r\n    let filters: any = [], keyFilters: any = [];\r\n    //searchFilters中包括params中自定义参数及顶部搜索框字段参数，字段名不可能是__开头，所以params中自定义参数以__开头可区分它们\r\n    const {__objectApiName, __columnFields, __defaultFilters, ...restFilters} = searchFilters;\r\n    keyFilters = Object.keys(restFilters).map((key) => {\r\n      const field = object.schema.fields[key];\r\n      return [key, getFieldDefaultOperation(field && field.type), searchFilters[key]];\r\n    });\r\n    \r\n    if (__defaultFilters && __defaultFilters.length) {\r\n      if(keyFilters && keyFilters.length){\r\n        if (_.isArray(__defaultFilters)) {\r\n            filters = [__defaultFilters, keyFilters]\r\n        }\r\n        else {\r\n            const odataKeyFilters = formatFiltersToODataQuery(keyFilters);\r\n            filters = `(${__defaultFilters}) and (${odataKeyFilters})`;\r\n        }\r\n      }\r\n      else{\r\n        filters = __defaultFilters;\r\n      }\r\n    }\r\n    else{\r\n      filters = keyFilters;\r\n    }\r\n\r\n    // TODO: 这里antd的request请求函数与ObjectTable组件传入的filters,sort等格式不一样，需要转换处理\r\n    const fields = __columnFields.map((n: any) => {\r\n      return n.fieldName\r\n    })\r\n    // TODO: ant.design的bug（defaultSortOrder 和 sorter存在时sort没获取到设置的初始值），所以这里\r\n    // 设置下sort的初始值， 后期修复这个bug后以下三行代码可以 删除。\r\n    if(_.isEmpty(sort) && !_.isEmpty(defaultSort)){\r\n      sort = defaultSort;\r\n    }\r\n    const result = await API.requestRecords(\r\n      __objectApiName,\r\n      filters,\r\n      fields,\r\n      {\r\n        pageSize: params.pageSize as number,\r\n        current: params.current as number,\r\n        sort: sort\r\n          ? Object.keys(sort).map((sk) => [\r\n              sk,\r\n              sort[sk] == \"ascend\" ? \"asc\" : \"desc\",\r\n            ])\r\n          : [],\r\n      }\r\n    )\r\n    setTotalRecords(result[\"@odata.count\"])\r\n    return {\r\n      data: result.value,\r\n      success: true,\r\n      total: result[\"@odata.count\"],\r\n    }\r\n  }\r\n\r\n  let searchOptions: any =  {\r\n    filterType: 'light',\r\n  }\r\n  if(isMobile){\r\n    searchOptions = false;\r\n  }\r\n  const proSearch = search || search === false ? search : searchOptions;\r\n\r\n  let toolbarOptions: any =  {\r\n    subTitle: `${totalRecords} 个项目`\r\n  };\r\n  if(isMobile){\r\n    toolbarOptions.settings = false;\r\n  }\r\n  const proToolbar = Object.assign({}, toolbarOptions, toolbar);\r\n\r\n  return (\r\n    <ProTable\r\n      request={request}\r\n      columns={proColumns}\r\n      rowKey={rest.rowKey || \"_id\"}\r\n      rowSelection={rest.rowSelection || { onChange }}\r\n      pagination={{ ...rest.pagination, hideOnSinglePage: true }}\r\n      columnEmptyText={false}\r\n      actionRef={rest.actionRef || selfTableRef}\r\n      onChange={() => {\r\n        ;(rest.actionRef || selfTableRef).current.reload()\r\n      }}\r\n      params={{\r\n        __objectApiName: objectApiName,\r\n        __columnFields: columnFields,\r\n        __defaultFilters: defaultFilters,\r\n      }}\r\n      search={proSearch}\r\n      toolbar={proToolbar}\r\n      size=\"small\"\r\n      className={[\"object-table\", rest.className].join(\" \")}\r\n      {...rest}\r\n    />\r\n  )\r\n})\r\n","import _ from 'lodash';\r\nimport { Apps } from '@steedos/builder-store';\r\nexport function getObjectRecordUrl(objectApiName: string, redordId: any) {\r\n  const hrefPrefix = `/app/${Apps.currentAppId}/${objectApiName}/view/`;\r\n  return `${hrefPrefix}${redordId}`;\r\n}\r\n\r\n\r\n/**\r\n把后端请求到的records记录转换成以下treeData的格式\r\n[\r\n    {\r\n        title: 'Node1',\r\n        value: '0-0',\r\n        children: [\r\n            {\r\n                title: 'Child Node1',\r\n                value: '0-0-1',\r\n            },\r\n            {\r\n                title: 'Child Node2',\r\n                value: '0-0-2',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: 'Node2',\r\n        value: '0-1',\r\n    },\r\n];\r\n*/\r\nexport const getTreeDataFromRecords = (records: [] = [], nameField: string = \"name\", parentField: string = \"parent\")=>{\r\n  let result = [], tempParentValue: string, rootNode: any;\r\n  let getChildrenNodes = (parent: string)=>{\r\n    let nodes = [];\r\n    records.forEach((record: any)=>{\r\n      if(record.parent === parent){\r\n        let tempNode: any = {\r\n          title: record[nameField],\r\n          value: record._id,\r\n          key: record._id\r\n        };\r\n        const tempChildren = getChildrenNodes(record._id);\r\n        if(tempChildren && tempChildren.length){\r\n          tempNode.children = tempChildren;\r\n        }\r\n        nodes.push(tempNode);\r\n      }\r\n    });\r\n    return nodes;\r\n  }\r\n  let getTreeNode = (record: any)=>{\r\n    tempParentValue = record[parentField];\r\n    let isRoot = !tempParentValue;\r\n    if(!isRoot){\r\n      const isParentExist = !!records.find((item: any)=>{\r\n        return item._id === tempParentValue;\r\n      });\r\n      isRoot = !isParentExist;\r\n    }\r\n    if(isRoot){\r\n      let tempNode: any = {\r\n        title: record[nameField],\r\n        value: record._id,\r\n        key: record._id\r\n      };\r\n      const tempChildren = getChildrenNodes(record._id);\r\n      if(tempChildren && tempChildren.length){\r\n        tempNode.children = tempChildren;\r\n      }\r\n      return tempNode;\r\n    }\r\n  }\r\n  records.forEach((record)=>{\r\n    rootNode = getTreeNode(record);\r\n    if(rootNode){\r\n      result.push(rootNode);\r\n    }\r\n  });\r\n  return result;\r\n}","import { Tree } from \"antd\"\r\nimport _ from \"lodash\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { useQuery } from \"react-query\"\r\nimport { Objects, API } from \"@steedos/builder-store\"\r\nimport { getTreeDataFromRecords } from '../utils';\r\nimport \"./ObjectTree.less\"\r\n// export type TreeProps<T extends Record<string, any>, U extends ParamsType, ValueType>  = {\r\n//   mode?: ProFieldFCMode,\r\n//   editable?: boolean,\r\n// } & ProTreeProps<T, U, ValueType> & {\r\n//   defaultClassName: string;\r\n// }\r\n\r\n// export type ObjectTreeProps = {\r\n//   objectApiName?: string,\r\n//   recordId?: string,\r\n// } & ProTreeProps<T, U, ValueType> & {\r\n//   defaultClassName: string;\r\n// }\r\n\r\nexport type ObjectTreeProps =\r\n  | ({\r\n      name?: string\r\n      objectApiName?: string\r\n      nameField?: string\r\n      parentField?: string\r\n      rootNodeValue?: string\r\n      filters?: string | []\r\n      checkable?: boolean\r\n      onChange?: () => void\r\n    } & {\r\n      defaultClassName: string\r\n    })\r\n  | any\r\n\r\nexport const ObjectTree = observer((props: ObjectTreeProps) => {\r\n\r\n  let {\r\n    name: treeId = \"default\",\r\n    objectApiName,\r\n    nameField,\r\n    parentField,\r\n    releatedColumnField,\r\n    rootNodeValue,\r\n    filters,\r\n    checkable,\r\n    onChange,\r\n    ...rest\r\n  } = props\r\n  if (checkable == undefined) checkable = true\r\n\r\n  const object = Objects.getObject(objectApiName);\r\n\r\n  //上边都是schema相关的操作\r\n  //下边才是去请求数据\r\n\r\n  const [treeData, setTreeData] = useState([])\r\n  const [expandedKeys, setExpandedKeys] = useState([])\r\n  let { data: records } = useQuery(\r\n    [\r\n      objectApiName + \"_records\",\r\n      nameField,\r\n      parentField,\r\n      rootNodeValue,\r\n      filters,\r\n      checkable,\r\n    ], //这里以Props里的参数作为useQuery的第一参数，react-query会通过该参数是否发生变化来判断是否要重新进行请求\r\n    async () => {\r\n      // const objectFields = Object.values(object.schema.fields)\r\n      //   .filter(({ hidden }) => !hidden)\r\n      //   .map(({ name }) => name)\r\n      const objectFields = [nameField, parentField]\r\n      return await API.requestRecords(\r\n        objectApiName as string,\r\n        filters,\r\n        objectFields\r\n      )\r\n    },\r\n    { enabled: !object.isLoading } //只有上边的schema加载好了，才启用下边的记录查询\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (records) {\r\n      const treeData = getTreeDataFromRecords(records.value, nameField, parentField);\r\n      if(treeData && treeData.length){\r\n        setTreeData(treeData);\r\n        const rootNodeValues = treeData.map((treeItem)=>{\r\n          return treeItem.value;\r\n        });\r\n        setExpandedKeys(rootNodeValues)\r\n      }\r\n      // let td: any = []\r\n      // let ek: any = []\r\n      // let tp: any = {}\r\n      // let _rootNodeValue = rootNodeValue\r\n      // ;(records.value as any[]).forEach((d) => {\r\n      //   let { _id, ...rest } = d\r\n      //   let parent = rest[parentField || \"parent\"]\r\n      //   tp[_id] = {\r\n      //     value: _id,\r\n      //     key: _id,\r\n      //     title: d[nameField || \"name\"],\r\n      //     children: [],\r\n      //     _id,\r\n      //     ...rest,\r\n      //     ...(tp[_id] || {}),\r\n      //   }\r\n      //   ek.push(_id)\r\n      //   if (parent) {\r\n      //     if (tp[parent]) {\r\n      //       tp[parent].children.push(tp[_id])\r\n      //     } else tp[parent] = { children: [tp[_id]] }\r\n      //   } else if (!parent) {\r\n      //     td = [tp[_id]]\r\n      //     _rootNodeValue = _id\r\n      //   }\r\n      // })\r\n      // if (_rootNodeValue) {\r\n      //   td = (tp[_rootNodeValue] && [tp[_rootNodeValue]]) || []\r\n      // }\r\n      // setTreeData(td)\r\n      // // setExpandedKeys(ek)\r\n      // setExpandedKeys([_rootNodeValue])\r\n    }\r\n  }, [records])\r\n\r\n  if (object.isLoading) return (<div>Loading object ...</div>)\r\n  return (\r\n    <Tree\r\n      style={{ width: \"100%\" }}\r\n      // checkable={checkable}\r\n      expandedKeys={expandedKeys}\r\n      treeData={treeData}\r\n      onExpand={(expandedKeys, { expanded, node }) => {\r\n        setExpandedKeys(expandedKeys)\r\n      }}\r\n      onSelect={(values, { selectedNodes }) => {\r\n        onChange && onChange(selectedNodes)\r\n      }}\r\n      // onCheck={(values, { checkedNodes }) => {\r\n      //   console.log(values, checkedNodes)\r\n      //   onChange && onChange(checkedNodes)\r\n      // }}\r\n      {...rest}\r\n    ></Tree>\r\n  )\r\n})\r\n","/*\r\n这是一个列表组件,将华炎魔方中的数据以列表的形式展示出来\r\n * @Author: Kent.Wood \r\n * @Date: 2021-03-25 22:41:50 \r\n * @Last Modified by: Kent.Wood\r\n * @Last Modified time: 2021-03-26 20:52:23\r\n */\r\n\r\nimport { API } from \"@steedos/builder-store\"\r\nimport { List, Button, Checkbox } from \"antd\"\r\nimport _ from \"lodash\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { useQuery } from \"react-query\"\r\n// import { registerObjectListComponent } from \"..\"\r\nimport \"./ObjectList.less\"\r\nexport type ObjectListProps =\r\n  | ({\r\n      name?: string\r\n      objectApiName?: string\r\n      nameField?: string\r\n      filters?: string | string[]\r\n      checkable?: boolean //是否需要显示checkable,如果显示了,表示是多选多模式\r\n      onChange?: (any) => void\r\n    } & {\r\n      defaultClassName: string\r\n    })\r\n  | any\r\n\r\nexport const ObjectList = observer((props: ObjectListProps) => {\r\n  \r\n\r\n  let {\r\n    name: treeId = \"default\",\r\n    objectApiName,\r\n    nameField,\r\n    filters,\r\n    checkable,\r\n    onChange,\r\n    ...rest\r\n  } = props\r\n  // if (checkable == undefined) checkable = true\r\n\r\n  objectApiName = objectApiName \r\n  const { isLoading, error, data: objectSchema, isFetching } = useQuery<any>(\r\n    objectApiName + \"_schema\",\r\n    async () => {\r\n      return await API.requestObject(objectApiName as string)\r\n    }\r\n  )\r\n  // if (objectSchema) registerObjectListComponent(_.keys(objectSchema.fields))\r\n  //上边都是schema相关的操作\r\n  //下边才是去请求数据\r\n\r\n  const [listData, setListData] = useState([])\r\n\r\n  const [selectedData, setSelectedData] = useState([])\r\n\r\n  let { data: records } = useQuery(\r\n    [objectApiName + \"_records\", nameField, filters, checkable], //这里以Props里的参数作为useQuery的第一参数，react-query会通过该参数是否发生变化来判断是否要重新进行请求\r\n    async () => {\r\n      const objectFields = Object.values(objectSchema.fields)\r\n        .filter(({ hidden }) => !hidden)\r\n        .map(({ name }) => name)\r\n      return await API.requestRecords(\r\n        objectApiName as string,\r\n        filters,\r\n        objectFields\r\n      )\r\n    },\r\n    { enabled: !!objectSchema } //只有上边的schema加载好了，才启用下边的记录查询\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (records) {\r\n      setListData(records.value)\r\n    }\r\n  }, [records])\r\n\r\n  const handleItemClick = (record) => {\r\n    let tmpSelectedData = [...selectedData]\r\n    let isCheckedIndex = tmpSelectedData.findIndex(\r\n      ({ _id }) => _id == record._id\r\n    )\r\n    if (isCheckedIndex >= 0) {\r\n      tmpSelectedData.splice(isCheckedIndex, 1)\r\n    } else {\r\n      if (checkable) {\r\n        tmpSelectedData.push(record)\r\n      } else {\r\n        tmpSelectedData = [record]\r\n      }\r\n    }\r\n    setSelectedData(tmpSelectedData)\r\n    onChange && onChange(tmpSelectedData)\r\n  }\r\n\r\n  return (\r\n    <List\r\n      style={{ width: \"100%\" }}\r\n      dataSource={listData}\r\n      itemLayout=\"vertical\"\r\n      renderItem={(record: any) => {\r\n        return (\r\n          <List.Item\r\n            onClick={(e) => {\r\n              handleItemClick(record)\r\n            }}\r\n            className={\r\n              \"object-list-item \" +\r\n              (selectedData.some(({ _id }) => _id == record._id)\r\n                ? \"selected\"\r\n                : \"\")\r\n            }\r\n          >\r\n            {checkable ? (\r\n              <Checkbox\r\n                checked={selectedData.some(({ _id }) => _id == record._id)}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {/* <Button\r\n              type=\"text\"\r\n              style={{ width: \"100%\", textAlign: \"left\" }}\r\n              className={selectedData.some(({_id})=>_id==record._id)?\"selected\":\"\"}\r\n             \r\n            > */}\r\n            {record[nameField]}\r\n            {/* </Button> */}\r\n          </List.Item>\r\n        )\r\n      }}\r\n      {...rest}\r\n    ></List>\r\n  )\r\n})\r\n","/*\r\n该组件在ObjectTable的基础上,扩展了左侧内容.提供List和Tree两种形式展示\r\n通过columnFields里添加相关属性来驱动\r\n\r\n * @Author: Kent.Wood \r\n * @Date: 2021-03-25 22:35:51 \r\n * @Last Modified by: Kent.Wood\r\n * @Last Modified time: 2021-03-29 20:56:02\r\n */\r\n\r\nimport ProCard from \"@ant-design/pro-card\"\r\nimport _ from \"lodash\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\"\r\nimport { ActionType } from \"react-table\"\r\nimport { formatFiltersToODataQuery } from '@steedos/filters';\r\nimport \"./ObjectExpandTable.less\"\r\n\r\nimport {\r\n  ObjectContext,\r\n  ObjectList,\r\n  ObjectTable,\r\n  ObjectTableColumnProps,\r\n  ObjectTableProps,\r\n  ObjectTree,\r\n} from \"..\"\r\n\r\nexport type ObjectExpandTableColumnProps = {\r\n  expandType?: \"tree\" | \"list\" //两种扩展内容形式\r\n  expandReference?: string //针对树显示所使用的对象名.等于树的objectApiName\r\n  expandNameField?: string //树中用于显示的字段名\r\n  expandParentField?: string //树中对象的父级的字段名，默认是parent,只在expand为tree时有效\r\n  expandFilters?: [] | string //树中过滤条件\r\n} & ObjectTableColumnProps\r\n\r\nexport type ObjectExpandTableProps =\r\n  | ({\r\n      name?: string\r\n      //parentField: string //当前对象的父级对象，用于树形结构呈现时使用\r\n      onChange: ([any]) => void\r\n      columnFields: ObjectExpandTableColumnProps[]\r\n    } & ObjectTableProps<ObjectExpandTableColumnProps> & {\r\n        defaultClassName?: string\r\n      })\r\n  | any\r\n\r\nfunction getTableFilter(expandProps: any, selectedExpandNode: string[], defaultFilters: string | []) {\r\n  const expandKey = expandProps && expandProps.releatedColumnField;\r\n  let expandFilters: any;\r\n  if(expandKey && selectedExpandNode.length){\r\n    expandFilters = [expandKey, \"=\", selectedExpandNode];\r\n  }\r\n  if(expandFilters){\r\n    if(defaultFilters && defaultFilters.length){\r\n      if (_.isArray(defaultFilters)) {\r\n          return [defaultFilters, expandFilters]\r\n      }\r\n      else {\r\n          const odataExpandFilters = formatFiltersToODataQuery(expandFilters);\r\n          return `(${defaultFilters}) and (${odataExpandFilters})`;\r\n      }\r\n    }\r\n    else{\r\n      return expandFilters;\r\n    }\r\n  }\r\n  else{\r\n    return defaultFilters;\r\n  }\r\n}\r\n\r\nexport const ObjectExpandTable = observer((props: ObjectExpandTableProps) => {\r\n\r\n  const {\r\n    name: ObjectExpandTableId = \"default\",\r\n    filters,\r\n    // includeSub,\r\n    onChange,\r\n    ...rest\r\n  } = props\r\n\r\n  const [selectedExpandNode, setSelectedExpandNode] = useState([])\r\n\r\n  const handleExpandContentChange = (selectedNodes: object[], keyField?: string) => {\r\n    if(!keyField){\r\n      keyField = \"key\";\r\n    }\r\n    let tmpTreeNodes = []\r\n    selectedNodes.forEach((node) => {\r\n      tmpTreeNodes = [...tmpTreeNodes, node[keyField]]\r\n    })\r\n    tmpTreeNodes = _.uniq(tmpTreeNodes)\r\n    setSelectedExpandNode(tmpTreeNodes)\r\n    tableRef.current?.reload()\r\n  }\r\n\r\n  const handleTableRowChose = (selectedRowKeys, selectedRows) => {\r\n    // console.log(selectedRowKeys, selectedRows);\r\n    onChange && onChange(selectedRows)\r\n  }\r\n\r\n  const tableRef = useRef<ActionType>()\r\n\r\n  // 不懂为什么要加这个useEffect，加上的坏处是手机上切换到联系人列表后，切换顶部的联系人分类时会请求space_users数据\r\n  // 不加的话也没发现什么坏处，即手机和PC上从用户选项卡切换到联系人选项卡都能正常请求数据\r\n  // useEffect(() => {\r\n  //   tableRef.current?.reload()\r\n  // }, [tableRef.current])\r\n\r\n  const [expandProps, setExpandProps] = useState<{\r\n    type: string\r\n    objectApiName: string\r\n    nameField: string\r\n    parentField: string\r\n    releatedColumnField: string\r\n    filters?: string | []\r\n    }>(null)\r\n\r\n  useEffect(() => {\r\n    let expandDefine:\r\n      | {\r\n          expandType\r\n          expandReference\r\n          expandNameField\r\n          expandParentField\r\n          fieldName\r\n          filters\r\n        }\r\n      | any = props.columnFields.find(\r\n      ({\r\n        expandType,\r\n        expandReference,\r\n        expandNameField,\r\n        expandParentField,\r\n        fieldName,\r\n      }) => {\r\n        if (expandType) {\r\n          return {\r\n            expandType,\r\n            expandReference,\r\n            expandNameField,\r\n            expandParentField,\r\n            fieldName,\r\n          }\r\n        }\r\n      }\r\n    )\r\n\r\n    setExpandProps(\r\n      expandDefine && {\r\n        type: expandDefine.expandType,\r\n        objectApiName: expandDefine.expandReference,\r\n        nameField: expandDefine.expandNameField,\r\n        parentField: expandDefine.expandParentField,\r\n        releatedColumnField: expandDefine.fieldName,\r\n        filters: expandDefine.expandFilters\r\n      }\r\n    )\r\n  }, [props.columnFields])\r\n\r\n  // 当ObjectTable设置了scroll时，左右结构的宽度计算有问题，需要加样式额外处理宽度\r\n  const tablePartWidth = rest.scroll && expandProps && expandProps.type && \"calc(100% - 366px)\";\r\n\r\n  return (\r\n    <>\r\n      <ProCard\r\n        split=\"vertical\"\r\n        className={[\"object-expand-table\", rest.className].join(\" \")}\r\n      >\r\n        {expandProps && expandProps.type && (\r\n          <ProCard colSpan=\"340px\" className=\"expand-part\">\r\n            {expandProps.type == \"tree\" && (\r\n              <ObjectTree\r\n                {...expandProps}\r\n                onChange={(values: any)=>{\r\n                  handleExpandContentChange(values, \"key\");\r\n                }}\r\n              />\r\n            )}\r\n            {expandProps.type == \"list\" && (\r\n              <ObjectList\r\n                {...(() => {\r\n                  let {\r\n                    parentField,\r\n                    releatedColumnField,\r\n                    ...expandPropsRest\r\n                  } = expandProps\r\n                  return expandPropsRest\r\n                })()}\r\n                onChange={(values: any)=>{\r\n                  handleExpandContentChange(values, \"_id\");\r\n                }}\r\n              />\r\n            )}\r\n          </ProCard>\r\n        )}\r\n        <ProCard className=\"table-part\" colSpan={tablePartWidth} ghost>\r\n          <ObjectTable\r\n            {...rest}\r\n            filters={\r\n              getTableFilter(expandProps, selectedExpandNode, filters)\r\n            }\r\n            // manualRequest={true}\r\n            actionRef={tableRef}\r\n            onChange={handleTableRowChose}\r\n          />\r\n        </ProCard>\r\n      </ProCard>\r\n    </>\r\n  )\r\n})\r\n","/*\r\n这是一个带有输入框的组件,点了能够弹出ObjectTablePicker模式弹窗来\r\n它定义了value,onChange这两个和ant design的formItem兼容的属性\r\n * @Author: Kent.Wood \r\n * @Date: 2021-03-25 22:40:09 \r\n * @Last Modified by: Kent.Wood\r\n * @Last Modified time: 2021-03-26 12:22:50\r\n */\r\n\r\nimport { Button, Input, Select } from \"antd\"\r\nimport _ from \"lodash\"\r\nimport React, { useState } from \"react\"\r\nimport { PlusOutlined } from \"@ant-design/icons\"\r\nimport { ObjectTablePicker, ObjectTablePickerProps } from \"..\"\r\nconst { Option } = Select\r\n\r\nexport type SelectUserInputProps = {\r\n  value: any[]\r\n  inputLabelField: string | ((any) => string) //选出来的数据,如何渲染成输入框里的标签文本\r\n  onChange: ([any]) => void\r\n} & ObjectTablePickerProps\r\n\r\nexport const SelectUserInput = (props: SelectUserInputProps) => {\r\n  const { value, inputLabelField, onChange, ...rest } = props\r\n  const [selectedRecords, setSelectedRecords] = useState<any[]>(value)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Input.Group compact style={{ display: \"flex\" }}>\r\n        <Button\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setOpenPopup(true)}\r\n        ></Button>\r\n        <Select mode=\"tags\" style={{ flex: 1 }} value={selectedRecords}>\r\n          {selectedRecords &&\r\n            selectedRecords.map((item, i) => (\r\n              <Option key={i} value={item}>\r\n                {inputLabelField == undefined\r\n                  ? item\r\n                  : typeof inputLabelField == \"string\"\r\n                  ? item[inputLabelField]\r\n                  : typeof inputLabelField == \"function\"\r\n                  ? inputLabelField(item)\r\n                  : item}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n      </Input.Group>\r\n\r\n      <ObjectTablePicker\r\n        show={openPopup}\r\n        {...rest}\r\n        onClose={() => setOpenPopup(false)}\r\n        onChange={(emails) => {\r\n          setSelectedRecords([...selectedRecords, ...emails])\r\n        }}\r\n      ></ObjectTablePicker>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext, useRef, useEffect, useState } from \"react\"\r\nimport _ from \"lodash\"\r\nimport { ObjectTable } from \"./\"\r\nimport {\r\n  ProColumnType\r\n} from \"@ant-design/pro-table\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { Objects, API, Settings } from \"@steedos/builder-store\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { getObjectRecordUrl } from \"../utils\"\r\n\r\nexport type ObjectListViewColumnProps = {\r\n  fieldName: string\r\n} & ProColumnType\r\n\r\nexport type ObjectListViewProps<T extends ObjectListViewColumnProps> =\r\n  | ({\r\n      name?: string\r\n      objectApiName?: string\r\n      listName?: string\r\n      columnFields?: T[],\r\n      filters?: [] | string\r\n      onChange?: ([any]) => void\r\n      // filterableFields?: [string]\r\n    } & {\r\n      defaultClassName?: string\r\n    })\r\n  | any\r\n\r\nexport const getObjectListViewProColumn = (field: any) => {\r\n  // 把yml中的某个字段field转成ant的ProTable中的columns属性项\r\n  if (!field) {\r\n    return null\r\n  }\r\n\r\n  const fieldType: string = field.type\r\n  let proColumnProps: any = {\r\n    title: field.label,\r\n    dataIndex: field.name,\r\n    formItemProps: {},\r\n    fieldProps: {\r\n      field_schema: field\r\n    },\r\n  }\r\n  if (field.required) {\r\n    proColumnProps.formItemProps.required = true\r\n  }\r\n\r\n  if (field.sortable) {\r\n    proColumnProps.sorter = {\r\n        multiple: 1\r\n    };\r\n  }\r\n\r\n  proColumnProps.valueType = fieldType\r\n  \r\n  return proColumnProps\r\n}\r\n\r\nfunction getListViewFilters(listView, props){\r\n  let { filters, filter_scope, master } = props;\r\n  if(!filters){\r\n    filters = listView.filters;\r\n  }\r\n  if(_.isFunction(filters)){\r\n    try {\r\n      filters = filters()\r\n    } catch (error) {\r\n      console.warn(`list view filter error: `, error)\r\n    }\r\n  }\r\n  filters = _.isFunction(filters) ? [] : filters;\r\n  if(!filter_scope){\r\n    filter_scope = listView.filter_scope;\r\n  }\r\n  if(filter_scope === \"mine\"){\r\n    const filtersOwner=[[\"owner\", \"=\", API.client.getUserId()]];\r\n    if(filters && filters.length){\r\n      filters = [filtersOwner, filters];\r\n    }\r\n    else{\r\n      filters = filtersOwner;\r\n    }\r\n  }\r\n\r\n  if(master){\r\n    filters = [[master.relatedFieldApiName, \"=\", master.recordId], filters];\r\n  }\r\n\r\n  return filters;\r\n}\r\n\r\nfunction getListviewColumns(objectSchema: any, listName: any){\r\n  let listView = objectSchema.list_views[listName];\r\n  let listViewColumns = listView && listView.columns;\r\n  if(!listViewColumns){\r\n    listView = objectSchema.list_views.default;\r\n    listViewColumns = listView && listView.columns;\r\n    if(!listViewColumns){\r\n      listViewColumns = [objectSchema.NAME_FIELD_KEY]\r\n    }\r\n  }\r\n  return listViewColumns;\r\n}\r\n\r\nfunction getListViewColumnFields(listViewColumns: any, props: any, nameFieldKey: string){\r\n  let { columnFields = [], master } = props;\r\n  if (columnFields.length === 0) {\r\n    _.forEach(listViewColumns, (column: any) => {\r\n      const fieldName: string = _.isObject(column) ? (column as any).field : column;\r\n      let columnOption: any = { fieldName };\r\n      if(fieldName === nameFieldKey){\r\n        columnOption.render = (dom: any, record: any)=>{\r\n          return (<Link to={getObjectRecordUrl(props.objectApiName, record._id)} className=\"text-blue-600 hover:text-blue-500 hover:underline\">{dom}</Link>);\r\n        }\r\n      }\r\n      columnFields.push(columnOption)\r\n    })\r\n  }\r\n  //作为相关表时，不显示关系键\r\n  if(master){\r\n    return _.filter(columnFields, (columnField)=>{\r\n      if(_.isString(columnField)){\r\n        return columnField != master.relatedFieldApiName\r\n      }\r\n      return columnField.fieldName != master.relatedFieldApiName\r\n    })\r\n  }\r\n  return columnFields;\r\n}\r\n\r\nexport const ObjectListView = observer((props: ObjectListViewProps<any>) => {\r\n  let {\r\n    objectApiName,\r\n    listName = \"all\",\r\n    ...rest\r\n  } = props\r\n  const object = Objects.getObject(objectApiName);\r\n  if (object.isLoading) return (<div>Loading object ...</div>)\r\n  const schema = object.schema; \r\n  let listView = schema.list_views[listName];\r\n  const listViewColumns = getListviewColumns(schema, listName);\r\n  const columnFields = getListViewColumnFields(listViewColumns, props, schema.NAME_FIELD_KEY);\r\n  const filters = getListViewFilters(listView, props);\r\n\r\n  return (\r\n    <ObjectTable\r\n      objectApiName={objectApiName}\r\n      columnFields={columnFields}\r\n      filters={filters}\r\n      // className={[\"object-listview\", rest.className].join(\" \")}\r\n      {...rest}\r\n    />\r\n  )\r\n})","\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nexport const Iframe = observer((props:any) => {\r\n  return (\r\n    <iframe {...props}/>\r\n  )\r\n});","import React, { useContext, useRef, useEffect, useState, useImperativeHandle, forwardRef } from \"react\"\r\nimport _ from \"lodash\"\r\nimport ProField from \"@ant-design/pro-field\";\r\n\r\nexport const AgGridCellEditor = forwardRef((props: any, ref) => {\r\n  const { \r\n    valueType = 'text',\r\n    fieldSchema\r\n  } = props;\r\n  const [value, setValue] = useState(props.value);\r\n\r\n  /* Component Editor Lifecycle methods */\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n        getValue() {\r\n            return value;\r\n        },\r\n        isPopup() {\r\n          return true;\r\n        }\r\n    };\r\n  });\r\n  \r\n  return (\r\n    <section className=\"slds-popover slds-popover slds-popover_edit\" role=\"dialog\">\r\n      <div className=\"slds-popover__body\">\r\n        <ProField \r\n          mode='edit'\r\n          valueType={valueType} \r\n          value={value}\r\n          onChange={(newValue)=>{\r\n            if (newValue?.currentTarget?.value)\r\n              setValue(newValue?.currentTarget?.value)\r\n            else\r\n              setValue(newValue)\r\n          }}\r\n          fieldProps={{\r\n            field_schema: fieldSchema\r\n          }}\r\n          />\r\n      </div>\r\n    </section>\r\n  ) \r\n});\r\n  ","\r\nimport React, { useContext, useRef, useEffect, useState, useImperativeHandle, forwardRef } from \"react\"\r\nimport _ from \"lodash\"\r\nimport ProField from \"@ant-design/pro-field\";\r\n\r\nexport const AgGridCellRenderer = (props: any) => {\r\n  const { \r\n    value, \r\n    valueType = 'text',\r\n    fieldSchema,\r\n  } = props;\r\n  return (\r\n    \r\n    <ProField \r\n      mode='read'\r\n      valueType={valueType} \r\n      fieldProps={{\r\n        field_schema: fieldSchema\r\n      }}\r\n      text={value}\r\n      emptyText=''\r\n      />\r\n  ) \r\n}\r\n","\r\nimport React, { useContext, useRef, useEffect, useState, useImperativeHandle, forwardRef } from \"react\"\r\nimport _ from \"lodash\"\r\nimport ProField from \"@ant-design/pro-field\";\r\n\r\nexport const AgGridCellFilter = forwardRef((props:any, ref) => {\r\n  const { \r\n    value: initialValue,\r\n    valueType = 'text',\r\n    fieldSchema,\r\n  } = props;\r\n  const [filter, setFilter] = useState(initialValue);\r\n\r\n  // expose AG Grid Filter Lifecycle callbacks\r\n  useImperativeHandle(ref, () => {\r\n      return {\r\n          // doesFilterPass(params) {\r\n          // },\r\n\r\n          isFilterActive() {\r\n            return !!filter\r\n          },\r\n\r\n          // this example isn't using getModel() and setModel(),\r\n          // so safe to just leave these empty. don't do this in your code!!!\r\n          getModel() {\r\n            if (!!filter)\r\n              return {\r\n                filterType: valueType,\r\n                type: 'equals',\r\n                filter,\r\n              }\r\n          },\r\n\r\n          setModel() {\r\n          }\r\n      }\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.filterChangedCallback()\r\n  }, [filter]);\r\n\r\n  return (\r\n    <div style={{padding:5}}>\r\n      <ProField \r\n        mode='edit'\r\n        valueType={valueType} \r\n        fieldProps={{\r\n          field_schema: fieldSchema\r\n        }}\r\n        onChange={(value)=>{\r\n          setFilter(value)\r\n        }}\r\n        text={initialValue}\r\n        emptyText=''\r\n      />\r\n    </div>\r\n  )\r\n});","import React, { useContext, useRef, useEffect, useState, useImperativeHandle, forwardRef } from \"react\"\r\nimport _ from \"lodash\"\r\nimport ProField from \"@ant-design/pro-field\";\r\nimport { formatFiltersToODataQuery } from '@steedos/filters';\r\nimport useAntdMediaQuery from 'use-media-antd-query';\r\nimport { SortOrder } from \"antd/es/table/interface\"\r\nimport { ParamsType } from \"@ant-design/pro-provider\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { Objects, API } from \"@steedos/builder-store\"\r\nimport { getObjectRecordUrl } from \"../utils\"\r\nimport { Spin } from 'antd';\r\nimport {AgGridColumn, AgGridReact} from '@ag-grid-community/react';\r\nimport { ServerSideRowModelModule } from '@ag-grid-enterprise/server-side-row-model';\r\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\r\nimport { ServerSideStoreType } from '@ag-grid-enterprise/all-modules';\r\nimport Dropdown from '@salesforce/design-system-react/components/menu-dropdown'; \r\nimport Button from '@salesforce/design-system-react/components/button'; \r\nimport { AgGridCellEditor } from \"./ag-grid/CellEditor\";\r\nimport { AgGridCellRenderer } from \"./ag-grid/CellRender\";\r\nimport { AgGridCellFilter } from \"./ag-grid/CellFilter\";\r\n\r\nexport type ObjectGridColumnProps = {\r\n  fieldName: string\r\n} \r\n\r\nexport type ObjectGridProps<T extends ObjectGridColumnProps> =\r\n  | ({\r\n      name?: string\r\n      objectApiName?: string\r\n      columnFields?: T[]\r\n      filters?: [] | string\r\n      sort?: [] | string\r\n      onChange?: ([any]) => void\r\n      // filterableFields?: [string]\r\n    } & {\r\n      defaultClassName?: string\r\n    })\r\n  | any\r\n\r\n// export const getObjectGridProColumn = (field: any, columnOption?: any) => {\r\n//   // 把yml中的某个字段field转成ant的ProTable中的columns属性项\r\n//   if (!field) {\r\n//     return null\r\n//   }\r\n\r\n//   const fieldType: string = field.type\r\n//   let proColumnProps: any = {\r\n//     title: field.label,\r\n//     dataIndex: field.name,\r\n//     formItemProps: {},\r\n//     fieldProps: {\r\n//       field_schema: field\r\n//     }\r\n//   }\r\n//   if (field.required) {\r\n//     proColumnProps.formItemProps.required = true\r\n//   }\r\n\r\n//   if (field.sortable) {\r\n//     proColumnProps.sorter = {\r\n//         multiple: 1\r\n//     };\r\n//   }\r\n\r\n//   proColumnProps.valueType = fieldType\r\n\r\n//   if(columnOption){\r\n//     proColumnProps = Object.assign({}, proColumnProps, columnOption);\r\n//   }\r\n  \r\n//   return proColumnProps\r\n// }\r\n\r\nconst checkFieldTypeSupportBetweenQuery = (type: string)=> {\r\n  return false;\r\n  // return [\"date\", \"datetime\", \"currency\", \"number\"].includes(type);\r\n}\r\n\r\nconst getFieldDefaultOperation = (type: any)=>{\r\n\tif(type && checkFieldTypeSupportBetweenQuery(type)){\r\n\t\treturn 'between';\r\n  }\r\n\telse if([\"textarea\", \"text\", \"code\"].includes(type)){\r\n\t\treturn 'contains'\r\n  }\r\n\telse{\r\n\t\treturn \"=\"\r\n  }\r\n}\r\n\r\nfunction getDefaultSortOrder(fieldName: any, sort:any){\r\n  let sortDirection:any;\r\n  let sortValue: any;\r\n  if (sort) {\r\n    if (typeof sort === 'string' && sort.length > 0) {\r\n      let arr = [];\r\n      arr = sort.split(',');\r\n      sortValue = _.map(arr, (value, key) => {\r\n        if (value.indexOf(' ')) {\r\n          return arr[key] = value.split(' ');\r\n        } else {\r\n          return arr[key] = [value]\r\n        }\r\n      })\r\n    } else {\r\n      sortValue = sort;\r\n    }\r\n    if (sortValue.length > 0) {\r\n      _.forEach(sortValue, (ele) => {\r\n        if (ele[0] === fieldName) {\r\n          sortDirection = ele[1] === 'desc' ? 'descend' : 'ascend';\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return sortDirection;\r\n}\r\n\r\n\r\nconst RowActions = (props: any) => {\r\n  return (\r\n    <Dropdown\r\n      assistiveText={{ icon: 'Options' }}\r\n      iconCategory=\"utility\"\r\n      iconName=\"down\"\r\n      iconVariant=\"border-filled\"\r\n      iconSize='x-small'\r\n      width='x-small'\r\n      menuPosition=\"overflowBoundaryElement\"\r\n      onSelect={(option) => {\r\n        if (option.value === 'delete') {\r\n          // deleteRow(props)\r\n        }\r\n      }}\r\n      options={[\r\n        { label: '删除', value: 'delete' }\r\n      ]}\r\n    />\r\n  )\r\n}\r\n\r\nexport const ObjectGrid = observer((props: ObjectGridProps<any>) => {\r\n\r\n  const {\r\n    objectApiName,\r\n    columnFields = [],\r\n    filters: defaultFilters,\r\n    sort,\r\n    defaultClassName,\r\n    onChange,\r\n    toolbar,\r\n    ...rest\r\n  } = props\r\n\r\n  const [totalRecords, setTotalRecords] = useState(0)\r\n\r\n  const colSize = useAntdMediaQuery();\r\n  const isMobile = (colSize === 'sm' || colSize === 'xs') && !props.disableMobile;\r\n\r\n  const object = Objects.getObject(objectApiName);\r\n  if (object.isLoading) return (<div><Spin/></div>)\r\n  // const selfTableRef = useRef(null)\r\n\r\n  // let defaultSort: any = {};\r\n  // const proColumns = []\r\n  // if (object.schema && object.schema.fields) {\r\n  //   _.forEach(\r\n  //     columnFields,\r\n  //     ({ fieldName, ...columnItem }: ObjectGridColumnProps) => {\r\n  //       if (columnItem.hideInTable) return\r\n  //       let columnOption: any = {};\r\n  //       const defaultSortOrder = getDefaultSortOrder(fieldName,sort)\r\n  //       if(defaultSortOrder){\r\n  //         columnOption.defaultSortOrder = defaultSortOrder;\r\n  //         defaultSort[fieldName] = defaultSortOrder;\r\n  //       }\r\n  //       const  proColumn = getObjectGridProColumn(object.schema.fields[fieldName], columnOption)\r\n  //       if (proColumn) {\r\n  //         proColumns.push({ ...proColumn, ...columnItem })\r\n  //       }\r\n  //     }\r\n  //   )\r\n  // }\r\n\r\n// const request = async (\r\n//     params: any & {\r\n//       pageSize?: number\r\n//       current?: number\r\n//       keyword?: string\r\n//     },\r\n//     sort: Record<string, SortOrder>,\r\n//     filter: Record<string, React.ReactText[]>\r\n//   ): Promise<any> => {\r\n\r\n//     // 第一个参数 params 查询表单和 params 参数的结合\r\n//     // 第一个参数中一定会有 pageSize 和  current ，这两个参数是 antd 的规范\r\n//     // 这里需要返回一个 Promise,在返回之前你可以进行数据转化\r\n//     // 如果需要转化参数可以在这里进行修改\r\n//     /*\r\n//     const msg = await myQuery({\r\n//       page: params.current,\r\n//       pageSize: params.pageSize,\r\n//     });\r\n//     return {\r\n//       data: msg.result,\r\n//       // success 请返回 true，\r\n//       // 不然 table 会停止解析数据，即使有数据\r\n//       success: boolean,\r\n//       // 不传会使用 data 的长度，如果是分页一定要传\r\n//       total: number,\r\n//     };\r\n//     */\r\n\r\n//     const { current, pageSize, ...searchFilters } = params\r\n//     let filters: any = [], keyFilters: any = [];\r\n//     //searchFilters中包括params中自定义参数及顶部搜索框字段参数，字段名不可能是__开头，所以params中自定义参数以__开头可区分它们\r\n//     const {__objectApiName, __columnFields, __defaultFilters, ...restFilters} = searchFilters;\r\n//     keyFilters = Object.keys(restFilters).map((key) => {\r\n//       const field = object.schema.fields[key];\r\n//       return [key, getFieldDefaultOperation(field && field.type), searchFilters[key]];\r\n//     });\r\n    \r\n//     if (__defaultFilters && __defaultFilters.length) {\r\n//       if(keyFilters && keyFilters.length){\r\n//         if (_.isArray(__defaultFilters)) {\r\n//             filters = [__defaultFilters, keyFilters]\r\n//         }\r\n//         else {\r\n//             const odataKeyFilters = formatFiltersToODataQuery(keyFilters);\r\n//             filters = `(${__defaultFilters}) and (${odataKeyFilters})`;\r\n//         }\r\n//       }\r\n//       else{\r\n//         filters = __defaultFilters;\r\n//       }\r\n//     }\r\n//     else{\r\n//       filters = keyFilters;\r\n//     }\r\n\r\n//     // TODO: 这里antd的request请求函数与ObjectGrid组件传入的filters,sort等格式不一样，需要转换处理\r\n//     const fields = __columnFields.map((n: any) => {\r\n//       return n.fieldName\r\n//     })\r\n//     // TODO: ant.design的bug（defaultSortOrder 和 sorter存在时sort没获取到设置的初始值），所以这里\r\n//     // 设置下sort的初始值， 后期修复这个bug后以下三行代码可以 删除。\r\n//     if(_.isEmpty(sort) && !_.isEmpty(defaultSort)){\r\n//       sort = defaultSort;\r\n//     }\r\n//     const result = await API.requestRecords(\r\n//       __objectApiName,\r\n//       filters,\r\n//       fields,\r\n//       {\r\n//         pageSize: params.pageSize as number,\r\n//         current: params.current as number,\r\n//         sort: sort\r\n//           ? Object.keys(sort).map((sk) => [\r\n//               sk,\r\n//               sort[sk] == \"ascend\" ? \"asc\" : \"desc\",\r\n//             ])\r\n//           : [],\r\n//       }\r\n//     )\r\n//     setTotalRecords(result[\"@odata.count\"])\r\n//     return {\r\n//       data: result.value,\r\n//       success: true,\r\n//       total: result[\"@odata.count\"],\r\n//     }\r\n//   }\r\n\r\n  const getDataSource = () => {\r\n    return {\r\n        // called by the grid when more rows are required\r\n        getRows: params => {\r\n\r\n            // // get data for request from server\r\n            // const response = server.getData(params.request);\r\n\r\n            // if (response.success) {\r\n            //     // supply rows for requested block to grid\r\n            //     params.success({\r\n            //         rowData: response.rows\r\n            //     });\r\n            // } else {\r\n            //     // inform grid request failed\r\n            //     params.fail();\r\n            // }\r\n            console.log(params)\r\n            const fields = ['name']\r\n            _.forEach(columnFields, ({ fieldName, ...columnItem }: ObjectGridColumnProps) => {\r\n              fields.push(fieldName)\r\n            });\r\n            const sort = []\r\n            _.forEach(params.request.sortModel, (sortField)=>{\r\n              sort.push([sortField.colId, sortField.sort])\r\n            })\r\n            const filters = defaultFilters;\r\n            // TODO 此处需要叠加处理 params.request.fieldModel\r\n            API.requestRecords(\r\n              objectApiName,\r\n              filters,\r\n              fields,{\r\n                current: params.request.startRow,\r\n                sort,\r\n              }).then((data)=>{\r\n\r\n                params.success({\r\n                  rowData: data.value,\r\n                  rowCount: data['@odata.count']\r\n                });\r\n            })\r\n        }\r\n    };\r\n  }\r\n\r\n  // const search = isMobile? false : {\r\n  //   filterType: 'light',\r\n  // }\r\n\r\n  const getColumns = ()=>{\r\n\r\n    const columns:any[] = [{\r\n      resizable: false,\r\n      width: 35,\r\n      maxWidth: 35,\r\n      minWidth: 35,\r\n      checkboxSelection: true,\r\n      headerCheckboxSelection: true,\r\n      suppressMenu: true,\r\n    }];\r\n    _.forEach(columnFields, ({ fieldName, ...columnItem }: ObjectGridColumnProps) => {\r\n      const field = object.schema.fields[fieldName]\r\n      let filter:any = true\r\n      let filterParams:any = {}\r\n      let rowGroup = false //[\"select\", \"lookup\"].includes(field.type)\r\n      if ([\"textarea\", \"text\", \"code\"].includes(field.type)) {\r\n        filter = 'agTextColumnFilter'\r\n      }\r\n      else if ([\"number\", \"percent\", \"currency\"].includes(field.type)) {\r\n        filter = 'agNumberColumnFilter'\r\n      }\r\n      else {\r\n        filter = 'AgGridCellFilter',\r\n        filterParams = {\r\n          fieldSchema: field,\r\n          valueType: field.type,\r\n          multiple: true\r\n        }\r\n      }\r\n      columns.push({\r\n        field: fieldName,\r\n        headerName: field.label?field.label:fieldName,\r\n        width: field.is_wide? 300: 150,\r\n        minWidth: field.is_wide? 300: 150,\r\n        resizable: true,\r\n        filter,\r\n        filterParams,\r\n        rowGroup,\r\n        flex: 1,\r\n        sortable: true,\r\n        cellRenderer: 'AgGridCellRenderer',\r\n        cellRendererParams: {\r\n          fieldSchema: field,\r\n          valueType: field.type,\r\n        },\r\n        cellEditor: 'AgGridCellEditor',\r\n        cellEditorParams: {\r\n          fieldSchema: field,\r\n          valueType: field.type,\r\n        },\r\n        // key: fieldName,\r\n        // dataIndex: fieldName,\r\n        // title: field.label?field.label:fieldName,\r\n        // valueType: field.type,\r\n        editable: !field.readonly,\r\n      })\r\n    });\r\n    // 操作按钮\r\n    columns.push({\r\n      width: 50,\r\n      maxWidth: 50,\r\n      minWidth: 50,\r\n      resizable: false,\r\n      cellRenderer: 'rowActions',\r\n      cellEditor: 'rowActions',\r\n      suppressMenu: true,\r\n    });\r\n    return columns\r\n  }\r\n\r\n  // return (\r\n  //   <ProTable\r\n  //     request={request}\r\n  //     columns={proColumns}\r\n  //     rowKey={rest.rowKey || \"_id\"}\r\n  //     rowSelection={rest.rowSelection || { onChange }}\r\n  //     pagination={{ ...rest.pagination, hideOnSinglePage: true }}\r\n  //     columnEmptyText={false}\r\n  //     actionRef={rest.actionRef || selfTableRef}\r\n  //     onChange={() => {\r\n  //       ;(rest.actionRef || selfTableRef).current.reload()\r\n  //     }}\r\n  //     params={{\r\n  //       __objectApiName: objectApiName,\r\n  //       __columnFields: columnFields,\r\n  //       __defaultFilters: defaultFilters,\r\n  //     }}\r\n  //     search={search}\r\n  //     toolbar={Object.assign({}, {\r\n  //       subTitle: `${totalRecords} 个项目`\r\n  //     }, toolbar)}\r\n  //     size=\"small\"\r\n  //     className={[\"object-table\", rest.className].join(\" \")}\r\n  //     {...rest}\r\n  //   />\r\n  // )\r\n  return (\r\n\r\n    <div className=\"ag-theme-balham\" style={{height: 500}}>\r\n      <AgGridReact\r\n        columnDefs={getColumns()}\r\n        rowModelType='serverSide'\r\n        pagination={true}\r\n        paginationPageSize={50}\r\n        rowSelection='multiple'\r\n        modules={AllModules}\r\n        stopEditingWhenGridLosesFocus={true}\r\n        serverSideDatasource={getDataSource()}\r\n        serverSideStoreType={ServerSideStoreType.Partial}\r\n        sideBar='filters'\r\n        frameworkComponents = {{\r\n          AgGridCellRenderer: AgGridCellRenderer,\r\n          AgGridCellEditor: AgGridCellEditor,\r\n          AgGridCellFilter: AgGridCellFilter,\r\n          rowActions: RowActions,\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n})\r\n","\r\nimport React from \"react\";\r\nimport { RequestData } from \"@ant-design/pro-table\";\r\n\r\nexport type RecordQueryRequestParams = {\r\n  pageSize: number,\r\n  current: number,\r\n  sort: any\r\n  // filter: any\r\n} \r\n\r\nconst defaultRequestObject = async ( objectApiName:string) =>{\r\n  throw new Error(`requestObject ${objectApiName} failed, you should impl this function in ObjectProvider.`)\r\n}\r\n\r\nconst defaultRequestRecords = async ( objectApiName:string, filters:any, fields:any, params?: RecordQueryRequestParams ) =>{\r\n  throw new Error(`requestRecords ${objectApiName} failed, you should impl this function in ObjectProvider.`)\r\n}\r\n\r\nconst defaultUpdateRecord = async (objectApiName:string, objectRecordId:string, formData:any) =>{\r\n  throw new Error(`submitForm ${objectApiName} update id: ${objectRecordId} failed, you should impl this function in ObjectProvider.`)\r\n}\r\n\r\nconst defaultInsertRecord = async (objectApiName:string, formData:any) =>{\r\n  throw new Error(`submitForm ${objectApiName} add record failed, you should impl this function in ObjectProvider.`)\r\n}\r\n\r\nexport type ObjectContextValueType = {\r\n  locale?: string,\r\n  queryClient?: any,\r\n  requestObject: ( objectApiName:string) => Promise<object | Error>\r\n  requestRecords: <T extends Record<string, any>>( objectApiName:string, filters:any, fields:any, params?: RecordQueryRequestParams ) => Promise<Partial<RequestData<T>>>\r\n  updateRecord: (objectApiName:string, objectRecordId:string, formData:any ) => Promise<object | Error>\r\n  insertRecord: (objectApiName:string, formData:any ) => Promise<object | Error>\r\n}\r\n\r\nexport const ObjectContext = React.createContext<ObjectContextValueType>({\r\n  requestObject: defaultRequestObject,\r\n  requestRecords: defaultRequestRecords,\r\n  updateRecord: defaultUpdateRecord,\r\n  insertRecord: defaultInsertRecord\r\n});\r\n","import React from 'react'\r\nimport ProField from \"@ant-design/pro-field\";\r\nimport { CheckIcon } from '@chakra-ui/icons'\r\n\r\nexport const boolean = {\r\n  render: (text: any, props: any)=> {\r\n    if (text) \r\n      return (<CheckIcon/>)\r\n    else \r\n      return (<span></span>);    \r\n  },\r\n  renderFormItem: (_: any, props: any) => {\r\n    return (\r\n      <ProField mode='edit' valueType='switch' {...props} />\r\n    )\r\n  },\r\n}\r\n\r\n","import React from 'react';\r\nimport ProField from \"@ant-design/pro-field\";\r\n\r\n// 数值类型字段\r\n// value 值为数字\r\n// 编辑和显示时需要处理小数位数\r\nexport const currency = {\r\n  render: (text: any, props: any) => {\r\n    return (\r\n      <ProField mode='read' valueType='digit' {...props} />\r\n    )\r\n  },\r\n  renderFormItem: (_: any, props: any) => {\r\n    return (\r\n      <ProField mode='edit' valueType='digit' {...props} />\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ProField from \"@ant-design/pro-field\";\r\n\r\n// 日期时间类型字段\r\n// value 值为GMT标准时间\r\nexport const datetime = {\r\n  render: (text: any, props: any) => {\r\n    return (\r\n      <ProField mode='read' valueType='dateTime' {...props} />\r\n    )\r\n  },\r\n  renderFormItem: (_: any, props: any) => {\r\n    return (\r\n      <ProField mode='edit' valueType='dateTime' {...props} />\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport ProField from \"@ant-design/pro-field\";\r\n\r\nexport const email = {\r\n  render: (text: any, { fieldProps }: any)=> {\r\n    const link = \"mailto:\" + text;\r\n    return (<a href={link}>{text}</a>)\r\n  },\r\n  renderFormItem: (_: any, props: any) => (\r\n    <ProField mode='edit' valueType='text' {...props} />\r\n  ),\r\n}\r\n\r\n","import React from 'react';\r\nimport ProField from \"@ant-design/pro-field\";\r\n\r\n// 数值类型字段\r\n// value 值为数字\r\n// 编辑和显示时需要处理小数位数\r\nexport const number = {\r\n  render: (text: any, props: any) => {\r\n    return (\r\n      <ProField mode='read' valueType='digit' {...props} />\r\n    )\r\n  },\r\n  renderFormItem: (_: any, props: any) => {\r\n    return (\r\n      <ProField mode='edit' valueType='digit' {...props} />\r\n    )\r\n  }\r\n}","import React, { Fragment, useMemo } from 'react';\r\n\r\nimport toNumber from 'lodash.tonumber';\r\nimport ProField from \"@ant-design/pro-field\";\r\n\r\n// 百分比类型字段\r\n// value 值为数字\r\n// 编辑和显示时需要处理小数位数\r\nexport const percent = {\r\n  render: (text: any, props: any) => {\r\n\r\n    const realValue = useMemo(\r\n      () =>\r\n        typeof text === 'string' && (text as string).includes('%')\r\n          ? 100*toNumber((text as string).replace('%', ''))\r\n          : 100*toNumber(text),\r\n      [text],\r\n    );\r\n    return (\r\n      <span>{realValue}%</span>\r\n    )\r\n  },\r\n  renderFormItem: (_: any, props: any) => {\r\n    return (\r\n      <ProField mode='edit' valueType='digit' {...props} />\r\n    )\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport { isFunction, filter,} from 'lodash';\r\nimport FieldSelect from '@ant-design/pro-field/es/components/Select';\r\n\r\nexport const select = {\r\n  render: (text: any, props: any)=> {\r\n    const { valueType, mode, fieldProps, ...rest } = props;\r\n    const { field_schema: fieldSchema = {},depend_field_values: dependFieldValues={} } = fieldProps;\r\n    let tags:any;\r\n    let options = fieldSchema.optionsFunction ? fieldSchema.optionsFunction : fieldSchema.options ;\r\n    options = isFunction(options) ? options(dependFieldValues) : options;\r\n    const value = fieldProps.value || props.text;//ProTable那边fieldProps.value没有值，只能用text\r\n    tags = filter(options,(optionItem: any)=>{\r\n        return fieldSchema.multiple ? value.indexOf(optionItem.value) > -1 : optionItem.value === value;\r\n    })\r\n    return (<React.Fragment>{tags.map((tagItem, index)=>{return (\r\n        <React.Fragment key={tagItem.value}>\r\n            {index > 0 && ', '}\r\n            { (tagItem.label) }\r\n        </React.Fragment>\r\n    )})}</React.Fragment>)\r\n  },\r\n  renderFormItem: (text: any, props: any) => {\r\n    const [params, setParams] = useState({open: false,openTag: null});\r\n    const { fieldProps={} } = props;\r\n    const { field_schema: fieldSchema = {},depend_field_values: dependFieldValues={} } = fieldProps;\r\n    const { multiple ,optionsFunction} = fieldSchema;\r\n    let options = optionsFunction ? optionsFunction : fieldSchema.options;\r\n    if (multiple){\r\n      fieldProps.mode = 'multiple';\r\n    }\r\n    let proFieldProps:any = {};\r\n    let request:any;\r\n    let onDropdownVisibleChange:any;\r\n\r\n    if(isFunction(options)){\r\n      request = async (params: any, props: any) => {\r\n        dependFieldValues.__keyWords = params.keyWords;\r\n        const results = await options(dependFieldValues);\r\n        return results;\r\n      };\r\n      onDropdownVisibleChange = (open: boolean) => {\r\n        if (open) {\r\n            setParams({ open, openTag: new Date() });\r\n        }\r\n      }\r\n      proFieldProps = {\r\n        request,\r\n        params,\r\n        onDropdownVisibleChange,\r\n      }\r\n    }else if(options){\r\n      //options为空时不能直接覆盖fieldProps.options中的值，因为要允许直接给控件fieldProps.options赋值\r\n      props.fieldProps.options = options;\r\n    }\r\n    proFieldProps.showSearch=true;\r\n    proFieldProps.optionFilterProp='label';\r\n    // TODO: multiple：如果是true, 后期 需要 支持对已选中项进行拖动排序\r\n    return (\r\n      <FieldSelect mode='edit' {...props} {...proFieldProps} />\r\n    )\r\n  },\r\n}","import React from 'react'\r\nimport ProField from \"@ant-design/pro-field\";\r\nimport { CheckIcon } from '@chakra-ui/icons'\r\n\r\nexport const toggle = {\r\n  render: (text: any, props: any)=> {\r\n    if (text) \r\n      return (<CheckIcon/>)\r\n    else \r\n      return (<span></span>);    \r\n  },\r\n  renderFormItem: (_: any, props: any) => {\r\n    return (\r\n      <ProField mode='edit' valueType='switch' {...props} />\r\n    )\r\n  },\r\n}\r\n\r\n","import React from 'react'\r\nimport { Field } from \"@steedos/builder-form\";\r\n\r\nexport const url = {\r\n  render: (text: any, { fieldProps }: any)=> {\r\n    return (<a href={text}>{text}</a>)\r\n  },\r\n  renderFormItem: (_: any, props: any) => (\r\n    <Field mode='edit' type='text' {...props} />\r\n  ),\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport AppLauncher from '@salesforce/design-system-react/components/app-launcher'; \r\nimport AppLauncherLink from '@salesforce/design-system-react/components/app-launcher/link';\r\nimport AppLauncherTile from '@salesforce/design-system-react/components/app-launcher/tile';\r\nimport AppLauncherExpandableSection from '@salesforce/design-system-react/components/app-launcher/expandable-section';\r\n\r\nimport GlobalNavigationBar from '@salesforce/design-system-react/components/global-navigation-bar';\r\nimport GlobalNavigationBarRegion from '@salesforce/design-system-react/components/global-navigation-bar/region';\r\n\r\nimport Button from '@salesforce/design-system-react/components/button';\r\nimport Search from '@salesforce/design-system-react/components/input/search';\r\nimport IconSettings from '@salesforce/design-system-react/components/icon-settings';\r\nimport actionSprite from '@salesforce-ux/design-system/assets/icons/action-sprite/svg/symbols.svg';\r\nimport customSprite from '@salesforce-ux/design-system/assets/icons/custom-sprite/svg/symbols.svg';\r\nimport standardSprite from '@salesforce-ux/design-system/assets/icons/standard-sprite/svg/symbols.svg';\r\nimport utilitySprite from '@salesforce-ux/design-system/assets/icons/utility-sprite/svg/symbols.svg';\r\nimport Icon from '@salesforce/design-system-react/components/icon'; \r\nimport { each, unionBy, filter} from 'lodash';\r\n\r\nfunction getTabs(apps){\r\n\tlet tabs = [];\r\n\teach(apps, function(app){\r\n\t\teach(app.children, (tab)=>{\r\n\t\t\ttabs.push(Object.assign({}, tab, {appApiName: app.id}))\r\n\t\t})\r\n\t})\r\n\treturn unionBy(tabs, \"id\");;\r\n}\r\n\r\nexport class SteedosAppLauncher extends React.Component {\r\n\tstatic displayName = 'Steedos App Launcher';\r\n\tstate = {\r\n\t\tsearch: '',\r\n\t\topen: false,\r\n\t};\r\n\r\n\tonSearch = (event) => {\r\n\t\tthis.setState({ search: event.target.value });\r\n\t};\r\n\ttriggerOnClick = ()=> {\r\n\t\tthis.setState({open: !this.state.open})\r\n\t}\r\n\tonClick=(value, e)=>{\r\n\t\tif(this.props.history){\r\n\t\t\tif(value.type ==='url'){\r\n\t\t\t\tthis.props.history.push(`/app/${value.appApiName}/frame/${value.id}`, {src: value.path, title: value.name});\r\n\t\t\t}else{\r\n\t\t\t\tthis.props.history.push(value.path);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tthis.setState({open: false})\r\n\t}\r\n\tonClose=()=>{\r\n\t\tthis.setState({open: false})\r\n\t}\r\n\trender() {\r\n\t\tconst search = (\r\n\t\t\t<Search\r\n\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\tconsole.log('Search term:', event.target.value);\r\n\t\t\t\t\tthis.onSearch(event);\r\n\t\t\t\t}}\r\n\t\t\t\tplaceholder=\"搜索应用程序或项目...\"\r\n\t\t\t\tassistiveText={{ label: '搜索应用程序或项目...' }}\r\n\t\t\t/>\r\n\t\t);\r\n\t\tconst headerButton = <Button label=\"App Exchange\" />;\r\n\t\tlet { currentApp, apps  } = this.props;\r\n\t\tif(!currentApp){\r\n\t\t\tcurrentApp = {}\r\n\t\t}\r\n\t\tif(!apps){\r\n\t\t\tapps = []\r\n\t\t}\r\n\t\tconst tabs = getTabs(apps);\r\n\t\treturn (\r\n\t\t\t<IconSettings actionSprite={actionSprite} standardSprite={standardSprite} customSprite={customSprite} utilitySprite={utilitySprite}>\r\n\t\t\t\t<GlobalNavigationBar>\r\n\t\t\t\t\t<GlobalNavigationBarRegion region=\"primary\">\r\n\t\t\t\t\t\t<AppLauncher\r\n\t\t\t\t\t\t\ttitle=\"应用程序启动器\"\r\n\t\t\t\t\t\t\ttriggerName={currentApp.name}\r\n\t\t\t\t\t\t\tsearch={search}\r\n\t\t\t\t\t\t\t// modalHeaderButton={headerButton}\r\n\t\t\t\t\t\t\tonClose={this.onClose}\r\n\t\t\t\t\t\t\tisOpen={this.state.open}\r\n\t\t\t\t\t\t\ttriggerOnClick={this.triggerOnClick}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AppLauncherExpandableSection title=\"所有应用程序\">\r\n\t\t\t\t\t\t\t\t{filter(apps, (app)=> { return app.name.indexOf(this.state.search) > -1; })?.map((app, i) => (\r\n\t\t\t\t\t\t\t\t\t<AppLauncherTile\r\n\t\t\t\t\t\t\t\t\t\tkey={app.id}\r\n\t\t\t\t\t\t\t\t\t\tdescription={app.description}\r\n\t\t\t\t\t\t\t\t\t\t// iconText={app.icon}\r\n\t\t\t\t\t\t\t\t\t\ticonNode={<Icon\r\n\t\t\t\t\t\t\t\t\t\t\tassistiveText={{ label: app.name }}\r\n\t\t\t\t\t\t\t\t\t\t\tcategory=\"standard\"\r\n\t\t\t\t\t\t\t\t\t\t\tname={app.icon}\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t\t\t\t\tsearch={this.state.search}\r\n\t\t\t\t\t\t\t\t\t\ttitle={app.name}\r\n\t\t\t\t\t\t\t\t\t\tonClick={(e)=>{return this.onClick(app,e)}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</AppLauncherExpandableSection>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<AppLauncherExpandableSection title=\"所有项目\">\r\n\t\t\t\t\t\t\t\t{filter(tabs, (tab)=> { return tab.name.indexOf(this.state.search) > -1; })?.map((tab, i) => (\r\n\t\t\t\t\t\t\t\t\t<AppLauncherLink key={tab.id} search={this.state.search} onClick={(e)=>{return this.onClick(tab,e)}} >{tab.name}</AppLauncherLink>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</AppLauncherExpandableSection>\r\n\t\t\t\t\t\t</AppLauncher>\r\n\t\t\t\t\t</GlobalNavigationBarRegion>\r\n\t\t\t\t</GlobalNavigationBar>\r\n\t\t\t</IconSettings>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from '@salesforce/design-system-react/components/button';\r\nimport ButtonGroup from '@salesforce/design-system-react/components/button-group';\r\nimport Dropdown from '@salesforce/design-system-react/components/menu-dropdown';\r\nimport DropdownTrigger from '@salesforce/design-system-react/components/menu-dropdown/button-trigger';\r\nimport Icon from '@salesforce/design-system-react/components/icon';\r\nimport IconSettings from '@salesforce/design-system-react/components/icon-settings';\r\nimport PageHeader from '@salesforce/design-system-react/components/page-header';\r\nimport PageHeaderControl from '@salesforce/design-system-react/components/page-header/control';\r\n\r\nexport class SteedosListView extends React.Component {\r\n\tstatic displayName = 'ObjectHomePageHeaderExample';\r\n\r\n\trender() {\r\n\t\tconst actions = () => (\r\n\t\t\t<PageHeaderControl>\r\n\t\t\t\t<ButtonGroup variant=\"list\" id=\"button-group-page-header-actions\">\r\n\t\t\t\t\t<Button label=\"New\" />\r\n\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\tassistiveText={{ icon: 'More Options' }}\r\n\t\t\t\t\t\ticonCategory=\"utility\"\r\n\t\t\t\t\t\ticonName=\"down\"\r\n\t\t\t\t\t\ticonVariant=\"border-filled\"\r\n\t\t\t\t\t\tid=\"page-header-dropdown-object-home-nav-right\"\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t{ label: 'Menu Item One', value: 'A0' },\r\n\t\t\t\t\t\t\t{ label: 'Menu Item Two', value: 'B0' },\r\n\t\t\t\t\t\t\t{ label: 'Menu Item Three', value: 'C0' },\r\n\t\t\t\t\t\t\t{ type: 'divider' },\r\n\t\t\t\t\t\t\t{ label: 'Menu Item Four', value: 'D0' },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</PageHeaderControl>\r\n\t\t);\r\n\r\n\t\tconst controls = () => (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<PageHeaderControl>\r\n\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\tid=\"page-header-dropdown-object-home-content-right\"\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t{ label: 'Menu Item One', value: 'A0' },\r\n\t\t\t\t\t\t\t{ label: 'Menu Item Two', value: 'B0' },\r\n\t\t\t\t\t\t\t{ label: 'Menu Item Three', value: 'C0' },\r\n\t\t\t\t\t\t\t{ type: 'divider' },\r\n\t\t\t\t\t\t\t{ label: 'Menu Item Four', value: 'D0' },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DropdownTrigger>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tassistiveText={{ icon: 'List View Controls' }}\r\n\t\t\t\t\t\t\t\ticonCategory=\"utility\"\r\n\t\t\t\t\t\t\t\ticonName=\"settings\"\r\n\t\t\t\t\t\t\t\ticonVariant=\"more\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</DropdownTrigger>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t</PageHeaderControl>\r\n\t\t\t\t<PageHeaderControl>\r\n\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\tassistiveText={{ icon: 'Change view' }}\r\n\t\t\t\t\t\ticonCategory=\"utility\"\r\n\t\t\t\t\t\ticonName=\"settings\"\r\n\t\t\t\t\t\ticonVariant=\"more\"\r\n\t\t\t\t\t\tid=\"page-header-dropdown-object-home-content-right-2\"\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t{ label: 'Menu Item One', value: 'A0' },\r\n\t\t\t\t\t\t\t{ label: 'Menu Item Two', value: 'B0' },\r\n\t\t\t\t\t\t\t{ label: 'Menu Item Three', value: 'C0' },\r\n\t\t\t\t\t\t\t{ type: 'divider' },\r\n\t\t\t\t\t\t\t{ label: 'Menu Item Four', value: 'D0' },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DropdownTrigger>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tassistiveText={{ icon: 'Change view' }}\r\n\t\t\t\t\t\t\t\ticonCategory=\"utility\"\r\n\t\t\t\t\t\t\t\ticonName=\"table\"\r\n\t\t\t\t\t\t\t\ticonVariant=\"more\"\r\n\t\t\t\t\t\t\t\tvariant=\"icon\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</DropdownTrigger>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t</PageHeaderControl>\r\n\t\t\t\t<PageHeaderControl>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tassistiveText={{ icon: 'Edit List' }}\r\n\t\t\t\t\t\ticonCategory=\"utility\"\r\n\t\t\t\t\t\ticonName=\"edit\"\r\n\t\t\t\t\t\ticonVariant=\"border-filled\"\r\n\t\t\t\t\t\tvariant=\"icon\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</PageHeaderControl>\r\n\t\t\t\t<PageHeaderControl>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tassistiveText={{ icon: 'Refresh' }}\r\n\t\t\t\t\t\ticonCategory=\"utility\"\r\n\t\t\t\t\t\ticonName=\"refresh\"\r\n\t\t\t\t\t\ticonVariant=\"border-filled\"\r\n\t\t\t\t\t\tvariant=\"icon\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</PageHeaderControl>\r\n\t\t\t\t<PageHeaderControl>\r\n\t\t\t\t\t<ButtonGroup variant=\"list\" id=\"button-group-page-header-controls\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tassistiveText={{ icon: 'Charts' }}\r\n\t\t\t\t\t\t\ticonCategory=\"utility\"\r\n\t\t\t\t\t\t\ticonName=\"chart\"\r\n\t\t\t\t\t\t\ticonVariant=\"border-filled\"\r\n\t\t\t\t\t\t\tvariant=\"icon\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tassistiveText={{ icon: 'Filters' }}\r\n\t\t\t\t\t\t\ticonCategory=\"utility\"\r\n\t\t\t\t\t\t\ticonName=\"filterList\"\r\n\t\t\t\t\t\t\ticonVariant=\"border-filled\"\r\n\t\t\t\t\t\t\tvariant=\"icon\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</PageHeaderControl>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\r\n\t\t\t\t<PageHeader\r\n\t\t\t\t\ticon={\r\n\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\tassistiveText={{ label: 'Opportunity' }}\r\n\t\t\t\t\t\t\tcategory=\"standard\"\r\n\t\t\t\t\t\t\tname=\"opportunity\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinfo=\"10 items • Updated 13 minutes ago\"\r\n\t\t\t\t\tlabel=\"Opportunities\"\r\n\t\t\t\t\tnameSwitcherDropdown={\r\n\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\tassistiveText={{ icon: 'Name Switcher' }}\r\n\t\t\t\t\t\t\tbuttonClassName=\"slds-button_icon-small\"\r\n\t\t\t\t\t\t\tbuttonVariant=\"icon\"\r\n\t\t\t\t\t\t\ticonCategory=\"utility\"\r\n\t\t\t\t\t\t\ticonName=\"down\"\r\n\t\t\t\t\t\t\tid=\"page-header-name-switcher-dropdown\"\r\n\t\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t\t{ label: 'Menu Item One', value: 'A0' },\r\n\t\t\t\t\t\t\t\t{ label: 'Menu Item Two', value: 'B0' },\r\n\t\t\t\t\t\t\t\t{ label: 'Menu Item Three', value: 'C0' },\r\n\t\t\t\t\t\t\t\t{ label: 'Menu Item Four', value: 'D0' },\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonRenderActions={actions}\r\n\t\t\t\t\tonRenderControls={controls}\r\n\t\t\t\t\ttitle=\"Recently Viewed\"\r\n\t\t\t\t\ttruncate\r\n\t\t\t\t\tvariant=\"object-home\"\r\n\t\t\t\t/>\r\n\t\t\t</IconSettings>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport IconSettings from '@salesforce/design-system-react/components/icon-settings';\r\nimport actionSprite from '@salesforce-ux/design-system/assets/icons/action-sprite/svg/symbols.svg';\r\nimport customSprite from '@salesforce-ux/design-system/assets/icons/custom-sprite/svg/symbols.svg';\r\nimport standardSprite from '@salesforce-ux/design-system/assets/icons/standard-sprite/svg/symbols.svg';\r\nimport utilitySprite from '@salesforce-ux/design-system/assets/icons/utility-sprite/svg/symbols.svg';\r\nimport Icon from '@salesforce/design-system-react/components/icon'; \r\n\r\nexport class SteedosIcon extends React.Component {\r\n\trender() {\r\n\t\tlet { category=\"standard\", name, size=\"small\", assistiveText  } = this.props;\r\n\t\treturn (\r\n\t\t\t<IconSettings actionSprite={actionSprite} standardSprite={standardSprite} customSprite={customSprite} utilitySprite={utilitySprite}>\r\n\t\t\t\t<Icon\r\n                    assistiveText={assistiveText}\r\n                    category={category}\r\n                    name={name}\r\n                    size={size}\r\n                />\r\n\t\t\t</IconSettings>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport IconSettings from '@salesforce/design-system-react/components/icon-settings';\r\nimport actionSprite from '@salesforce-ux/design-system/assets/icons/action-sprite/svg/symbols.svg';\r\nimport customSprite from '@salesforce-ux/design-system/assets/icons/custom-sprite/svg/symbols.svg';\r\nimport standardSprite from '@salesforce-ux/design-system/assets/icons/standard-sprite/svg/symbols.svg';\r\nimport utilitySprite from '@salesforce-ux/design-system/assets/icons/utility-sprite/svg/symbols.svg';\r\nimport Icon from '@salesforce/design-system-react/components/icon'; \r\n\r\nexport class SteedosIconSettings extends React.Component {\r\n\trender() {\r\n\t\tlet { children, iconPath } = this.props;\r\n\t\tif(iconPath){\r\n\t\t\treturn (\r\n\t\t\t\t<IconSettings iconPath={iconPath}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</IconSettings>\r\n\t\t\t);\r\n\t\t}else{\r\n\t\t\treturn (\r\n\t\t\t\t<IconSettings actionSprite={actionSprite} standardSprite={standardSprite} customSprite={customSprite} utilitySprite={utilitySprite}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</IconSettings>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n","import React, { useState , useRef} from \"react\";\r\nimport { formatFiltersToODataQuery } from '@steedos/filters';\r\nimport { Tag , Select, Spin, TreeSelect } from 'antd';\r\nimport \"antd/es/tree-select/style/index.css\";\r\nimport { isFunction, isArray, isObject, uniq, filter, map, forEach} from 'lodash';\r\nimport { Objects, API } from '@steedos/builder-store';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport FieldSelect from '@ant-design/pro-field/es/components/Select';\r\nimport { Link } from \"react-router-dom\";\r\nimport { getObjectRecordUrl } from \"../utils\";\r\nimport { SteedosIcon } from '@steedos/builder-lightning';\r\nimport { getTreeDataFromRecords } from '../utils';\r\nimport \"./lookup.less\"\r\nimport PlusOutlined from \"@ant-design/icons/es/icons/PlusOutlined\";\r\nimport { ObjectForm } from '@steedos/builder-object';\r\n\r\nconst { Option } = Select;\r\n// 相关表类型字段\r\n// 通过下拉框显示相关表中的数据，可以搜索\r\n// 参数 props.reference_to:\r\nexport const LookupField = observer((props:any) => {\r\n    const [params, setParams] = useState({open: false,openTag: null});\r\n    const resizeSubject:any = useRef()\r\n    const { valueType, mode, fieldProps, request, ...rest } = props;\r\n    const { field_schema: fieldSchema = {},depend_field_values: dependFieldValues={},onChange } = fieldProps;\r\n    let { reference_to, reference_sort,reference_limit, showIcon, multiple, reference_to_field = \"_id\", filters: fieldFilters = [],filtersFunction, create } = fieldSchema;\r\n    let value= fieldProps.value || props.text;//ProTable那边fieldProps.value没有值，只能用text\r\n    let valueOriginal = value;\r\n    let tags:any[] = [];\r\n    let referenceTos = isFunction(reference_to) ? reference_to() : reference_to;\r\n    let defaultReferenceTo:any;\r\n    if(isArray(referenceTos)){\r\n        if(value && value.o){\r\n            defaultReferenceTo = value.o;\r\n        }else{\r\n            defaultReferenceTo = referenceTos[0];\r\n        }\r\n    }\r\n    let [referenceTo, setReferenceTo] = useState(isArray(referenceTos) ? defaultReferenceTo : referenceTos);\r\n    let [selectItemLabel, setSelectItemLabel] = useState('');\r\n    // optionsFunction优先options\r\n    let options = fieldSchema.optionsFunction ? fieldSchema.optionsFunction : fieldSchema.options ;\r\n    // if(isArray(referenceTos) && value ){\r\n        if(isObject(value) && !isArray(value)){\r\n            value=value['ids'];\r\n        }\r\n    //}\r\n    let referenceToObject,referenceToObjectSchema,referenceToLableField, referenceToObjectIcon, referenceParentField;\r\n    if(referenceTo){\r\n        referenceToObject = Objects.getObject(referenceTo);\r\n        if (referenceToObject.isLoading) return (<div><Spin/></div>);\r\n        referenceToObjectSchema = referenceToObject.schema;\r\n        referenceToLableField = referenceToObjectSchema[\"NAME_FIELD_KEY\"] ? referenceToObjectSchema[\"NAME_FIELD_KEY\"] : \"name\";\r\n        // TODO: organizations.object.yml 文件里后续也要添加一个类似enable_tree属性 parent_field。\r\n        referenceParentField = referenceToObjectSchema.parent_field || \"parent\"\r\n        if(referenceToObjectSchema.icon){\r\n            referenceToObjectIcon = referenceToObjectSchema.icon;\r\n        }\r\n    }\r\n    let selectItem = [], recordListData: any, referenceTofilters: any, fields: any;\r\n    if(referenceToObject && value){\r\n        referenceTofilters = [[reference_to_field, '=', value]];\r\n        fields = uniq([reference_to_field, referenceToLableField, \"_id\"]);\r\n    }\r\n    if(mode==='read'){\r\n        if(value){\r\n            if (referenceTo) {\r\n                // tree-select 编辑时会调用只读的缓存，编辑时需要显示字段name，而不是fullname.\r\n                if(referenceTo==='organizations'){\r\n                    fields.push('name')\r\n                }\r\n                const recordList = referenceToObject.getRecordList(referenceTofilters, fields);\r\n                if (recordList.isLoading) return (<div><Spin/></div>);\r\n                recordListData = recordList.data;\r\n                if (recordListData && recordListData.value && recordListData.value.length > 0) {\r\n                    let tagsValueField = reference_to_field;\r\n                    if(reference_to_field && reference_to_field !== \"_id\"){\r\n                        // 选人字段只读时链接应该显示的是space_users的_id字段值，而不是user字段值\r\n                        tagsValueField = \"_id\"\r\n                    }\r\n                    selectItem = recordListData.value.map((recordItem: any) => { \r\n                        return { value: recordItem[tagsValueField], label: recordItem[referenceToLableField] } \r\n                    });\r\n                }\r\n                tags = selectItem;\r\n            }else{\r\n                // TODO:options({}) 里的对象后期需要存放value进入\r\n                options = isFunction(options) ? options(dependFieldValues) : options;\r\n                tags = filter(options,(optionItem: any)=>{\r\n                    return multiple ? value.indexOf(optionItem.value) > -1 : optionItem.value === value;\r\n                })\r\n            }\r\n        }\r\n        return (<React.Fragment>{tags.map((tagItem, index)=>{return (\r\n            <React.Fragment key={tagItem.value}>\r\n                {index > 0 && ', '}\r\n                { referenceTo ? (<Link to={getObjectRecordUrl(referenceTo, tagItem.value)} className=\"text-blue-600 hover:text-blue-500 hover:underline\">{tagItem.label}</Link>) : (tagItem.label) }\r\n            </React.Fragment>\r\n        )})}</React.Fragment>)\r\n    }else{\r\n        if (multiple)\r\n            fieldProps.mode = 'multiple';\r\n\r\n        let dependOnValues: any = dependFieldValues;\r\n        let request: any;\r\n        let labelInValue=false;\r\n        let requestFun= async (params: any, props: any) => {\r\n            // 注意，request 里面的代码不会抛异常，包括编译错误。\r\n            // console.log(\"===request===params, props==\", params, props);\r\n            // console.log(\"===request===reference_to==\", reference_to);\r\n\r\n            if(isFunction(options)) {\r\n                dependOnValues.__keyWords = params.keyWords;\r\n                dependOnValues.__referenceTo = referenceTo;\r\n                const results = await options(dependOnValues);\r\n                return results;\r\n            }\r\n            else{\r\n                let filters: any = [], textFilters: any = [], keyFilters: any = [];\r\n                let fields = [reference_to_field, referenceToLableField];\r\n                // console.log(\"===filters===\", filters);\r\n                let option: any = {};\r\n                if(params.open){\r\n                    if (reference_sort) {\r\n                        option.sort = map(reference_sort, (value, key) => { \r\n                            if(fields.indexOf(key)<0){ fields.push(key) };\r\n                            return `${key}${value == 1 ? '' : ' desc'}` \r\n                        }).join(\",\")\r\n                    }\r\n                    if (reference_limit) {\r\n                        option.pageSize = reference_limit\r\n                    }\r\n                    if (value){\r\n                        textFilters = [reference_to_field, '=', value];\r\n                    }\r\n                    if (params.keyWords){\r\n                        keyFilters = [referenceToLableField, 'contains', params.keyWords];\r\n                    }\r\n                    let filtersOfField:[] =  filtersFunction ? filtersFunction(fieldFilters) : fieldFilters;\r\n                    if (filtersOfField.length) {\r\n                        if (keyFilters.length) {\r\n                            if (isArray(filtersOfField)) {\r\n                                keyFilters = [filtersOfField, keyFilters]\r\n                            }\r\n                            else {\r\n                                const odataKeyFilters = formatFiltersToODataQuery(keyFilters);\r\n                                keyFilters = `(${filtersOfField}) and (${odataKeyFilters})`;\r\n                            }\r\n                        }\r\n                        else {\r\n                            keyFilters = filtersOfField;\r\n                        }\r\n                    }\r\n                    if (textFilters.length && keyFilters.length) {\r\n                        if (isArray(keyFilters)) {\r\n                            filters = [textFilters, 'or', keyFilters]\r\n                        }\r\n                        else {\r\n                            const odataTextFilters = formatFiltersToODataQuery(textFilters);\r\n                            filters = `(${odataTextFilters}) or (${keyFilters})`;\r\n                        }\r\n                    }\r\n                    else if (textFilters.length && !open) {\r\n                        filters = textFilters;\r\n                    }\r\n                    else if (keyFilters.length) {\r\n                        filters = keyFilters;\r\n                    }\r\n                }else{\r\n                    filters = referenceTofilters;\r\n                }\r\n                let data = await API.requestRecords(referenceTo, filters, fields, option);\r\n\r\n                const results = data.value.map((item: any) => {\r\n                    return {\r\n                        label: item[referenceToLableField],\r\n                        value: item[reference_to_field]\r\n                    }\r\n                })\r\n                return results;\r\n            }\r\n        }\r\n\r\n        if (referenceTo){ // 含有reference_to\r\n            if (!options) {\r\n                request = requestFun;\r\n            }\r\n            else if (options) {\r\n                if (isArray(options)) {\r\n                    fieldProps.options = options;\r\n                } else if (isFunction(options)) {\r\n                    request = requestFun;\r\n                }\r\n            }\r\n        }else{ // 最后一种情况 没有referenceTo 只有options 或 optionsFunction \r\n            if (isFunction(options)) {\r\n                request = async (params: any, props: any) => {\r\n                    dependFieldValues.__keyWords = params.keyWords;\r\n                    const results = await options(dependFieldValues);\r\n                    return results;\r\n                };\r\n            } else {\r\n                fieldProps.options = options;\r\n            }\r\n        }\r\n        const onDropdownVisibleChange = (open: boolean) => {\r\n            if (open) {\r\n                setParams({ open, openTag: new Date() });\r\n            }\r\n        }\r\n\r\n        let newFieldProps:any=fieldProps;\r\n        if(isArray(referenceTos)){\r\n            labelInValue=true;\r\n            if(value){\r\n                const recordList = referenceToObject.getRecordList(referenceTofilters, fields);\r\n                // 根据ID获取请求 获取对应的 label。 不需要下面这行isloading判断\r\n                // if (recordList.isLoading) return (<div><Spin/></div>);\r\n                recordListData = recordList.data;\r\n                if (recordListData && recordListData.value && recordListData.value.length > 0) {\r\n                    selectItemLabel = recordListData.value.map((recordItem: any)=>{\r\n                        return recordItem[referenceToLableField];\r\n                    }).join(\",\");\r\n                }\r\n            }\r\n            newFieldProps = Object.assign({}, fieldProps, {\r\n                value: {value: fieldProps.value,label: selectItemLabel},\r\n                onChange:(values: any, option: any)=>{\r\n                    setSelectItemLabel(values.label)\r\n                    onChange({o: referenceTo, ids: (values.value ? [values.value] : [])})\r\n                }\r\n            })\r\n        }\r\n        let optionItemRender;\r\n        if(showIcon && referenceToObjectIcon){\r\n            optionItemRender = (item) => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <span role=\"img\" aria-label=\"smile\" className=\"anticon anticon-smile\"><SteedosIcon name={referenceToObjectIcon} size=\"x-small\"/></span>\r\n                        <span>{item.label}</span>\r\n                    </React.Fragment>\r\n                    )\r\n            }\r\n        }\r\n        let proFieldProps: any;\r\n        const isLookupTree = referenceToObjectSchema && referenceToObjectSchema.enable_tree;\r\n        let dropdownRender;\r\n        if(create && referenceTo){\r\n            dropdownRender = (menu)=>{\r\n            return (\r\n                <React.Fragment>\r\n                    {menu}\r\n                    <ObjectForm\r\n                        // initialValues={initialValues} \r\n                        key=\"standard_new\" \r\n                        title={`新建 ${referenceToObjectSchema.label}`} \r\n                        mode=\"edit\" \r\n                        isModalForm={true} \r\n                        objectApiName={referenceTo} \r\n                        name={`form-new-${referenceTo}`} \r\n                        submitter={false}\r\n                        trigger={\r\n                            <a className=\"add_button text-blue-600 hover:text-blue-500 hover:underlin\"  onClick={()=>{ resizeSubject.current.blur() }} >\r\n                                <PlusOutlined className=\"add_button\"  /> 新建 {referenceToObjectSchema.label}\r\n                            </a>\r\n                        } \r\n                    />\r\n                </React.Fragment>\r\n            )\r\n            }\r\n        }\r\n        if(isLookupTree){\r\n            //主要用到了newFieldProps中的onChange和value属性\r\n            proFieldProps = Object.assign({}, {...newFieldProps}, {\r\n                objectApiName: referenceTo,\r\n                multiple,\r\n                filters: fieldFilters,\r\n                filtersFunction,\r\n                nameField: referenceToLableField,\r\n                parentField: referenceParentField\r\n            })\r\n        }\r\n        else{\r\n            proFieldProps = {\r\n                mode: mode,\r\n                showSearch: true,\r\n                showArrow: true,\r\n                optionFilterProp: 'label',\r\n                fieldProps: newFieldProps,\r\n                request,\r\n                labelInValue,\r\n                params,\r\n                onDropdownVisibleChange,\r\n                optionItemRender,\r\n                dropdownRender,\r\n                ...rest\r\n            }\r\n        }\r\n        const SelectProFieldProps = {\r\n            mode: mode,\r\n            showArrow: true,\r\n            optionFilterProp: 'label',\r\n            onChange: (value: any) => {\r\n                setReferenceTo(value)\r\n            },\r\n            dropdownMatchSelectWidth:172,\r\n            defaultValue:referenceTo\r\n        }\r\n        const needReferenceToSelect = isArray(referenceTos) && !isArray(options)\r\n        let referenceToOptions:any = [];\r\n        let isLoadingReferenceTosObject;\r\n        if(needReferenceToSelect){\r\n            forEach(referenceTos,(val)=>{\r\n                const referenceToObject = Objects.getObject(val);\r\n                referenceToObjectSchema = referenceToObject.schema;\r\n                let referenceToObjectLeftIcon;\r\n                if(referenceToObjectSchema.icon){\r\n                    referenceToObjectLeftIcon = referenceToObjectSchema.icon;\r\n                }\r\n                if (!referenceToObject.isLoading){\r\n                    if(referenceToObjectLeftIcon){\r\n                        referenceToOptions.push({label:referenceToObjectSchema.label,value:val,icon:referenceToObjectLeftIcon})\r\n                    }else{\r\n                        referenceToOptions.push({label:referenceToObjectSchema.label,value:val})\r\n                    }   \r\n                }\r\n            })\r\n            isLoadingReferenceTosObject = referenceToOptions.length !== referenceTos.length;\r\n        }\r\n        if(isLoadingReferenceTosObject) return (<div><Spin/></div>)\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    needReferenceToSelect && \r\n                    (<Select   {...SelectProFieldProps} className=\"left_label_menu\">\r\n                    {\r\n                        map(referenceToOptions,(item)=>{\r\n                            return (\r\n                            <Option value={item.value} key={item.value}>\r\n                                {item.icon ? <span role=\"img\" aria-label=\"smile\" className=\"anticon anticon-smile\"><SteedosIcon name={item.icon} size=\"x-small\"/></span> : null}\r\n                                <span className=\"left_label\">{item.label}</span>\r\n                            </Option>)\r\n                        })\r\n                    }\r\n                    </Select>)\r\n                }\r\n                {isLookupTree ? (<FieldTreeSelect {...proFieldProps}  />) : (<FieldSelect ref={resizeSubject} {...proFieldProps}  />)}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n});\r\n\r\nexport const FieldTreeSelect = observer((props:any)=> {\r\n    const [params, setParams] = useState({open: false,openTag: null});\r\n    const [opened, setOpened] = useState(false);\r\n    const { objectApiName, nameField = \"name\", parentField = \"parent\", filters: fieldFilters = [],filtersFunction, value, onChange, ...rest } = props;\r\n    let filters: any[] | string =  filtersFunction ? filtersFunction(fieldFilters) : fieldFilters;\r\n    const keyFilters: any = ['_id', '=', value];\r\n    if(params.open){\r\n        if(value && value.length && filters && filters.length){\r\n            if (isArray(filters)) {\r\n                filters = [keyFilters, \"or\", filters]\r\n            }\r\n            else {\r\n                const odataKeyFilters = formatFiltersToODataQuery(keyFilters);\r\n                filters = `(${odataKeyFilters}) or (${filters})`;\r\n            }\r\n        }\r\n    }\r\n    if(!params.open && !opened){\r\n        // 未展开下拉菜单时，只请求value对应的记录，value为空时为null，正好返回空数据\r\n        // 加opened条件是因为之前请求过完整数据就没必要再按keyFilters请求一次部分数据，避免下次再点开下拉菜单时请求整棵树。\r\n        filters = keyFilters;\r\n    }\r\n    let fields = [nameField, parentField]\r\n    const object = Objects.getObject(objectApiName);\r\n    if (object.isLoading) return (<div><Spin/></div>);\r\n    let treeData = [];\r\n    let treeNameField = nameField;\r\n    if(objectApiName==='organizations'){\r\n        fields.push('name')\r\n        if(params.open){\r\n            treeNameField = 'name'\r\n        }\r\n    }\r\n    let treeDefaultExpandedKeys: string[];\r\n    const recordList: any = object.getRecordList(filters, fields);\r\n    if (recordList.isLoading) return (<div><Spin/></div>);\r\n    const recordListData = recordList.data;\r\n    if (recordListData && recordListData.value && recordListData.value.length > 0) {\r\n        treeData = getTreeDataFromRecords(recordListData.value, treeNameField, parentField);\r\n    }\r\n    if (value && value.length) {\r\n        if (isArray(value)) {\r\n            treeDefaultExpandedKeys = value\r\n        } else {\r\n            treeDefaultExpandedKeys = [value]\r\n        }\r\n    } else {\r\n        if (treeData && treeData.length) {\r\n            const rootNodeValues = treeData.map((treeItem) => {\r\n                return treeItem.value;\r\n            });\r\n            treeDefaultExpandedKeys = rootNodeValues;\r\n        }\r\n    }\r\n    return (\r\n      <TreeSelect\r\n        // loading={recordList.isLoading}\r\n        treeNodeFilterProp=\"title\"\r\n        allowClear\r\n        showSearch={true}\r\n        style={{ width: '100%' }}\r\n        value={value}\r\n        // value={recordList.isLoading ? null: value}\r\n        dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n        treeData={treeData}\r\n        placeholder=\"请选择\"\r\n        // treeDefaultExpandAll\r\n        treeDefaultExpandedKeys={treeDefaultExpandedKeys}\r\n        open={params.open}\r\n        onDropdownVisibleChange={(open: boolean) => {\r\n            if (open && !opened) {\r\n                setOpened(true)\r\n            }\r\n            setParams({ open, openTag: new Date() });\r\n        }}\r\n        onChange={onChange}\r\n        {...rest}\r\n      />\r\n    );\r\n});\r\n\r\nexport const lookup = {\r\n    render: (text: any, props: any) => {\r\n        return (<LookupField {...props} mode=\"read\"></LookupField>)\r\n    },\r\n    renderFormItem: (text: any, props: any) => {\r\n        return (<LookupField {...props} mode=\"edit\"></LookupField>)\r\n    }\r\n}","import React from 'react';\r\nimport {LookupField} from './lookup'\r\n\r\n// 和lookup相同\r\nexport const master_detail = {\r\n  render: (text: any, props: any) => {\r\n      return (<LookupField {...props} mode=\"read\"></LookupField>)\r\n  },\r\n  renderFormItem: (text: any, props: any) => {\r\n      return (<LookupField {...props} mode=\"edit\"></LookupField>)\r\n  }\r\n}","import { forEach } from 'lodash';\r\nimport React, { useState } from 'react';\r\nimport { Grid, GridItem, Flex, Box } from '@chakra-ui/layout'\r\n\r\nimport { ObjectField } from '../components/ObjectField';\r\nimport BaseForm from '@ant-design/pro-form/es/BaseForm';\r\nimport { Form as AntForm } from 'antd';\r\nimport { FieldSection } from '@steedos/builder-form';\r\n\r\n/**\r\n * 对象字段类型组件\r\n * 定义对象的key,value键值对结构，可在界面编辑该对象结构的数据并保存到数据库中\r\n * 组件支持属性\r\n * - name: string\r\n * - sub_fields: [{name: xx, type: xx, reference_to: xx, multiple: xx, ...}, ...], 字段数组,其元素是每个字段的字义\r\n * 比如华炎魔方cms_posts对象中有一个members字段，其yml文件定义如下：\r\n *   members:\r\n      type: object\r\n      label: Members\r\n      is_wide: true\r\n    members.users:\r\n      type: lookup\r\n      label: User Members\r\n      reference_to: users\r\n      multiple: true\r\n      filterable: true\r\n    members.organizations:\r\n      type: lookup\r\n      label: Organization Members\r\n      reference_to: organizations\r\n      multiple: true\r\n      filterable: true\r\n * 保存到cms_posts表记录中对应为以下效果：\r\n    \"members\" : {\r\n        \"users\" : [ \r\n            \"5fdbe2a67447ff11ed5851e5\"\r\n        ],\r\n        \"organizations\" : [ \r\n            \"WNpmGhCzhq5H2y5yZ\"\r\n        ]\r\n    }\r\n * 在这里对应的组件属性为：\r\n    sub_fields: [{\r\n      name: \"members.organizations\",\r\n      type: \"lookup\",\r\n      reference_to: \"organizations\",\r\n      multiple: true\r\n    },{\r\n      name: \"members.users\",\r\n      type: \"lookup\",\r\n      reference_to: \"users\",\r\n      multiple: true\r\n    }]\r\n */\r\nexport const ObjectFieldObject = (props:any) => {\r\n  const [form] = AntForm.useForm();\r\n\r\n  const {mode='read', text =[], fieldProps={}} = props;\r\n  const { field_schema: fieldSchema = {}, depend_field_values: dependFieldValues={} } = fieldProps;\r\n  const {value:initialValues, onChange} = fieldProps;\r\n  const {sub_fields={}, columns = 2} = fieldSchema;\r\n  const label = fieldSchema.label? fieldSchema.label: fieldSchema.name\r\n\r\n  const getFields = ()=> {\r\n    const fields = [];\r\n    forEach(sub_fields, (field:any, fieldName)=>{\r\n      const fieldItemProps = {\r\n        key: fieldName,\r\n        name: fieldName,\r\n        fieldName: fieldName,\r\n        label: field.label?field.label:fieldName,\r\n        fieldSchema: field,\r\n      };\r\n      fields.push(<ObjectField {...fieldItemProps} />)\r\n    })\r\n    return fields;\r\n  }\r\n\r\n  const boxOptions = {\r\n    templateColumns: [`repeat(1, 1fr)`, `repeat(${columns}, 1fr)`],\r\n    gridColumn: 'span 2/span 2',\r\n    gap: '0.5rem 2rem',\r\n  }\r\n\r\n  return (\r\n    <BaseForm \r\n      // formFieldComponent = {ObjectField}\r\n      className='object-sub-form'\r\n      initialValues={initialValues}\r\n      labelAlign='left'\r\n      // mode={mode}\r\n      form={form}\r\n      component={false}  //子表单不创建 html form tag\r\n      submitter={false}\r\n      onValuesChange = {(changedValues:any, allValues:any)=>{\r\n        if (onChange) onChange(allValues)\r\n      }} \r\n      // layout={layout}\r\n      // onFinish={onFinish}\r\n    >\r\n      <Grid {...boxOptions}>\r\n        {getFields()}\r\n      </Grid>\r\n    </BaseForm>\r\n  )\r\n}\r\n\r\nexport const object = {\r\n  render: (text: any, props: any) => {\r\n    return (\r\n        <ObjectFieldObject {...props} mode='read'/>\r\n    )\r\n  },\r\n  renderFormItem: (_: any, props: any) => {\r\n    return (\r\n        <ObjectFieldObject {...props} mode='edit'/>\r\n    )\r\n  }\r\n}","import { forEach, isArray } from 'lodash';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ProField from \"@ant-design/pro-field\";\r\nimport Dropdown from '@salesforce/design-system-react/components/menu-dropdown'; \r\nimport Button from '@salesforce/design-system-react/components/button'; \r\nimport Popover from '@salesforce/design-system-react/components/popover'; \r\n\r\nimport {AgGridColumn, AgGridReact} from '@ag-grid-community/react';\r\nimport {AllCommunityModules} from '@ag-grid-community/all-modules';\r\n\r\nimport React, { useState, useEffect, forwardRef, useImperativeHandle, useRef } from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\n\r\nimport './aggrid.less';\r\nimport { AgGridCellRenderer } from '../components/ag-grid/CellRender';\r\nimport { AgGridCellEditor } from '../components/ag-grid/CellEditor';\r\n\r\n// 表格类型字段，\r\n// value格式：{ gridField: [{subField1: 666, subField2: 'yyy'}] }\r\n// 编辑时调用 editable protable，要求行可拖拉调整顺序\r\n// 显示时调用只读 protable\r\n// props.fields [] 列数组\r\nexport const ObjectFieldGrid = (props) => {\r\n  \r\n  const {mode='read', text =[], fieldProps={}} = props;\r\n  const { field_schema: fieldSchema = {}, depend_field_values: dependFieldValues={}, value:initialValue, onChange } = fieldProps;\r\n\r\n  forEach(initialValue, (row)=>{\r\n    if (!row._id)\r\n      row._id=uuidv4()\r\n  })\r\n  const [value, setValue] = useState<any>(initialValue && isArray(initialValue)? initialValue : [])\r\n  const [gridApi, setGridApi] = useState<any>(null)\r\n\r\n  const addRow = () => {\r\n    const newRow = {\r\n      _id: uuidv4(),\r\n    }\r\n    value.push(newRow)\r\n    gridApi.setRowData(value);\r\n    onChange(value)\r\n  }\r\n\r\n  const deleteRow = (props) => {\r\n    const selectedId = props.data?._id\r\n    const newValue = value.filter(function (dataItem) {\r\n      return dataItem._id != selectedId\r\n    });\r\n    props.api.setRowData(newValue);\r\n    onChange(newValue)\r\n  }\r\n\r\n  const RowActions = (props: any) => {\r\n    return (\r\n      <Dropdown\r\n        assistiveText={{ icon: 'Options' }}\r\n        iconCategory=\"utility\"\r\n        iconName=\"down\"\r\n        iconVariant=\"border-filled\"\r\n        iconSize='x-small'\r\n        width='x-small'\r\n        menuPosition=\"overflowBoundaryElement\"\r\n        onSelect={(option) => {\r\n          if (option.value === 'delete') {\r\n            deleteRow(props)\r\n          }\r\n        }}\r\n        options={[\r\n          { label: '删除', value: 'delete' }\r\n        ]}\r\n      />\r\n    )\r\n  }\r\n\r\n  const onCellClicked = ($event) => {\r\n    if (mode == 'read')\r\n      return;\r\n    $event.api.startEditingCell({\r\n      rowIndex: $event.rowIndex,\r\n      colKey: $event.column.colId\r\n    });\r\n  };\r\n\r\n  const onRowDragEnd = (e) => {\r\n    var rowData = [];\r\n    e.api.forEachNode(function (node) {\r\n      rowData.push(node.data);\r\n    });\r\n    setValue(rowData)\r\n    onChange(rowData)\r\n  };\r\n\r\n  const getRowNodeId = function (data) {\r\n    return data._id;\r\n  };\r\n\r\n  const getColumns = ()=>{\r\n\r\n    const {sub_fields=[]} = fieldSchema;\r\n\r\n    const columns:any[] = [{\r\n      rowDrag: mode == 'edit',\r\n      hide: !(mode == 'edit'),\r\n      resizable: false,\r\n      width: 35,\r\n      maxWidth: 35,\r\n      minWidth: 35,\r\n    }];\r\n    forEach(sub_fields, (field, fieldName)=>{\r\n      columns.push({\r\n        field: fieldName,\r\n        headerName: field.label?field.label:fieldName,\r\n        width: field.is_wide? 300: 150,\r\n        minWidth: field.is_wide? 300: 150,\r\n        resizable: true,\r\n        filter: true,\r\n        cellRenderer: 'AgGridCellRender',\r\n        cellRendererParams: {\r\n          fieldSchema: field,\r\n          valueType: field.type,\r\n          mode\r\n        },\r\n        cellEditor: 'AgGridCellEditor',\r\n        cellEditorParams: {\r\n          fieldSchema: field,\r\n          valueType: field.type,\r\n          mode,\r\n        },\r\n        // key: fieldName,\r\n        // dataIndex: fieldName,\r\n        // title: field.label?field.label:fieldName,\r\n        // valueType: field.type,\r\n        editable: !field.readonly,\r\n      })\r\n    });\r\n    // 操作按钮\r\n    columns.push({\r\n      hide: !(mode == 'edit'),\r\n      width: 50,\r\n      maxWidth: 50,\r\n      minWidth: 50,\r\n      resizable: false,\r\n      cellRenderer: 'rowActions',\r\n      cellEditor: 'rowActions',\r\n    });\r\n    return columns\r\n  }\r\n  return (\r\n    <div className=\"ag-theme-balham steedos-grid\">\r\n      <AgGridReact\r\n        modules={AllCommunityModules}\r\n        immutableData={true}\r\n        getRowNodeId={getRowNodeId}\r\n        rowDragManaged={true}\r\n        animateRows={true}\r\n        rowData={value}\r\n        columnDefs={getColumns()}\r\n        stopEditingWhenGridLosesFocus={true}\r\n        onRowDragEnd={onRowDragEnd.bind(this)}\r\n        onCellClicked={onCellClicked}\r\n        onGridReady={(params) => {\r\n          setGridApi(params.api);\r\n          params.api.sizeColumnsToFit();\r\n        }}\r\n        suppressNoRowsOverlay={true}\r\n        frameworkComponents = {{\r\n          AgGridCellRenderer: AgGridCellRenderer,\r\n          AgGridCellEditor: AgGridCellEditor,\r\n          rowActions: RowActions,\r\n        }}\r\n      />\r\n      { mode == 'edit' && (\r\n        <Button\r\n          iconCategory=\"utility\"\r\n          iconName=\"add\"\r\n          iconPosition=\"left\"\r\n          label=\"新建\"\r\n          variant=\"base\"\r\n          onClick={()=>addRow()}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const grid = {\r\n  render: (text: any, props: any) => {\r\n    return (\r\n        <ObjectFieldGrid {...props} mode='read'/>\r\n    )\r\n  },\r\n  renderFormItem: (_: any, props: any) => {\r\n    return (\r\n        <ObjectFieldGrid {...props} mode='edit'/>\r\n    )\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { Image } from \"antd\";\r\nimport { Settings , API} from '@steedos/builder-store';\r\nimport FieldImage from '@ant-design/pro-field/es/components/Image';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\n/*\r\n * 对象字段类型组件\r\n * 定义对象的key,value键值对结构，可在界面编辑该对象结构的数据并保存到数据库中\r\n * 组件支持属性\r\n * - id : string\r\n * - name: string\r\n * 比如华炎魔方space_users对象中有一个avatar字段\r\n *  avatar:\r\n *    type: \"avatar\"\r\n *    label: \"头像\"\r\n *    name: \"avatra\"\r\n * 对应的组件属性具体为\r\n * - type: \"image\"\r\n * - multiple: true\r\n * \r\n * 保存到spa_lfa1表记录中对应为以下效果\r\n *    \"imgs__c\": \"iHXH3SrYP5ZcarQbX\"\r\n*/\r\n\r\nexport const ImageField = observer((props: any) => {\r\n    const { fieldProps = {} ,mode ,text, fileType} = props;\r\n    let { onChange } = fieldProps;\r\n\r\n    if (mode === 'read') {\r\n        let url = Settings.rootUrl + '/api/files/'+fileType+'/' + text;\r\n        return (<Image alt=\"图片\" width={32} src={url} />)\r\n        // return (<FieldImage {...proFieldProps} />)\r\n    }\r\n    if (mode === 'edit') {\r\n        // props.name = \"file\" //TODO Upload组件中会自动将参数 name 的 value 作为一个参数传递给后端\r\n        const proProps = Object.assign({}, props, {name:\"file\"});\r\n        const [fileList, setFileList] = useState([]);\r\n        const onPreview = async file => {\r\n            let src = file.url;\r\n            if (!src) {\r\n                src = await new Promise(resolve => {\r\n                    const reader = new FileReader();\r\n                    reader.readAsDataURL(file.originFileObj);\r\n                    reader.onload = () => resolve(reader.result);\r\n                });\r\n            }\r\n            const image = new window.Image();\r\n            image.src = src;\r\n            const imgWindow = window.open(src);\r\n            imgWindow.document.write(image.outerHTML);\r\n        };\r\n        const propsOther = {\r\n            // http://127.0.0.1:5080/s3/images\r\n            action: Settings.rootUrl + '/s3/'+fileType,\r\n            listType: 'picture-card',\r\n            fileList,\r\n            onPreview,\r\n            type: 'file',\r\n            method: 'post',\r\n            accept: 'image/png, image/jpeg, image/jpg, image/gif',\r\n            // maxCount: '1',\r\n            data: {\r\n                space: Settings.tenantId,\r\n                owner: Settings.userId\r\n            },\r\n            headers: {\r\n                'X-User-Id': Settings.userId,\r\n                'X-Auth-Token': Settings.authToken\r\n            },\r\n            onChange: (options: any) => {\r\n                const { file, fileList: newFileList } = options;\r\n                setFileList(newFileList);\r\n                if (file.status === \"done\") {\r\n                    onChange(file.response._id)\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <Upload {...proProps} {...propsOther}>\r\n                {fileList.length < 1 && '+ Upload'}\r\n            </Upload>\r\n        );\r\n    }\r\n});\r\n\r\nexport const image = {\r\n    render: (text: any, props: any) => {\r\n        return (<ImageField {...props} mode=\"read\" fileType=\"images\"></ImageField>)\r\n    },\r\n\r\n    renderFormItem: (text: any, props: any) => {\r\n        return (<ImageField {...props} mode=\"edit\" fileType=\"images\"></ImageField>)\r\n    }\r\n}","import { boolean } from './boolean';\r\nimport { currency } from './currency';\r\nimport { datetime } from './datetime';\r\nimport { email } from './email';\r\nimport { number } from './number';\r\nimport { percent } from './percent';\r\nimport { select } from './select';\r\nimport { toggle } from './toggle';\r\nimport { url } from './url';\r\nimport { lookup } from './lookup';\r\nimport { master_detail } from './master_detail';\r\nimport { object } from './object';\r\nimport { grid } from './aggrid';\r\nimport { image } from './image';\r\nimport { avatar } from './avatar';\r\nimport { formula } from './formula';\r\nimport { summary } from './summary';\r\nimport { autonumber } from './autonumber';\r\n\r\nexport const valueTypes = {\r\n    boolean,\r\n    currency,\r\n    datetime,\r\n    email,\r\n    number,\r\n    percent,\r\n    select,\r\n    toggle,\r\n    url,\r\n    lookup,\r\n    master_detail,\r\n    image,\r\n    avatar,\r\n    object,\r\n    grid,\r\n    formula,\r\n    summary,\r\n    autonumber,\r\n};","import React from 'react';\r\nimport {ImageField} from './image'\r\n\r\n// 和image相同, 唯一不同的是 fileType 值。\r\nexport const avatar = {\r\n  render: (text: any, props: any) => {\r\n    return (<ImageField {...props} mode=\"read\" fileType=\"avatars\"></ImageField>)\r\n  },\r\n  renderFormItem: (text: any, props: any) => {\r\n    return (<ImageField {...props} mode=\"edit\" fileType=\"avatars\"></ImageField>)\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n\r\n// 公式类型类型字段\r\n// value 值为服务端自动生成的字符串\r\n// 编辑时只读。显示时直接显示 value\r\nexport const formula = {\r\n  render: (text: any, props: any) => {\r\n    return (<span>{text}</span>)\r\n  },\r\n  renderFormItem: (text: any, props: any) => {\r\n    return (<span>{text}</span>)\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const summary = {\r\n  render: (text: any, props: any) => {\r\n    return (<span>{text}</span>)\r\n  },\r\n  renderFormItem: (text: any, props: any) => {\r\n    return (<span>{text}</span>)\r\n  }\r\n}","import React from 'react';\r\n\r\n// 自动编号类型字段\r\n// value 值为服务端自动生成的字符串\r\n// 编辑时只读。显示时直接显示 value\r\nexport const autonumber = {\r\n  render: (text: any, props: any) => {\r\n    return (<span>{text}</span>)\r\n  },\r\n  renderFormItem: (_: any, props: any) => {\r\n    return (<span></span>)\r\n  }\r\n}","import React from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { ObjectContext, ObjectContextValueType, RecordQueryRequestParams } from \"./ObjectContext\";\r\nimport { FormProvider } from \"@steedos/builder-form\";\r\nimport {valueTypes} from '../valueTypes'\r\n\r\n/* 通过 valueTypeMap，支持给Form传入第三方自定义控件 */\r\ntype ObjectProviderProps = ObjectContextValueType & {\r\n  children: any,\r\n}\r\n\r\nconst defaultQueryClientConfig: any = {\r\n  defaultOptions: {\r\n    queries:{\r\n      refetchOnWindowFocus: false\r\n    }\r\n  }\r\n}\r\n\r\nexport function ObjectProvider(props: ObjectProviderProps) {\r\n  const {\r\n    locale,\r\n    requestObject,\r\n    requestRecords,\r\n    updateRecord,\r\n    insertRecord,\r\n    queryClient = new QueryClient(defaultQueryClientConfig),\r\n    children,\r\n  } = props;\r\n\r\n  return (\r\n    <ObjectContext.Provider value={{\r\n      queryClient,\r\n      requestObject,\r\n      requestRecords,\r\n      updateRecord,\r\n      insertRecord\r\n    }}>\r\n      <QueryClientProvider client={queryClient}>\r\n        <FormProvider locale={locale} valueTypeMap={valueTypes}>\r\n          {children}\r\n        </FormProvider>\r\n      </QueryClientProvider>\r\n    </ObjectContext.Provider>\r\n  )\r\n}","\r\nimport React from \"react\";\r\n\r\nimport { getSnapshot } from \"mobx-state-tree\";\r\nimport { SteedosClient } from '@steedos/builder-sdk';\r\nimport { SteedosContext } from '..';\r\nimport { ObjectProvider } from \"@steedos/builder-object\";\r\nimport { Settings, API } from \"@steedos/builder-store\";\r\nimport { SteedosIconSettings } from \"@steedos/builder-lightning\";\r\n\r\n/*\r\n参数：\r\n- locale: zh_CN, en_US, zh_TW  TODO: 和steedos的locale值不一样，获取user之后需要转换。\r\n\r\n*/\r\nexport function SteedosProvider(props: any) {\r\n\r\n  const {\r\n    rootUrl,\r\n    tenantId = localStorage.getItem('steedos:spaceId'),\r\n    userId = localStorage.getItem('steedos:userId'),\r\n    authToken = localStorage.getItem('steedos:token'),\r\n    locale,\r\n    iconPath,\r\n  } = props;\r\n\r\n  Settings.setRootUrl(rootUrl);\r\n  Settings.setTenantId(tenantId);\r\n  Settings.setUserId(userId);\r\n  Settings.setAuthToken(authToken);\r\n  Settings.setLocale(locale);\r\n\r\n\r\n  const objectProviderProps = {\r\n    locale,\r\n    requestObject: API.requestObject,\r\n    requestRecords: API.requestRecords,\r\n    updateRecord: API.updateRecord,\r\n    insertRecord: API.insertRecord\r\n  }\r\n\r\n  return (\r\n    <SteedosContext.Provider value={{}}>\r\n      <SteedosIconSettings iconPath={iconPath}>\r\n        <ObjectProvider {...objectProviderProps}>\r\n          {props.children}\r\n        </ObjectProvider>\r\n      </SteedosIconSettings>\r\n    </SteedosContext.Provider>\r\n  )\r\n}","import React, {useContext} from \"react\";\r\n\r\n\r\nexport const SteedosContext = React.createContext<any>(null);\r\n\r\n","export const getCookie = (name: string) => {\r\n    let pattern = RegExp(name + \"=.[^;]*\")\r\n    let matched = document.cookie.match(pattern)\r\n    if (matched) {\r\n        let cookie = matched[0].split('=')\r\n        return cookie[1]\r\n    }\r\n    return ''\r\n}","// eslint-disable-next-line\r\nimport React, { useEffect, useState, useRef, useMemo } from \"react\"\r\n// import logo from \"./logo.svg\"\r\nimport \"./App.less\"\r\n\r\nimport { SteedosProvider } from \"@steedos/builder-object\"\r\nimport { ObjectExpandTable } from \"@steedos/builder-object\"\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Settings, User } from '@steedos/builder-store';\r\nimport { Form,Field } from '@steedos/builder-form';\r\n\r\nimport { Button } from \"antd\"\r\nimport ProCard from \"@ant-design/pro-card\"\r\nimport queryString from \"querystring\"\r\nimport { getAuthToken, getSpaceId, getUserId } from \"./accounts\"\r\nimport useAntdMediaQuery from 'use-media-antd-query';\r\nimport { useResizeObserver } from \"./use-resize-observer\";\r\nimport { Spin } from 'antd';\r\n\r\nexport default observer((props: any) => {\r\n  \r\n  let queryObject = queryString.parse(window.location.search.slice(1))\r\n  const providerProps = {\r\n    rootUrl: queryObject.rooturl || Settings.rootUrl || \"/\",\r\n    tenantId:\r\n      queryObject.spaceid || getSpaceId() || Settings.tenantId, //REACT_APP_STEEDOS_TENANT_ID,\r\n    userId: queryObject.userid || getUserId() || Settings.userId,\r\n    authToken:\r\n      queryObject.authtoken || getAuthToken() || Settings.authToken,\r\n    locale: Settings.locale,\r\n  }\r\n\r\n  const [selectedUser, setSelectedUsers] = useState([])\r\n  const [selectedUserInTab1, setSelectedUsersInTab1] = useState([])\r\n  const [selectedUserInTab2, setSelectedUsersInTab2] = useState([])\r\n  const [selectedOrgForMobile, setSelectedOrgForMobile] = useState()\r\n  const [spaceUsersFilters, setSpaceUsersFilters] = useState([])\r\n  const [selectedContactForMobile, setSelectedContactForMobile] = useState()\r\n  const [contactsFilters, setContactsFilters] = useState([])\r\n\r\n  const handleOnTab1Change = (users: any) => {\r\n    setSelectedUsersInTab1(users)\r\n  }\r\n  const handleOnTab2Change = (users: any) => {\r\n    setSelectedUsersInTab2(users)\r\n  }\r\n\r\n  const resizeSubject = useRef()\r\n  const contentRect: any = useResizeObserver(resizeSubject, (current: any)=>(current.firstChild));\r\n  const contentRectHeight = contentRect.height;\r\n  const scroll = useMemo(() => {\r\n    let scrollHeight = contentRectHeight - 276;\r\n    if(selectedUserInTab1 && selectedUserInTab1.length){\r\n      scrollHeight -= 64;\r\n    }\r\n    return { y: scrollHeight }\r\n  }, [contentRectHeight, selectedUserInTab1]);\r\n\r\n  useEffect(() => {\r\n    setSelectedUsers([...selectedUserInTab1, ...selectedUserInTab2])\r\n  }, [selectedUserInTab1, selectedUserInTab2])\r\n\r\n  // const handleOnChange = (users: any) => {\r\n  //   setSelectedUsers(users)\r\n  //   // setSelectedEmails(users.map(({ name, email }) => `${name}<${email}>`))\r\n  // }\r\n  const confirmChose = () => {\r\n    ;(window.opener || window.parent).postMessage(\r\n      {\r\n        ...queryObject,\r\n        selection: selectedUser.map(({ name, email }) => ({ name, email })),\r\n      },\r\n      \"*\"\r\n    )\r\n\r\n    // window.close()\r\n    // setSelectedEmails(users.map(({ name, email }) => `${name}<${email}>`))\r\n  }\r\n  const colSize = useAntdMediaQuery();\r\n  const isMobile = (colSize === 'sm' || colSize === 'xs');\r\n\r\n  const toolbar = isMobile ? {subTitle: false} : null;\r\n\r\n  const userSession = User.getSession();\r\n  let defaultSaceUsersFilters: any = [\"user_accepted\", \"=\", true];\r\n  let orgExpandFilters: any = [\"hidden\", \"!=\", true];\r\n  if (User.isLoading){\r\n    // 这里不可以直接return (<div>Loading</div>) 上面有调用useRef\r\n    console.log(\"Loading session...\")\r\n  }\r\n  else{\r\n    if(!userSession.is_space_admin){\r\n      const orgIds = User.getCompanyOrganizationIds();\r\n      if(orgIds && orgIds.length){\r\n        orgExpandFilters = [orgExpandFilters, [[\"_id\", \"=\", orgIds], \"or\", [\"parents\", \"=\", orgIds]]];\r\n        // 不是管理员时，要限定右侧用户范围为当前用户所属分部关联组织内\r\n        defaultSaceUsersFilters = [defaultSaceUsersFilters, [\"organizations_parents\", \"=\", orgIds]];\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(User.isLoading){\r\n      return;\r\n    }\r\n    if(selectedOrgForMobile){\r\n      setSpaceUsersFilters([defaultSaceUsersFilters, [\"organizations_parents\", \"=\", selectedOrgForMobile]])\r\n    }\r\n    else{\r\n      setSpaceUsersFilters(defaultSaceUsersFilters)\r\n    }\r\n  }, [selectedOrgForMobile])\r\n\r\n  useEffect(() => {\r\n    if(User.isLoading){\r\n      return;\r\n    }\r\n    if(selectedContactForMobile){\r\n      setContactsFilters([[\"group\", \"=\", selectedContactForMobile]])\r\n    }\r\n    else{\r\n      setContactsFilters([])\r\n    }\r\n  }, [selectedContactForMobile])\r\n\r\n  const organizationColumns = isMobile ? [\r\n    {\r\n      fieldName: \"name\",\r\n      hideInSearch: true,\r\n      sorter: true,\r\n    },\r\n    {\r\n      fieldName: \"email\",\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      fieldName: \"organizations_parents\",\r\n      hideInTable: true\r\n    }\r\n  ] : [\r\n    {\r\n      fieldName: \"name\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      fieldName: \"email\",\r\n    },\r\n    {\r\n      fieldName: \"organizations_parents\",\r\n      hideInTable: true,\r\n      hideInSearch: true,\r\n      expandType: \"tree\",\r\n      expandReference: \"organizations\",\r\n      expandNameField: \"name\",\r\n      expandParentField: \"parent\",\r\n      expandFilters: orgExpandFilters\r\n    }\r\n  ];\r\n  const groupColumns = isMobile ? [\r\n    {\r\n      fieldName: \"name\",\r\n      sorter: true,\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      fieldName: \"email\",\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      fieldName: \"group\",\r\n      hideInTable: true\r\n    },\r\n  ] : [\r\n    {\r\n      fieldName: \"name\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      fieldName: \"email\",\r\n    },\r\n    {\r\n      fieldName: \"group\",\r\n      hideInTable: true,\r\n      hideInSearch: true,\r\n      expandType: \"list\",\r\n      expandReference: \"contacts_group\",\r\n      expandNameField: \"name\"\r\n    }\r\n  ];\r\n\r\n  let searchConfig: any = {\r\n    filterType: 'light',\r\n  };\r\n  let spaceUserSearchBar: any;\r\n  let contactSearchBar: any;\r\n  if(isMobile){\r\n    searchConfig = false;\r\n    spaceUserSearchBar = ()=> [(\r\n      <Form\r\n        onValuesChange={(changeValues: any)=>{\r\n          console.log(\"=spaceUserSearchBar=changeValues===\", changeValues)\r\n          setSelectedOrgForMobile(changeValues.organizations_parents);\r\n        }}\r\n      >\r\n        <Field \r\n          name=\"organizations_parents\"\r\n          showSearch\r\n          valueType=\"lookup\"\r\n          mode=\"edit\"\r\n          placeholder=\"请选择所属组织\"\r\n          fieldSchema={{\r\n            reference_to: \"organizations\",\r\n            filters: orgExpandFilters\r\n          }}\r\n        />\r\n      </Form>\r\n    )]\r\n    contactSearchBar = ()=> [(\r\n      <Form\r\n        onValuesChange={(changeValues: any)=>{\r\n          console.log(\"=contactSearchBar=changeValues===\", changeValues)\r\n          setSelectedContactForMobile(changeValues.group);\r\n        }}\r\n      >\r\n        <Field \r\n          name=\"group\"\r\n          showSearch\r\n          valueType=\"lookup\"\r\n          mode=\"edit\"\r\n          placeholder=\"请选择所属分组\"\r\n          fieldSchema={{\r\n            reference_to: \"contacts_group\"\r\n          }}\r\n        />\r\n      </Form>\r\n    )]\r\n  }\r\n  return (\r\n    <SteedosProvider {...providerProps}>\r\n      <div className=\"App\" ref={resizeSubject}>\r\n        <ProCard\r\n          className=\"main-container\"\r\n          title=\"\"\r\n          split=\"horizontal\"\r\n          bordered\r\n          headerBordered\r\n        >\r\n          <ProCard\r\n            style={{ height: \"calc(100% - 60px)\" }}\r\n            tabs={{\r\n              type: \"card\",\r\n            }}\r\n            // ref={resizeSubject}\r\n          >\r\n            <ProCard.TabPane\r\n              key=\"tab1\"\r\n              tab={`用户${\r\n                selectedUserInTab1.length > 0\r\n                  ? \"(\" + selectedUserInTab1.length + \")\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              {\r\n                User.isLoading ? (<Spin />) : (\r\n                  <ObjectExpandTable\r\n                    onChange={handleOnTab1Change}\r\n                    objectApiName=\"space_users\"\r\n                    search={searchConfig}\r\n                    columnFields={organizationColumns}\r\n                    scroll={scroll}\r\n                    debounceTime={500}\r\n                    filters={spaceUsersFilters}\r\n                    toolBarRender={spaceUserSearchBar}\r\n                    toolbar={toolbar}\r\n                  />\r\n                )\r\n              }\r\n            </ProCard.TabPane>\r\n            <ProCard.TabPane\r\n              key=\"tab2\"\r\n              tab={`联系人${\r\n                selectedUserInTab2.length > 0\r\n                  ? \"(\" + selectedUserInTab2.length + \")\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <ObjectExpandTable\r\n                onChange={handleOnTab2Change}\r\n                rowKey=\"_id\"\r\n                objectApiName=\"contacts__c\"\r\n                search={searchConfig}\r\n                columnFields={groupColumns}\r\n                scroll={scroll}\r\n                debounceTime={500}\r\n                filters={contactsFilters}\r\n                toolBarRender={contactSearchBar}\r\n                toolbar={toolbar}\r\n              />\r\n            </ProCard.TabPane>\r\n          </ProCard>\r\n          <ProCard\r\n            style={{ height: \"60px\" }}\r\n            bodyStyle={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Button\r\n              disabled={selectedUser.length <= 0}\r\n              onClick={confirmChose}\r\n              type=\"primary\"\r\n            >\r\n              确定\r\n            </Button>\r\n          </ProCard>\r\n        </ProCard>\r\n      </div>\r\n    </SteedosProvider>\r\n  )\r\n});","import { getCookie } from './cookie';\r\n\r\nexport const getUserId = () => {\r\n    return getCookie(\"X-User-Id\");\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n    return getCookie(\"X-Auth-Token\");\r\n}\r\n\r\nexport const getSpaceId = () => {\r\n    return getCookie(\"X-Space-Id\");\r\n}","import { useEffect, useState, useRef } from \"react\";\r\nimport { isFunction } from 'lodash';\r\n\r\nexport function useResizeObserver(targetRef, query?: Function) {\r\n\tconst [contentRect, setContentRect] = useState({});\r\n\tconst resizeObserver = useRef(null);\r\n\t\r\n\tif(!isFunction(query)){\r\n\t\tquery = (current: any)=>(current)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\"ResizeObserver\" in window) {\r\n\t\t\tobserve(ResizeObserver);\r\n\t\t} else {\r\n\t\t\timport(\"resize-observer-polyfill\").then(observe);\r\n\t\t}\r\n\r\n\t\tfunction observe(ResizeObserver) {\r\n\t\t\tresizeObserver.current = new ResizeObserver((entries: any) => {\r\n\t\t\t\tconst { width, height, top, right, bottom, left } = entries[0].contentRect;\r\n\t\t\t\tsetContentRect({ width, height, top, right, bottom, left });\r\n\t\t\t});\r\n\t\t\tif (targetRef.current) {\r\n\t\t\t\t// resizeObserver.current.observe(targetRef.current.firstChild);\r\n\t\t\t\tresizeObserver.current.observe(query(targetRef.current));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn disconnect;\r\n\t}, [targetRef]);\r\n\r\n\tfunction disconnect() {\r\n\t\tif (resizeObserver.current) {\r\n\t\t\t// resizeObserver.current.firstChild.disconnect();\r\n\t\t\tquery(resizeObserver.current).disconnect();\r\n\t\t}\r\n\t}\r\n\r\n\treturn contentRect;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />\r\n  // </React.StrictMode>,\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { each, isArray, forEach, isObject, isString, keys, isFunction} from 'lodash';\r\nexport function saveEval(js: string){\r\n\ttry{\r\n\t\treturn eval(js)\r\n\t}catch (e){\r\n\t\tconsole.error(e, js);\r\n\t}\r\n};\r\n\r\nconst getFieldSchema = (fieldName: any, objectConfig: any)=>{\r\n  let fieldSchema: any = {};\r\n  const field = objectConfig.fields[fieldName];\r\n  const fieldType = field && field.type;\r\n  let sub_fields: any;\r\n  // fieldName变量中可能带$和.符号，需要转换成RegExp匹配的带转义符的字符\r\n  const fieldNameForReg = fieldName.replace(/\\$/g,\"\\\\$\").replace(/\\./g,\"\\\\.\");\r\n  switch(fieldType){\r\n    case \"object\":\r\n      // 根据对象的子表字段信息，返回子表配置属性\r\n      sub_fields = {};\r\n      each(objectConfig.fields, (fieldItem, key) => {\r\n        const reg = new RegExp(`^${fieldNameForReg}\\\\.\\\\\\w+$`); //以fieldName开头，且用.号连接下一个字段名\r\n        // if(key.startsWith(`${fieldName}.`)){\r\n        if(reg.test(key)){\r\n          // members.users、instances.$._id、sharing.$之类的复合字段中取出最后一个.字段名，但是不匹配$结尾的字段名\r\n          let matches = key.match(/.(\\w+)$/g);\r\n          let lastFieldKey = matches && matches[0].replace(\".\", \"\");\r\n          if(lastFieldKey){\r\n            sub_fields[lastFieldKey] = getFieldSchema(key, objectConfig);   ;                           \r\n          }\r\n        }\r\n      });\r\n      fieldSchema = Object.assign({}, field, {sub_fields});\r\n      break;\r\n    case \"grid\":\r\n      // 根据对象的子表字段信息，返回子表配置属性\r\n      sub_fields = {};\r\n      each(objectConfig.fields, (fieldItem, key) => {\r\n        const reg = new RegExp(`^${fieldNameForReg}\\\\.\\\\$\\\\.\\\\\\w+$`); //以fieldName开头，且后面接着用.$.号连接下一个字段名\r\n        // if(key.startsWith(`${fieldName}.$.`)){\r\n        if(reg.test(key)){\r\n          // members.users、instances.$._id、sharing.$之类的复合字段中取出最后一个.字段名，但是不匹配$结尾的字段名\r\n          let matches = key.match(/.(\\w+)$/g);\r\n          let lastFieldKey = matches && matches[0].replace(\".\", \"\");\r\n          if(lastFieldKey){\r\n            sub_fields[lastFieldKey] = getFieldSchema(key, objectConfig);                           \r\n          }\r\n        }\r\n      });\r\n      fieldSchema = Object.assign({}, field, {sub_fields});\r\n      break;\r\n    case \"lookup\":\r\n      if(field.reference_to === \"users\"){\r\n        fieldSchema = Object.assign({}, field, {\r\n          reference_to: \"space_users\",\r\n          reference_to_field: \"user\"\r\n        });\r\n      }\r\n      else if(field._reference_to){\r\n        // 如果只有_reference_to， 那就给field增加一个reference_to属性。\r\n        let reference_to = saveEval(`(${field._reference_to})`);\r\n        fieldSchema = Object.assign({}, field, {reference_to});\r\n      }\r\n      else{\r\n        fieldSchema = field;\r\n      }\r\n      // TODO: 暂时将以下两个属性代码注释，后期优化放开\r\n      // if(field._filtersFunction){\r\n      //   let filtersFunction = saveEval(`(${field._filtersFunction})`);\r\n      //   fieldSchema = Object.assign({}, field, {filtersFunction});\r\n      // }\r\n      // if(field._optionsFunction){\r\n      //   let optionsFunction = saveEval(`(${field._optionsFunction})`);\r\n      //   fieldSchema = Object.assign({}, field, {optionsFunction});\r\n      // }\r\n      break;\r\n    // TODO: 暂时将select转换隐藏\r\n    // case \"select\":\r\n    //   if(field._optionsFunction){\r\n    //     let optionsFunction = saveEval(`(${field._optionsFunction})`);\r\n    //     fieldSchema = Object.assign({}, field, {optionsFunction});\r\n    //   }else{\r\n    //     fieldSchema = field;\r\n    //   }\r\n    //   break;\r\n    default:\r\n      fieldSchema = field;\r\n      break;\r\n  }\r\n  return fieldSchema;\r\n}\r\n\r\n/**\r\n * 转换传入的objectConfig中的 object, grid 类型字段，生成 sub_fields 属性，相关函数为字段串格式转换为函数\r\n * @param objectConfig 对象配置文件中字段所属对象的配置\r\n * @returns 转换后的fields\r\n */\r\n export function getFieldsSchema(objectConfig: any) {\r\n  let fieldsSchema: any = {}\r\n  // console.log(\"convertFieldsSchema===\", objectConfig.name, JSON.stringify(objectConfig.fields));\r\n  each(objectConfig.fields, (field, fieldName) => {\r\n    if(/\\w+\\.($\\.)?(\\w+)?/.test(fieldName)){\r\n      // 所有的members.users、instances.$._id、sharing.$之类的复合字段会根据需要自动加到sub_fields中，所以不用再加到fieldsSchema中\r\n      return;\r\n    }\r\n    const fieldSchema = getFieldSchema(fieldName, objectConfig);\r\n    if(fieldSchema){\r\n      fieldsSchema[fieldName] = fieldSchema;\r\n    }\r\n  });\r\n  // console.log(\"convertFieldsSchema====fieldsSchema===\", objectConfig.name, fieldsSchema);\r\n  return fieldsSchema;\r\n}\r\n\r\n\r\n/**\r\n  视图过虑器需要支持function，后台转成字符串，前台eval成函数\r\n  让过虑器支持两种function方式：\r\n  1. 整个filters为function:\r\n  如：\r\n  filters: ()->\r\n    return [[[\"object_name\",\"=\",\"project_issues\"],'or',[\"object_name\",\"=\",\"tasks\"]]]\r\n  2. filters内的filter.value为function\r\n  如：\r\n  filters: [[\"object_name\", \"=\", ()->\r\n    return \"project_issues\"\r\n  ]]\r\n  或\r\n  filters: [{\r\n    \"field\": \"object_name\"\r\n    \"operation\": \"=\"\r\n    \"value\": ()->\r\n      return \"project_issues\"\r\n  }]\r\n */\r\nconst getListViewSchema = (listView: any)=>{\r\n  if(listView._filters){\r\n    let filters = saveEval(`(${listView._filters})`);\r\n    return Object.assign({}, listView, {filters});\r\n  }\r\n  else if(isArray(listView.filters)){\r\n    forEach(listView.filters, function(filter: any, _index) {\r\n      if (isArray(filter)) {\r\n        if (filter.length === 4 && isString(filter[2]) && filter[3] === \"FUNCTION\") {\r\n          filter[2] = saveEval(\"(\" + filter[2] + \")\");\r\n          filter.pop();\r\n        }\r\n        if (filter.length === 4 && isString(filter[2]) && filter[3] === \"DATE\") {\r\n          filter[2] = new Date(filter[2]);\r\n          return filter.pop();\r\n        }\r\n      } else if (isObject(filter) as any) {\r\n        if (isString(filter && filter._value)) {\r\n          return filter.value = saveEval(\"(\" + filter._value + \")\");\r\n        } else if (filter._is_date === true) {\r\n          return filter.value = new Date(filter.value);\r\n        }\r\n      }\r\n    });\r\n    return listView;\r\n  }\r\n  else{\r\n    return listView;\r\n  }\r\n}\r\n\r\n/**\r\n * 转换传入的objectConfig中list_views，相关函数为字段串格式转换为函数\r\n * @param objectConfig 对象配置文件中列表视图所属对象的配置\r\n * @returns 转换后的list_views\r\n */\r\n export function getListViewsSchema(objectConfig: any) {\r\n  let listViewsSchema: any = {}\r\n  each(objectConfig.list_views, (listView, listName) => {\r\n    const listViewSchema = getListViewSchema(listView);\r\n    if(listViewSchema){\r\n      listViewsSchema[listName] = listViewSchema;\r\n    }\r\n  });\r\n  return listViewsSchema;\r\n}\r\n\r\n/**\r\n * 转换传入的objectConfig中的fields及list_views\r\n * @param objectConfig 对象配置文件中该字段所属对象的配置\r\n * @returns 转换后的对象\r\n */\r\n export function convertObjectSchema(objectConfig: any) {\r\n  objectConfig.fields = getFieldsSchema(objectConfig);\r\n  // console.log(\"convertObjectSchema====objectConfig.fields===\", objectConfig.name, objectConfig.fields);\r\n  objectConfig.list_views = getListViewsSchema(objectConfig);\r\n  // console.log(\"convertObjectSchema====objectConfig.list_views===\", objectConfig.name, objectConfig.list_views);\r\n}\r\n\r\nexport function getObjectOdataExpandFields(object: any,columns: string[]) {\r\n  var expand_fields, fields:[];\r\n  expand_fields = [];\r\n  fields = object.fields;\r\n  if (!columns || columns.length ==0) {\r\n    columns = keys(fields);\r\n  }\r\n  each(columns,(n)=>{\r\n    var ref1, ref2;\r\n    if(fields){\r\n      if (((ref1 = fields[n]) != null ? ref1.type : void 0) === \"master_detail\" || ((ref2 = fields[n]) != null ? ref2.type : void 0) === \"lookup\") {\r\n        return expand_fields.push(n)\r\n      }\r\n    }\r\n  })\r\n  return expand_fields.join(\",\");\r\n}\r\n\r\nexport function convertRecordsForLookup(data, fieldsSchema) {\r\n  /* TODO: lookup组件中reference_to是数组时，初始化值需要 {o:'contract_types',ids:['fcxTeWMEvgdMQnvwZ'],labels:[\"合同分类1\"]} 这种格式，\r\n  故 将以下格式转换下。\r\n  contracts_reference_to_func: {\r\n    \"reference_to._o\": \"contract_types\",\r\n    \"reference_to.o\": \"contract_types\",\r\n    '_NAME_FIELD_VALUE': \"合同分类1\",\r\n    '_id': \"fcxTeWMEvgdMQnvwZ\"\r\n  }, \r\n  当lookup组件中 reference_to不是数组，初始化值需要 string || [] ; 也就是 '_id' 的值。\r\n  */\r\n  let recoreds=data && data.value;\r\n  if(recoreds && recoreds.length){\r\n    data.value = recoreds.map((record: any)=>{\r\n      each(record, (fieldValue, key)=>{\r\n        if(fieldValue){\r\n          const fieldSchema = fieldsSchema && fieldsSchema[key];\r\n          if(fieldSchema && ['lookup', 'master_detail'].indexOf(fieldSchema.type) > -1 && fieldSchema.reference_to){\r\n            let fieldReferenceTo :any;\r\n            if(fieldSchema.reference_to){\r\n              fieldReferenceTo=fieldSchema.reference_to;\r\n              if(isFunction(fieldReferenceTo)){\r\n                fieldReferenceTo = fieldReferenceTo();\r\n              }\r\n            }\r\n            if(fieldReferenceTo && fieldReferenceTo.length){\r\n              if(!isArray(fieldValue)){\r\n                fieldValue=[fieldValue];\r\n              }\r\n              let referenceTo:any, ids=[], labels=[];\r\n              \r\n              forEach(fieldValue,(val)=>{\r\n                referenceTo=val['reference_to.o'];\r\n                if(referenceTo){\r\n                  const id = val[\"_id\"];\r\n                  const label = val[\"_NAME_FIELD_VALUE\"];\r\n                  if(id){\r\n                    ids.push(id)\r\n                  }\r\n                  if(label){\r\n                    labels.push(label)\r\n                  }\r\n                }\r\n              })\r\n              if(referenceTo){\r\n                if( isArray(fieldReferenceTo)){\r\n                  record[key].o = referenceTo;\r\n                  if(ids && ids.length){\r\n                    record[key].ids = ids;\r\n                  }\r\n                  if(labels && labels.length){\r\n                    record[key].labels = labels;\r\n                  }\r\n                  delete record[key][\"reference_to._o\"];\r\n                  delete record[key][\"reference_to.o\"];\r\n                  delete record[key]._NAME_FIELD_VALUE;\r\n                  delete record[key]._id;\r\n                }else{\r\n                  record[key] = fieldSchema.multiple ? ids : ids[0];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n      return record;\r\n    });\r\n  }\r\n  return data;\r\n}","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ref--5-oneOf-9-2!./App.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".App {\\n  text-align: center;\\n}\\n.main-container {\\n  position: absolute;\\n}\\n@media (prefers-reduced-motion: no-preference) {\\n  .App-logo {\\n    animation: App-logo-spin infinite 20s linear;\\n  }\\n}\\n.App-header {\\n  background-color: #282c34;\\n  min-height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: calc(10px + 2vmin);\\n  color: white;\\n}\\n.App-link {\\n  color: #61dafb;\\n}\\n@keyframes App-logo-spin {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n.ant-pro-card,\\n.ant-pro-card-tabs,\\n.ant-tabs,\\n.ant-tabs-content,\\n.ant-pro-table {\\n  height: 100%;\\n}\\n.ant-pro-card-tabpane > .ant-pro-card > .ant-pro-card-body {\\n  padding: 12px;\\n}\\n/* tree下拉框手机端样式调整 */\\n@media (max-width: 768px) {\\n  .ant-dropdown {\\n    width: 100%;\\n  }\\n  .ant-dropdown .ant-pro-core-field-dropdown-overlay .ant-pro-core-field-dropdown-content {\\n    height: 600px;\\n  }\\n  .ant-pro-table-list-toolbar .ant-pro-table-list-toolbar-right {\\n    width: 100%;\\n  }\\n  .ant-pro-table-list-toolbar .ant-pro-table-list-toolbar-right .ant-space-item {\\n    width: 100%;\\n  }\\n  .ant-pro-table-list-toolbar .ant-pro-table-list-toolbar-right .ant-space-item .ant-space {\\n    width: 100%;\\n  }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/App.less\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAA;AACF;AACA;EACE,kBAAA;AACF;AAEA;EACE;IACE,4CAAA;EAAF;AACF;AAGA;EACE,yBAAA;EACA,iBAAA;EACA,aAAA;EACA,sBAAA;EACA,mBAAA;EACA,uBAAA;EACA,6BAAA;EACA,YAAA;AADF;AAIA;EACE,cAAA;AAFF;AAKA;EACE;IACE,uBAAA;EAHF;EAKA;IACE,yBAAA;EAHF;AACF;AAMA;;;;;EAKE,YAAA;AAJF;AAOA;EACE,aAAA;AALF;AACA,mBAAmB;AAQnB;EACE;IACI,WAAA;EANJ;EAKA;IAIQ,aAAA;EANR;EAUA;IAEI,WAAA;EATJ;EAOA;IAIM,WAAA;EARN;EAIA;IAMQ,WAAA;EAPR;AACF\",\"sourcesContent\":[\".App {\\n  text-align: center;\\n}\\n.main-container {\\n  position: absolute;\\n}\\n\\n@media (prefers-reduced-motion: no-preference) {\\n  .App-logo {\\n    animation: App-logo-spin infinite 20s linear;\\n  }\\n}\\n\\n.App-header {\\n  background-color: #282c34;\\n  min-height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: calc(10px + 2vmin);\\n  color: white;\\n}\\n\\n.App-link {\\n  color: #61dafb;\\n}\\n\\n@keyframes App-logo-spin {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n.ant-pro-card,\\n.ant-pro-card-tabs,\\n.ant-tabs,\\n.ant-tabs-content,\\n.ant-pro-table {\\n  height: 100%;\\n}\\n\\n.ant-pro-card-tabpane > .ant-pro-card > .ant-pro-card-body {\\n  padding: 12px;\\n}\\n\\n/* tree下拉框手机端样式调整 */\\n@media (max-width: 768px){\\n  .ant-dropdown{\\n      width: 100%;\\n      .ant-pro-core-field-dropdown-overlay{\\n        .ant-pro-core-field-dropdown-content{\\n          height: 600px;\\n        }\\n      }\\n  }\\n  .ant-pro-table-list-toolbar{\\n    .ant-pro-table-list-toolbar-right{\\n      width: 100%;\\n      .ant-space-item{\\n        width: 100%;\\n        .ant-space{\\n          width: 100%;\\n        }\\n      }\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--5-oneOf-9-2!./Field.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".builder-form .ant-form-item.field {\\n  margin-bottom: 0;\\n  padding-bottom: 2px;\\n  padding-top: 2px;\\n}\\n.builder-form .ant-form-item.field.mode-read {\\n  border-bottom: 1px solid #dddbda;\\n}\\n.builder-form .ant-form-item.field.mode-edit {\\n  padding-bottom: 4px;\\n  padding-top: 4px;\\n}\\n.builder-form .ant-form-item.field.mode-edit .ant-input-number {\\n  width: 100%;\\n}\\n.builder-form .ant-form-item.field.mode-edit .ant-picker {\\n  width: 100%;\\n}\\n.builder-form .ant-form-vertical .ant-form-item-label {\\n  padding: 0;\\n}\\n.builder-form .ant-form-item-control-input {\\n  min-height: 16px;\\n}\\n.builder-form .ant-form-item .ant-form-item-label {\\n  white-space: inherit;\\n  padding-bottom: 0;\\n}\\n.builder-form .ant-form-item .ant-form-item-label > label {\\n  font-size: 12px;\\n  height: 24px;\\n  color: var(--lwc-colorTextLabel, #3e3e3c);\\n  height: auto;\\n  white-space: inherit;\\n}\\n.builder-form .slds-section__title {\\n  font-weight: inherit;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://../builder-form/src/components/Field.less\"],\"names\":[],\"mappings\":\"AAAA;EAEI,gBAAA;EACA,mBAAA;EACA,gBAAA;AAAJ;AACI;EACE,gCAAA;AACN;AAOI;EAOE,mBAAA;EACA,gBAAA;AAXN;AAGI;EAEI,WAAA;AAFR;AAAI;EAKI,WAAA;AAFR;AAjBA;EA2BI,UAAA;AAPJ;AApBA;EA8BI,gBAAA;AAPJ;AAvBA;EAqCM,oBAAA;EACA,iBAAA;AAXN;AA3BA;EAwCQ,eAAA;EACA,YAAA;EACA,yCAAA;EACA,YAAA;EACA,oBAAA;AAVR;AAlCA;EAyDI,oBAAA;AApBJ\",\"sourcesContent\":[\".builder-form {\\n  .ant-form-item.field {\\n    margin-bottom: 0;\\n    padding-bottom: 2px;\\n    padding-top: 2px;\\n    &.mode-read {\\n      border-bottom: 1px solid #dddbda;\\n      // &.type-object {\\n      //   border-bottom: 0\\n      // }\\n      // &.type-grid {\\n      //   border-bottom: 0\\n      // }\\n    }\\n    &.mode-edit {\\n      .ant-input-number {\\n        width: 100%\\n      }\\n      .ant-picker {\\n        width: 100%\\n      }\\n      padding-bottom: 4px;\\n      padding-top: 4px;\\n    }\\n  }\\n  \\n  .ant-form-vertical .ant-form-item-label {\\n    padding: 0;\\n  }\\n  .ant-form-item-control-input {\\n    min-height: 16px;\\n  }\\n\\n\\n  .ant-form-item {\\n\\n    .ant-form-item-label {\\n      white-space: inherit;\\n      padding-bottom: 0;\\n      > label {\\n        font-size: 12px;\\n        height: 24px;\\n        color: var(--lwc-colorTextLabel,rgb(62, 62, 60));\\n        height: auto;\\n        white-space: inherit;\\n      }\\n    }\\n\\n    // &.field.type-object > .ant-form-item-label {\\n    //   display: none;\\n    // }\\n    // &.field.type-grid > .ant-form-item-label {\\n    //   display: none;\\n    // }\\n  }\\n\\n  .slds-section__title {\\n    font-weight: inherit\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--5-oneOf-9-2!./ObjectForm.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".object-form {\\n  padding: 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://../builder-object/src/components/ObjectForm.less\"],\"names\":[],\"mappings\":\"AAAA;EACE,UAAA;AACF\",\"sourcesContent\":[\".object-form {\\n  padding: 0;\\n  // .ant-form-item {\\n  //   margin-bottom: 0;\\n  // }\\n  // .ant-form-vertical .ant-form-item-label {\\n  //   padding: 0;\\n  // }\\n  // .ant-form-item-control-input {\\n  //   min-height: 16px;\\n  // }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--5-oneOf-9-2!./ObjectTable.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".object-table .ant-pro-table-list-toolbar-container {\\n  padding: 8px;\\n  padding-bottom: 8px;\\n}\\n.object-table .ant-pro-table-list-toolbar-filter .ant-form .ant-pro-form-light-filter .ant-pro-form-light-filter-container {\\n  overflow: hidden;\\n}\\n.ant-table.ant-table-fixed-header .ant-table-body {\\n  overflow-y: auto!important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://../builder-object/src/components/ObjectTable.less\"],\"names\":[],\"mappings\":\"AAAA;EAmCI,YAAA;EACA,mBAAA;AAjCJ;AAHA;EA2CU,gBAAA;AArCV;AA6CE;EAGI,0BAAA;AA7CN\",\"sourcesContent\":[\".object-table {\\n  // .ant-pro-table-search {\\n  //   // margin-bottom: 0;\\n  //   // padding-left: 0;\\n  //   // padding-right: 0;\\n  //   form {\\n  //     width: 100%;\\n  //     .ant-row {\\n  //       width: 100%;\\n  //     }\\n  //   }\\n  //   .ant-form-item {\\n  //     -webkit-box-sizing: border-box;\\n  //     box-sizing: border-box;\\n  //     margin: 0;\\n  //     padding: 0;\\n  //     color: rgba(0, 0, 0, 0.85);\\n  //     font-size: 14px;\\n  //     font-variant: tabular-nums;\\n  //     line-height: 1.5715;\\n  //     list-style: none;\\n  //     -webkit-font-feature-settings: \\\"tnum\\\";\\n  //     font-feature-settings: \\\"tnum\\\", \\\"tnum\\\";\\n  //     margin-bottom: 24px;\\n  //     vertical-align: top;\\n  //   }\\n  // }\\n  // .ant-card-body {\\n  //   padding-left: 0;\\n  //   padding-right: 0;\\n  // }\\n  // .ant-table-tbody > tr:last-child > td {\\n  //   border: none;\\n  // }\\n  .ant-pro-table-list-toolbar-container {\\n    padding: 8px;\\n    padding-bottom: 8px;\\n  }\\n  .ant-pro-table-list-toolbar-filter{\\n    .ant-form{\\n      .ant-pro-form-light-filter{\\n        .ant-pro-form-light-filter-container{\\n          // 列表过滤条件区域，如果最后一个过滤字段是下拉框字段会显示水平滚动条\\n          overflow: hidden;\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n.ant-table{\\n  &.ant-table-fixed-header{\\n    .ant-table-body{\\n      // 当使用proTable组件的scroll属性来实现固定表头时，没显示滚动条应该不显示滚动条样式\\n      overflow-y: auto!important;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--5-oneOf-9-2!./ObjectTree.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ant-tree-treenode {\\n  width: 100%;\\n  display: flex;\\n  justify-content: flex-start;\\n}\\n.ant-tree-node-content-wrapper {\\n  flex: 1;\\n  text-align: left;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://../builder-object/src/components/ObjectTree.less\"],\"names\":[],\"mappings\":\"AAAA;EACE,WAAA;EACA,aAAA;EACA,2BAAA;AACF;AACA;EACE,OAAA;EACA,gBAAA;AACF\",\"sourcesContent\":[\".ant-tree-treenode {\\n  width: 100%;\\n  display: flex;\\n  justify-content: flex-start;\\n}\\n.ant-tree-node-content-wrapper {\\n  flex: 1;\\n  text-align: left;\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--5-oneOf-9-2!./ObjectList.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".object-list-item {\\n  margin-bottom: 4px;\\n  padding: 4px;\\n  display: flex;\\n  justify-content: flex-start;\\n  align-items: center;\\n  user-select: none;\\n  cursor: pointer;\\n  padding: 0 4px;\\n  transition: all 0.3s;\\n  background: transparent;\\n  border-radius: 2px;\\n}\\n.object-list-item:hover {\\n  background-color: #f5f5f5;\\n}\\n.object-list-item.selected {\\n  background-color: #bae7ff;\\n}\\n.object-list-item > :first-child {\\n  margin-right: 8px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://../builder-object/src/components/ObjectList.less\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAA;EACA,YAAA;EACA,aAAA;EACA,2BAAA;EACA,mBAAA;EACA,iBAAA;EACA,eAAA;EACA,cAAA;EACA,oBAAA;EACA,uBAAA;EACA,kBAAA;AACF;AACE;EACE,yBAAA;AACJ;AACE;EACE,yBAAA;AACJ;AAEE;EACE,iBAAA;AAAJ\",\"sourcesContent\":[\".object-list-item {\\n  margin-bottom: 4px;\\n  padding: 4px;\\n  display: flex;\\n  justify-content: flex-start;\\n  align-items: center;\\n  user-select: none;\\n  cursor: pointer;\\n  padding: 0 4px;\\n  transition: all 0.3s;\\n  background: transparent;\\n  border-radius: 2px;\\n\\n  &:hover {\\n    background-color: #f5f5f5;\\n  }\\n  &.selected {\\n    background-color: #bae7ff;\\n  }\\n\\n  & > :first-child {\\n    margin-right: 8px;\\n  }\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--5-oneOf-9-2!./ObjectExpandTable.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".object-expand-table .expand-part {\\n  background-color: #f0f0f0;\\n  margin-right: 24px;\\n  height: 100%;\\n  overflow-y: auto;\\n}\\n.object-expand-table .expand-part .ant-pro-card-body {\\n  padding: 12px;\\n}\\n.object-expand-table .expand-part .ant-pro-card-body .ant-tree {\\n  background-color: #f0f0f0;\\n}\\n.object-expand-table .table-part .ant-card-body {\\n  padding: 0;\\n}\\n.object-expand-table .table-part .ant-table-tbody > tr:last-child > td {\\n  border: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://../builder-object/src/components/ObjectExpandTable.less\"],\"names\":[],\"mappings\":\"AAsCA;EAEI,yBAAA;EACA,kBAAA;EACA,YAAA;EACA,gBAAA;AAtCJ;AAiCA;EAOM,aAAA;AArCN;AA8BA;EASQ,yBAAA;AApCR;AA2BA;EAeM,UAAA;AAvCN;AAwBA;EAkBM,YAAA;AAvCN\",\"sourcesContent\":[\"// .object-expand-table {\\n//   > .ant-pro-card-body {\\n//     position: relative;\\n//   }\\n//   .expand-part {\\n//     margin-right: 12px;\\n//     background-color: rgb(240, 240, 240);\\n//     height: 100%;\\n//     overflow-x: hidden;\\n//     display: inlin;\\n//     position: absolute;\\n//     .ant-tree {\\n//       background: transparent;\\n//     }\\n//     .ant-pro-card-body {\\n//       padding: 12px;\\n//       padding-left: 4px;\\n//     }\\n//   }\\n\\n//   .table-part {\\n//     padding-left: 12px;\\n//     margin-left: 30%;\\n//     .ant-pro-table-search {\\n//       margin-bottom: 0;\\n//       padding-left: 0;\\n//       padding-right: 0;\\n//       padding-top: 12px;\\n//     }\\n//     .ant-card-body {\\n//       padding-right: 0;\\n//     }\\n//     .ant-table-tbody > tr:last-child > td {\\n//       border: none;\\n//     }\\n//   }\\n// }\\n\\n.object-expand-table{\\n  .expand-part{\\n    background-color: rgb(240, 240, 240);\\n    margin-right: 24px;\\n    height: 100%;\\n    overflow-y: auto;\\n    .ant-pro-card-body{\\n      padding: 12px;\\n      .ant-tree{\\n        background-color: rgb(240, 240, 240);\\n      }\\n    }\\n  }\\n  .table-part{\\n    .ant-card-body{\\n      padding: 0;\\n    }\\n    .ant-table-tbody > tr:last-child > td {\\n      border: none;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--5-oneOf-9-2!./lookup.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ant-select .ant-select-selection-item {\\n  display: flex;\\n}\\n.ant-select .ant-select-selection-item .anticon-smile {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding-right: 7px;\\n}\\n.ant-select .ant-select-selection-item .ant-select-selection-item-content {\\n  display: flex;\\n}\\n.ant-select-dropdown .rc-virtual-list-holder-inner .ant-select-item-option-content {\\n  display: flex;\\n}\\n.ant-select-dropdown .rc-virtual-list-holder-inner .ant-select-item-option-content .anticon-smile {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding-right: 7px;\\n}\\n.ant-select-selector .ant-select-selection-overflow-item .ant-select-selection-item-remove {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.ant-select .ant-select-clear {\\n  margin-top: -8px;\\n}\\n.ant-row .ant-form-item-control-input .ant-select-selector .anticon-smile {\\n  margin-top: 2px;\\n}\\n.ant-row .ant-form-item-control-input .ant-select-selector .left_label {\\n  display: none;\\n}\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content {\\n  display: flex;\\n}\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content .left_label_menu {\\n  width: 55px;\\n  margin-right: -1px;\\n}\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content .left_label_menu .ant-select-selector {\\n  border-radius: 2px 0 0 2px;\\n}\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content .left_label_menu:hover .ant-select-selector,\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content .left_label_menu:active .ant-select-selector,\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content .left_label_menu.ant-select-focused .ant-select-selector {\\n  z-index: 1;\\n}\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content .left_label_menu:hover .ant-select-arrow,\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content .left_label_menu:active .ant-select-arrow,\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content .left_label_menu.ant-select-focused .ant-select-arrow {\\n  z-index: 2;\\n}\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content .left_label_menu + .ant-pro-filed-search-select {\\n  flex: auto;\\n}\\n.mode-edit .ant-form-item-control .ant-form-item-control-input-content .left_label_menu + .ant-pro-filed-search-select .ant-select-selector {\\n  border-radius: 0 2px 2px 0;\\n}\\n.rc-virtual-list .rc-virtual-list-holder-inner .ant-select-item-option-selected {\\n  display: none;\\n}\\n.add_button {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  padding: 5px 12px;\\n  cursor: pointer;\\n}\\n.add_button .anticon {\\n  display: flex;\\n  align-items: center;\\n  padding: 0px 7px 0px 2px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://../builder-object/src/valueTypes/lookup.less\"],\"names\":[],\"mappings\":\"AACA;EAEQ,aAAA;AADR;AADA;EAKY,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;AADZ;AAPA;EAYY,aAAA;AAFZ;AAOA;EAGY,aAAA;AAPZ;AAIA;EAKgB,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;AANhB;AAYA;EAGY,aAAA;EACA,uBAAA;EACA,mBAAA;AAZZ;AAiBA;EAEQ,gBAAA;AAhBR;AAmBA;EAIgB,eAAA;AApBhB;AAgBA;EAOgB,aAAA;AApBhB;AA0BA;EAGY,aAAA;AA1BZ;AAuBA;EAKgB,WAAA;EACA,kBAAA;AAzBhB;AAmBA;EAQoB,0BAAA;AAxBpB;AAgBA;;;EAaoB,UAAA;AAxBpB;AAWA;;;EAgBoB,UAAA;AAtBpB;AAMA;EAoBgB,UAAA;AAvBhB;AAGA;EAsBoB,0BAAA;AAtBpB;AA6BA;EAGY,aAAA;AA7BZ;AAkCA;EACI,aAAA;EACA,iBAAA;EACA,iBAAA;EACA,eAAA;AAhCJ;AA4BA;EAMQ,aAAA;EACA,mBAAA;EACA,wBAAA;AA/BR\",\"sourcesContent\":[\"// 选中的选项附带的icon样式\\n.ant-select {\\n    .ant-select-selection-item{\\n        display: flex;\\n        // 单选\\n        .anticon-smile{\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            padding-right: 7px;\\n        }\\n        // 多选\\n        .ant-select-selection-item-content{\\n            display: flex;\\n        }\\n    }\\n}\\n// 下拉框中选项附带的icon样式\\n.ant-select-dropdown{\\n    .rc-virtual-list-holder-inner{\\n        .ant-select-item-option-content{\\n            display: flex;\\n            .anticon-smile{\\n                display: flex;\\n                justify-content: center;\\n                align-items: center;\\n                padding-right: 7px;\\n            }\\n        }\\n    }\\n}\\n// 多选时 删除 图标样式调整\\n.ant-select-selector{\\n    .ant-select-selection-overflow-item{\\n        .ant-select-selection-item-remove{\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n        }\\n    }\\n}\\n// 光标移到下拉框上时显示的右边删除图标 样式垂直居中调整\\n.ant-select{\\n    .ant-select-clear{\\n        margin-top: -8px;\\n    }\\n}\\n.ant-row{\\n    .ant-form-item-control-input{\\n        .ant-select-selector{\\n            .anticon-smile{\\n                margin-top:2px;\\n            }\\n            .left_label{\\n                display: none;\\n            }\\n        }\\n    }\\n}\\n// reference_to is array 两个联动的下拉框样式调整\\n.mode-edit{\\n    .ant-form-item-control{\\n        .ant-form-item-control-input-content{\\n            display:flex;\\n            .left_label_menu{\\n                width:55px;\\n                margin-right: -1px;\\n                .ant-select-selector{\\n                    border-radius: 2px 0 0 2px;\\n                }\\n            }\\n            .left_label_menu:hover,.left_label_menu:active,.left_label_menu.ant-select-focused{\\n                .ant-select-selector{\\n                    z-index: 1;\\n                }\\n                .ant-select-arrow{\\n                    z-index: 2;\\n                }\\n            }\\n            .left_label_menu + .ant-pro-filed-search-select{\\n                flex:auto;\\n                .ant-select-selector{\\n                    border-radius: 0 2px 2px 0;\\n                }\\n            }\\n        }\\n    }\\n}\\n// reference_to is not array 时选中的选项在下拉框中隐藏。\\n.rc-virtual-list{\\n    .rc-virtual-list-holder-inner{\\n        .ant-select-item-option-selected{\\n            display: none;\\n        }\\n    }\\n}\\n// 下拉框中增加新建xxx 的样式； 例如 “+新建合同 ”的样式\\n.add_button{\\n    display: flex;\\n    flex-wrap: nowrap;\\n    padding: 5px 12px;\\n    cursor: pointer;\\n    .anticon{\\n        display: flex;\\n        align-items: center;\\n        padding: 0px 7px 0px 2px;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--5-oneOf-9-2!./aggrid.less\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"sourceRoot":""}